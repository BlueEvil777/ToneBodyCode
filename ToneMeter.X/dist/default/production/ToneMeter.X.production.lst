

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Mar 26 02:24:12 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    51  0000                     
    52                           ; Version 2.10
    53                           ; Generated 31/07/2019 GMT
    54                           ; 
    55                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC18F2550 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     
    87                           	psect	idataBANK0
    88  002422                     __pidataBANK0:
    89                           	opt callstack 0
    90                           
    91                           ;initializer for _G_SPI_Api_u8Flags
    92  002422  07                 	db	7
    93                           
    94                           ;initializer for _ac
    95  002423  00                 	db	0
    96  002424  00                 	db	0
    97  002425  00                 	db	0
    98  002426  0A                 	db	10
    99  002427  15                 	db	21
   100  002428  00                 	db	0
   101  002429  00                 	db	0
   102  00242A  00                 	db	0
   103                           
   104                           ;initializer for _dc
   105  00242B  00                 	db	0
   106  00242C  00                 	db	0
   107  00242D  1F                 	db	31
   108  00242E  00                 	db	0
   109  00242F  00                 	db	0
   110  002430  1B                 	db	27
   111  002431  00                 	db	0
   112  002432  00                 	db	0
   113  0000                     _PORTC	set	3970
   114  0000                     _SSPSTATbits	set	4039
   115  0000                     _SSPCON1	set	4038
   116  0000                     _PIR1bits	set	3998
   117  0000                     _SSPBUF	set	4041
   118  0000                     _LATB	set	3978
   119  0000                     _TRISB	set	3987
   120  0000                     _LATC	set	3979
   121  0000                     _TRISC	set	3988
   122  0000                     _SSPCON1bits	set	4038
   123  0000                     _ADCON1bits	set	4033
   124  0000                     _OSCCONbits	set	4051
   125                           
   126                           	psect	smallconst
   127  000800                     __psmallconst:
   128                           	opt callstack 0
   129  000800  00                 	db	0
   130  000801                     STR_1:
   131  000801  48                 	db	72	;'H'
   132  000802  69                 	db	105	;'i'
   133  000803  21                 	db	33
   134  000804  20                 	db	32
   135  000805  49                 	db	73	;'I'
   136  000806  6E                 	db	110	;'n'
   137  000807  74                 	db	116	;'t'
   138  000808  3A                 	db	58	;':'
   139  000809  25                 	db	37
   140  00080A  6E                 	db	110	;'n'
   141  00080B  25                 	db	37
   142  00080C  32                 	db	50	;'2'
   143  00080D  66                 	db	102	;'f'
   144  00080E  20                 	db	32
   145  00080F  25                 	db	37
   146  000810  73                 	db	115	;'s'
   147  000811  20                 	db	32
   148  000812  25                 	db	37
   149  000813  63                 	db	99	;'c'
   150  000814  00                 	db	0
   151  000815                     STR_3:
   152  000815  53                 	db	83	;'S'
   153  000816  65                 	db	101	;'e'
   154  000817  63                 	db	99	;'c'
   155  000818  6F                 	db	111	;'o'
   156  000819  6E                 	db	110	;'n'
   157  00081A  64                 	db	100	;'d'
   158  00081B  73                 	db	115	;'s'
   159  00081C  3A                 	db	58	;':'
   160  00081D  20                 	db	32
   161  00081E  25                 	db	37
   162  00081F  64                 	db	100	;'d'
   163  000820  00                 	db	0
   164  000821                     STR_2:
   165  000821  50                 	db	80	;'P'
   166  000822  65                 	db	101	;'e'
   167  000823  77                 	db	119	;'w'
   168  000824  21                 	db	33
   169  000825  00                 	db	0
   170                           
   171                           ; #config settings
   172  000826  00                 	db	0	; dummy byte at the end
   173  0000                     
   174                           	psect	cinit
   175  002244                     __pcinit:
   176                           	opt callstack 0
   177  002244                     start_initialization:
   178                           	opt callstack 0
   179  002244                     __initialization:
   180                           	opt callstack 0
   181                           
   182                           ; Initialize objects allocated to BANK0 (17 bytes)
   183                           ; load TBLPTR registers with __pidataBANK0
   184  002244  0E22               	movlw	low __pidataBANK0
   185  002246  6EF6               	movwf	tblptrl,c
   186  002248  0E24               	movlw	high __pidataBANK0
   187  00224A  6EF7               	movwf	tblptrh,c
   188  00224C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   189  00224E  6EF8               	movwf	tblptru,c
   190  002250  EE00  F083         	lfsr	0,__pdataBANK0
   191  002254  EE10 F011          	lfsr	1,17
   192  002258                     copy_data0:
   193  002258  0009               	tblrd		*+
   194  00225A  CFF5 FFEE          	movff	tablat,postinc0
   195  00225E  50E5               	movf	postdec1,w,c
   196  002260  50E1               	movf	fsr1l,w,c
   197  002262  E1FA               	bnz	copy_data0
   198                           
   199                           ; Clear objects allocated to BANK1 (130 bytes)
   200  002264  EE01  F000         	lfsr	0,__pbssBANK1
   201  002268  0E82               	movlw	130
   202  00226A                     clear_0:
   203  00226A  6AEE               	clrf	postinc0,c
   204  00226C  06E8               	decf	wreg,f,c
   205  00226E  E1FD               	bnz	clear_0
   206                           
   207                           ; Clear objects allocated to BANK0 (35 bytes)
   208  002270  EE00  F060         	lfsr	0,__pbssBANK0
   209  002274  0E23               	movlw	35
   210  002276                     clear_1:
   211  002276  6AEE               	clrf	postinc0,c
   212  002278  06E8               	decf	wreg,f,c
   213  00227A  E1FD               	bnz	clear_1
   214  00227C                     end_of_initialization:
   215                           	opt callstack 0
   216  00227C                     __end_of__initialization:
   217                           	opt callstack 0
   218  00227C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   219  00227E  6EF8               	movwf	tblptru,c
   220  002280  0100               	movlb	0
   221  002282  EF00  F011         	goto	_main	;jump to C main() function
   222                           
   223                           	psect	bssBANK0
   224  000060                     __pbssBANK0:
   225                           	opt callstack 0
   226  000060                     	ds	17
   227  000071                     _slot:
   228                           	opt callstack 0
   229  000071                     	ds	2
   230  000073                     _head:
   231                           	opt callstack 0
   232  000073                     	ds	2
   233  000075                     ___en_pin:
   234                           	opt callstack 0
   235  000075                     	ds	1
   236  000076                     OledApi@_displaymode:
   237                           	opt callstack 0
   238  000076                     	ds	1
   239  000077                     OledApi@_displaycontrol:
   240                           	opt callstack 0
   241  000077                     	ds	1
   242  000078                     OledApi@_displayfunction:
   243                           	opt callstack 0
   244  000078                     	ds	1
   245  000079                     main@count:
   246                           	opt callstack 0
   247  000079                     	ds	1
   248  00007A                     	ds	1
   249  00007B                     	ds	1
   250  00007C                     	ds	1
   251  00007D                     ___config:
   252                           	opt callstack 0
   253  00007D                     	ds	3
   254  000080                     ___SPIconfig:
   255                           	opt callstack 0
   256  000080                     	ds	3
   257                           
   258                           	psect	dataBANK0
   259  000083                     __pdataBANK0:
   260                           	opt callstack 0
   261  000083                     _G_SPI_Api_u8Flags:
   262                           	opt callstack 0
   263  000083                     	ds	1
   264  000084                     _ac:
   265                           	opt callstack 0
   266  000084                     	ds	8
   267  00008C                     _dc:
   268                           	opt callstack 0
   269  00008C                     	ds	8
   270                           
   271                           	psect	bssBANK1
   272  000100                     __pbssBANK1:
   273                           	opt callstack 0
   274  000100                     _builtin:
   275                           	opt callstack 0
   276  000100                     	ds	130
   277                           
   278                           	psect	cstackBANK0
   279  000094                     __pcstackBANK0:
   280                           	opt callstack 0
   281  000094                     ??_setup:
   282                           
   283                           ; 1 bytes @ 0x0
   284  000094                     	ds	2
   285  000096                     ??_main:
   286                           
   287                           ; 1 bytes @ 0x2
   288  000096                     	ds	2
   289                           
   290                           	psect	cstackCOMRAM
   291  000001                     __pcstackCOMRAM:
   292                           	opt callstack 0
   293  000001                     ?___fladd:
   294                           	opt callstack 0
   295  000001                     ?___flmul:
   296                           	opt callstack 0
   297  000001                     ?___aldiv:
   298                           	opt callstack 0
   299  000001                     ?___almod:
   300                           	opt callstack 0
   301  000001                     ?___fltol:
   302                           	opt callstack 0
   303  000001                     ?___xxtofl:
   304                           	opt callstack 0
   305  000001                     DIGITAL_WRITE@pin:
   306                           	opt callstack 0
   307  000001                     __Exit@ec:
   308                           	opt callstack 0
   309  000001                     call@p:
   310                           	opt callstack 0
   311  000001                     ___aldiv@dividend:
   312                           	opt callstack 0
   313  000001                     ___almod@dividend:
   314                           	opt callstack 0
   315  000001                     ___fltol@f1:
   316                           	opt callstack 0
   317  000001                     ___fladd@b:
   318                           	opt callstack 0
   319  000001                     ___flmul@b:
   320                           	opt callstack 0
   321  000001                     ___xxtofl@val:
   322                           	opt callstack 0
   323                           
   324                           ; 4 bytes @ 0x0
   325  000001                     	ds	1
   326  000002                     DIGITAL_WRITE@val:
   327                           	opt callstack 0
   328                           
   329                           ; 1 bytes @ 0x1
   330  000002                     	ds	1
   331  000003                     ??___funcs_on_exit:
   332  000003                     DIGITAL_WRITE@port:
   333                           	opt callstack 0
   334                           
   335                           ; 1 bytes @ 0x2
   336  000003                     	ds	1
   337  000004                     ??_SPI_Api_begin:
   338  000004                     ??_SPI_Api_end:
   339  000004                     ??_SPI_Api_sendBit:
   340  000004                     SPI_Api_setSpiDevice@_config:
   341                           	opt callstack 0
   342                           
   343                           ; 3 bytes @ 0x3
   344  000004                     	ds	1
   345  000005                     ??___fltol:
   346  000005                     ??___xxtofl:
   347  000005                     SPI_Api_sendBit@val:
   348                           	opt callstack 0
   349  000005                     ___aldiv@divisor:
   350                           	opt callstack 0
   351  000005                     ___almod@divisor:
   352                           	opt callstack 0
   353  000005                     ___fladd@a:
   354                           	opt callstack 0
   355  000005                     ___flmul@a:
   356                           	opt callstack 0
   357                           
   358                           ; 4 bytes @ 0x4
   359  000005                     	ds	1
   360  000006                     SPI_Api_sendWord@word:
   361                           	opt callstack 0
   362                           
   363                           ; 4 bytes @ 0x5
   364  000006                     	ds	1
   365  000007                     SPI_Api_setSpiDevice@mask:
   366                           	opt callstack 0
   367  000007                     ___funcs_on_exit@func:
   368                           	opt callstack 0
   369                           
   370                           ; 2 bytes @ 0x6
   371  000007                     	ds	2
   372  000009                     ??___fladd:
   373  000009                     ??___flmul:
   374  000009                     ___aldiv@counter:
   375                           	opt callstack 0
   376  000009                     ___almod@counter:
   377                           	opt callstack 0
   378  000009                     ___fltol@sign1:
   379                           	opt callstack 0
   380  000009                     ___xxtofl@sign:
   381                           	opt callstack 0
   382  000009                     ___funcs_on_exit@arg:
   383                           	opt callstack 0
   384                           
   385                           ; 2 bytes @ 0x8
   386  000009                     	ds	1
   387  00000A                     ??_SPI_Api_sendWord:
   388  00000A                     ___aldiv@sign:
   389                           	opt callstack 0
   390  00000A                     ___almod@sign:
   391                           	opt callstack 0
   392  00000A                     ___fltol@exp1:
   393                           	opt callstack 0
   394  00000A                     ___xxtofl@exp:
   395                           	opt callstack 0
   396                           
   397                           ; 1 bytes @ 0x9
   398  00000A                     	ds	1
   399  00000B                     exit@code:
   400                           	opt callstack 0
   401  00000B                     ___aldiv@quotient:
   402                           	opt callstack 0
   403  00000B                     ___xxtofl@arg:
   404                           	opt callstack 0
   405                           
   406                           ; 4 bytes @ 0xA
   407  00000B                     	ds	2
   408  00000D                     ___fladd@signs:
   409                           	opt callstack 0
   410  00000D                     ___flmul@sign:
   411                           	opt callstack 0
   412                           
   413                           ; 1 bytes @ 0xC
   414  00000D                     	ds	1
   415  00000E                     ___fladd@aexp:
   416                           	opt callstack 0
   417  00000E                     SPI_Api_sendWord@mask:
   418                           	opt callstack 0
   419  00000E                     ___flmul@grs:
   420                           	opt callstack 0
   421                           
   422                           ; 4 bytes @ 0xD
   423  00000E                     	ds	1
   424  00000F                     ___fladd@bexp:
   425                           	opt callstack 0
   426                           
   427                           ; 1 bytes @ 0xE
   428  00000F                     	ds	1
   429  000010                     ___fladd@grs:
   430                           	opt callstack 0
   431                           
   432                           ; 1 bytes @ 0xF
   433  000010                     	ds	1
   434  000011                     ?___flsub:
   435                           	opt callstack 0
   436  000011                     ___flsub@b:
   437                           	opt callstack 0
   438                           
   439                           ; 4 bytes @ 0x10
   440  000011                     	ds	1
   441  000012                     ___flmul@aexp:
   442                           	opt callstack 0
   443  000012                     send@buf:
   444                           	opt callstack 0
   445                           
   446                           ; 2 bytes @ 0x11
   447  000012                     	ds	1
   448  000013                     ___flmul@bexp:
   449                           	opt callstack 0
   450                           
   451                           ; 1 bytes @ 0x12
   452  000013                     	ds	1
   453  000014                     send@count:
   454                           	opt callstack 0
   455  000014                     ___flmul@prod:
   456                           	opt callstack 0
   457                           
   458                           ; 4 bytes @ 0x13
   459  000014                     	ds	1
   460  000015                     ___flsub@a:
   461                           	opt callstack 0
   462                           
   463                           ; 4 bytes @ 0x14
   464  000015                     	ds	1
   465  000016                     ??_send:
   466                           
   467                           ; 1 bytes @ 0x15
   468  000016                     	ds	2
   469  000018                     ___flmul@temp:
   470                           	opt callstack 0
   471                           
   472                           ; 2 bytes @ 0x17
   473  000018                     	ds	1
   474  000019                     send@mode:
   475                           	opt callstack 0
   476  000019                     ___flge@ff1:
   477                           	opt callstack 0
   478                           
   479                           ; 4 bytes @ 0x18
   480  000019                     	ds	1
   481  00001A                     send@word:
   482                           	opt callstack 0
   483                           
   484                           ; 4 bytes @ 0x19
   485  00001A                     	ds	3
   486  00001D                     ___flge@ff2:
   487                           	opt callstack 0
   488                           
   489                           ; 4 bytes @ 0x1C
   490  00001D                     	ds	1
   491  00001E                     send@p:
   492                           	opt callstack 0
   493                           
   494                           ; 2 bytes @ 0x1D
   495  00001E                     	ds	2
   496  000020                     send@head_sent:
   497                           	opt callstack 0
   498                           
   499                           ; 1 bytes @ 0x1F
   500  000020                     	ds	1
   501  000021                     ??___flge:
   502  000021                     command@value:
   503                           	opt callstack 0
   504  000021                     write@value:
   505                           	opt callstack 0
   506  000021                     writeStr@value:
   507                           	opt callstack 0
   508                           
   509                           ; 2 bytes @ 0x20
   510  000021                     	ds	1
   511  000022                     ??_OledApi_clear:
   512  000022                     OledApi_setCursor@row:
   513                           	opt callstack 0
   514  000022                     OledApi_printSpec@schar:
   515                           	opt callstack 0
   516  000022                     OledApi_createChar@charmap:
   517                           	opt callstack 0
   518                           
   519                           ; 2 bytes @ 0x21
   520  000022                     	ds	1
   521  000023                     begin@rows:
   522                           	opt callstack 0
   523  000023                     OledApi_setCursor@col:
   524                           	opt callstack 0
   525  000023                     writeStr@len:
   526                           	opt callstack 0
   527                           
   528                           ; 1 bytes @ 0x22
   529  000023                     	ds	1
   530  000024                     ??_begin:
   531  000024                     OledApi_createChar@location:
   532                           	opt callstack 0
   533  000024                     _OledApi_setCursor$290:
   534                           	opt callstack 0
   535                           
   536                           ; 2 bytes @ 0x23
   537  000024                     	ds	1
   538  000025                     OledApi_init@_enable:
   539                           	opt callstack 0
   540  000025                     OledApi_createChar@i:
   541                           	opt callstack 0
   542  000025                     OledApi_printNum@num:
   543                           	opt callstack 0
   544                           
   545                           ; 4 bytes @ 0x24
   546  000025                     	ds	1
   547  000026                     OledApi_printStr@s:
   548                           	opt callstack 0
   549                           
   550                           ; 2 bytes @ 0x25
   551  000026                     	ds	2
   552  000028                     ??_OledApi_printStr:
   553                           
   554                           ; 1 bytes @ 0x27
   555  000028                     	ds	1
   556  000029                     OledApi_printNum@dec:
   557                           	opt callstack 0
   558                           
   559                           ; 1 bytes @ 0x28
   560  000029                     	ds	1
   561  00002A                     ??_OledApi_printNum:
   562  00002A                     OledApi_printStr@count:
   563                           	opt callstack 0
   564                           
   565                           ; 1 bytes @ 0x29
   566  00002A                     	ds	3
   567  00002D                     OledApi_printNum@s:
   568                           	opt callstack 0
   569                           
   570                           ; 17 bytes @ 0x2C
   571  00002D                     	ds	17
   572  00003E                     OledApi_printNum@i:
   573                           	opt callstack 0
   574                           
   575                           ; 2 bytes @ 0x3D
   576  00003E                     	ds	2
   577  000040                     OledApi_printNum@fract:
   578                           	opt callstack 0
   579                           
   580                           ; 4 bytes @ 0x3F
   581  000040                     	ds	4
   582  000044                     OledApi_printNum@whole:
   583                           	opt callstack 0
   584                           
   585                           ; 4 bytes @ 0x43
   586  000044                     	ds	4
   587  000048                     OledApi_printNum@c:
   588                           	opt callstack 0
   589                           
   590                           ; 2 bytes @ 0x47
   591  000048                     	ds	2
   592  00004A                     ?_OledApi_printf:
   593                           	opt callstack 0
   594  00004A                     OledApi_printf@s:
   595                           	opt callstack 0
   596                           
   597                           ; 2 bytes @ 0x49
   598  00004A                     	ds	2
   599  00004C                     OledApi_printf@args:
   600                           	opt callstack 0
   601                           
   602                           ; 1 bytes @ 0x4B
   603  00004C                     	ds	9
   604  000055                     ??_OledApi_printf:
   605                           
   606                           ; 1 bytes @ 0x54
   607  000055                     	ds	2
   608  000057                     _OledApi_printf$1366:
   609                           	opt callstack 0
   610                           
   611                           ; 4 bytes @ 0x56
   612  000057                     	ds	4
   613  00005B                     OledApi_printf@findingSpec:
   614                           	opt callstack 0
   615                           
   616                           ; 1 bytes @ 0x5A
   617  00005B                     	ds	1
   618  00005C                     OledApi_printf@count:
   619                           	opt callstack 0
   620                           
   621                           ; 1 bytes @ 0x5B
   622  00005C                     	ds	1
   623  00005D                     OledApi_printf@dec:
   624                           	opt callstack 0
   625                           
   626                           ; 1 bytes @ 0x5C
   627  00005D                     	ds	1
   628  00005E                     OledApi_printf@list:
   629                           	opt callstack 0
   630                           
   631                           ; 2 bytes @ 0x5D
   632  00005E                     	ds	2
   633                           
   634 ;;
   635 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   636 ;;
   637 ;; *************** function _main *****************
   638 ;; Defined at:
   639 ;;		line 60 in file "main.c"
   640 ;; Parameters:    Size  Location     Type
   641 ;;		None
   642 ;; Auto vars:     Size  Location     Type
   643 ;;		None
   644 ;; Return value:  Size  Location     Type
   645 ;;                  1    wreg      void 
   646 ;; Registers used:
   647 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   648 ;; Tracked objects:
   649 ;;		On entry : 0/0
   650 ;;		On exit  : 0/0
   651 ;;		Unchanged: 0/0
   652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   653 ;;      Params:         0       0       0       0       0       0       0       0       0
   654 ;;      Locals:         0       0       0       0       0       0       0       0       0
   655 ;;      Temps:          0       2       0       0       0       0       0       0       0
   656 ;;      Totals:         0       2       0       0       0       0       0       0       0
   657 ;;Total ram usage:        2 bytes
   658 ;; Hardware stack levels required when called:   10
   659 ;; This function calls:
   660 ;;		_OledApi_clear
   661 ;;		_OledApi_printf
   662 ;;		_setup
   663 ;; This function is called by:
   664 ;;		Startup code after reset
   665 ;; This function uses a non-reentrant model
   666 ;;
   667                           
   668                           	psect	text0
   669  002200                     __ptext0:
   670                           	opt callstack 0
   671  002200                     _main:
   672                           	opt callstack 21
   673  002200                     
   674                           ;main.c: 62:     setup();
   675  002200  ECF4  F00F         	call	_setup	;wreg free
   676  002204                     l45:
   677                           
   678                           ;main.c: 66:         OledApi_printf("Seconds: %d", 1, (int)count++);
   679  002204  0E15               	movlw	low STR_3
   680  002206  6E4A               	movwf	OledApi_printf@s^0,c
   681  002208  0E08               	movlw	high STR_3
   682  00220A  6E4B               	movwf	(OledApi_printf@s+1)^0,c
   683  00220C  0E01               	movlw	1
   684  00220E  6E4C               	movwf	OledApi_printf@args^0,c
   685  002210  C079  F04D         	movff	main@count,?_OledApi_printf+3
   686  002214  6A4E               	clrf	(?_OledApi_printf+4)^0,c
   687  002216  EC71  F00A         	call	_OledApi_printf	;wreg free
   688  00221A  0100               	movlb	0	; () banked
   689  00221C  2B79               	incf	main@count& (0+255),f,b
   690  00221E                     
   691                           ; BSR set to: 0
   692                           ;main.c: 67:         _delay((unsigned long)((1000)*(8000000/4000.0)));
   693  00221E  0E0B               	movlw	11
   694  002220  0100               	movlb	0	; () banked
   695  002222  6F97               	movwf	(??_main+1)& (0+255),b
   696  002224  0E26               	movlw	38
   697  002226  6F96               	movwf	??_main& (0+255),b
   698  002228  0E5D               	movlw	93
   699  00222A                     u3057:
   700  00222A  2EE8               	decfsz	wreg,f,c
   701  00222C  D7FE               	bra	u3057
   702  00222E  2F96               	decfsz	??_main& (0+255),f,b
   703  002230  D7FC               	bra	u3057
   704  002232  2F97               	decfsz	(??_main+1)& (0+255),f,b
   705  002234  D7FA               	bra	u3057
   706  002236  D000               	nop2	
   707  002238                     
   708                           ;main.c: 68:         OledApi_clear();
   709  002238  ECC4  F011         	call	_OledApi_clear	;wreg free
   710  00223C  EF02  F011         	goto	l45
   711  002240  EF00  F000         	goto	start
   712  002244                     __end_of_main:
   713                           	opt callstack 0
   714                           
   715 ;; *************** function _setup *****************
   716 ;; Defined at:
   717 ;;		line 45 in file "main.c"
   718 ;; Parameters:    Size  Location     Type
   719 ;;		None
   720 ;; Auto vars:     Size  Location     Type
   721 ;;		None
   722 ;; Return value:  Size  Location     Type
   723 ;;                  1    wreg      void 
   724 ;; Registers used:
   725 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   726 ;; Tracked objects:
   727 ;;		On entry : 0/0
   728 ;;		On exit  : 0/0
   729 ;;		Unchanged: 0/0
   730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   731 ;;      Params:         0       0       0       0       0       0       0       0       0
   732 ;;      Locals:         0       0       0       0       0       0       0       0       0
   733 ;;      Temps:          0       2       0       0       0       0       0       0       0
   734 ;;      Totals:         0       2       0       0       0       0       0       0       0
   735 ;;Total ram usage:        2 bytes
   736 ;; Hardware stack levels used:    1
   737 ;; Hardware stack levels required when called:    9
   738 ;; This function calls:
   739 ;;		_OledApi_createChar
   740 ;;		_OledApi_init
   741 ;;		_OledApi_printf
   742 ;; This function is called by:
   743 ;;		_main
   744 ;; This function uses a non-reentrant model
   745 ;;
   746                           
   747                           	psect	text1
   748  001FE8                     __ptext1:
   749                           	opt callstack 0
   750  001FE8                     _setup:
   751                           	opt callstack 21
   752  001FE8                     
   753                           ;main.c: 47:     OSCCONbits.IRCF = 111;
   754  001FE8  0E70               	movlw	112
   755  001FEA  12D3               	iorwf	211,f,c	;volatile
   756                           
   757                           ;main.c: 49:     ADCON1bits.PCFG = 0b1111;
   758  001FEC  0E0F               	movlw	15
   759  001FEE  12C1               	iorwf	193,f,c	;volatile
   760  001FF0                     
   761                           ;main.c: 50:     SSPCON1bits.SSPEN = 1;
   762  001FF0  8AC6               	bsf	198,5,c	;volatile
   763                           
   764                           ;main.c: 51:     SSPCON1bits.SSPM = 0b0010;
   765  001FF2  50C6               	movf	198,w,c	;volatile
   766  001FF4  0BF0               	andlw	-16
   767  001FF6  0902               	iorlw	2
   768  001FF8  6EC6               	movwf	198,c	;volatile
   769  001FFA                     
   770                           ;main.c: 52:     OledApi_init(0b1000000);
   771  001FFA  0E40               	movlw	64
   772  001FFC  EC8B  F011         	call	_OledApi_init
   773  002000                     
   774                           ;main.c: 54:     OledApi_printf("Hi! Int:%n%2f %s %c", 3, 12.6, "Pew!", 0);
   775  002000  0E01               	movlw	low STR_1
   776  002002  6E4A               	movwf	OledApi_printf@s^0,c
   777  002004  0E08               	movlw	high STR_1
   778  002006  6E4B               	movwf	(OledApi_printf@s+1)^0,c
   779  002008  0E03               	movlw	3
   780  00200A  6E4C               	movwf	OledApi_printf@args^0,c
   781  00200C  0E9A               	movlw	154
   782  00200E  6E4D               	movwf	(?_OledApi_printf+3)^0,c
   783  002010  0E99               	movlw	153
   784  002012  6E4E               	movwf	(?_OledApi_printf+4)^0,c
   785  002014  0E49               	movlw	73
   786  002016  6E4F               	movwf	(?_OledApi_printf+5)^0,c
   787  002018  0E41               	movlw	65
   788  00201A  6E50               	movwf	(?_OledApi_printf+6)^0,c
   789  00201C  0E21               	movlw	low STR_2
   790  00201E  6E51               	movwf	(?_OledApi_printf+7)^0,c
   791  002020  0E08               	movlw	high STR_2
   792  002022  6E52               	movwf	(?_OledApi_printf+8)^0,c
   793  002024  0E00               	movlw	0
   794  002026  6E54               	movwf	(?_OledApi_printf+10)^0,c
   795  002028  0E00               	movlw	0
   796  00202A  6E53               	movwf	(?_OledApi_printf+9)^0,c
   797  00202C  EC71  F00A         	call	_OledApi_printf	;wreg free
   798  002030                     
   799                           ;main.c: 55:     _delaywdt((unsigned long)((2000)*(8000000/4000.0)));
   800  002030  0E10               	movlw	16
   801  002032  0100               	movlb	0	; () banked
   802  002034  6F95               	movwf	(??_setup+1)& (0+255),b
   803  002036  0E3B               	movlw	59
   804  002038  6F94               	movwf	??_setup& (0+255),b
   805  00203A  0E99               	movlw	153
   806  00203C                     u3067:
   807  00203C  0004               	clrwdt	
   808  00203E  2EE8               	decfsz	wreg,f,c
   809  002040  D7FD               	bra	u3067
   810  002042  2F94               	decfsz	??_setup& (0+255),f,b
   811  002044  D7FB               	bra	u3067
   812  002046  2F95               	decfsz	(??_setup+1)& (0+255),f,b
   813  002048  D7F9               	bra	u3067
   814  00204A  0004               	clrwdt	
   815  00204C                     
   816                           ;main.c: 56:     OledApi_createChar(0, dc);
   817  00204C  0E8C               	movlw	low _dc
   818  00204E  6E22               	movwf	OledApi_createChar@charmap^0,c
   819  002050  0E00               	movlw	high _dc
   820  002052  6E23               	movwf	(OledApi_createChar@charmap+1)^0,c
   821  002054  0E00               	movlw	0
   822  002056  EC6D  F010         	call	_OledApi_createChar
   823  00205A                     
   824                           ;main.c: 57:     OledApi_createChar(1, ac);
   825  00205A  0E84               	movlw	low _ac
   826  00205C  6E22               	movwf	OledApi_createChar@charmap^0,c
   827  00205E  0E00               	movlw	high _ac
   828  002060  6E23               	movwf	(OledApi_createChar@charmap+1)^0,c
   829  002062  0E01               	movlw	1
   830  002064  EC6D  F010         	call	_OledApi_createChar
   831  002068  0012               	return		;funcret
   832  00206A                     __end_of_setup:
   833                           	opt callstack 0
   834                           
   835 ;; *************** function _OledApi_printf *****************
   836 ;; Defined at:
   837 ;;		line 179 in file "OledApi.c"
   838 ;; Parameters:    Size  Location     Type
   839 ;;  s               2   73[COMRAM] PTR unsigned char 
   840 ;;		 -> STR_3(12), STR_1(20), 
   841 ;;  args            1   75[COMRAM] unsigned char 
   842 ;; Auto vars:     Size  Location     Type
   843 ;;  dec             1   92[COMRAM] unsigned char 
   844 ;;  findingSpec     1   90[COMRAM] unsigned char 
   845 ;;  list            2   93[COMRAM] PTR void [1]
   846 ;;		 -> ?_OledApi_printf(1), 
   847 ;;  count           1   91[COMRAM] unsigned char 
   848 ;; Return value:  Size  Location     Type
   849 ;;                  1    wreg      void 
   850 ;; Registers used:
   851 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   852 ;; Tracked objects:
   853 ;;		On entry : 0/0
   854 ;;		On exit  : 0/0
   855 ;;		Unchanged: 0/0
   856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   857 ;;      Params:        11       0       0       0       0       0       0       0       0
   858 ;;      Locals:         9       0       0       0       0       0       0       0       0
   859 ;;      Temps:          2       0       0       0       0       0       0       0       0
   860 ;;      Totals:        22       0       0       0       0       0       0       0       0
   861 ;;Total ram usage:       22 bytes
   862 ;; Hardware stack levels used:    1
   863 ;; Hardware stack levels required when called:    7
   864 ;; This function calls:
   865 ;;		_OledApi_printNum
   866 ;;		_OledApi_printSpec
   867 ;;		_OledApi_printStr
   868 ;;		_OledApi_setCursor
   869 ;;		___xxtofl
   870 ;;		_exit
   871 ;;		_write
   872 ;; This function is called by:
   873 ;;		_setup
   874 ;;		_main
   875 ;; This function uses a non-reentrant model
   876 ;;
   877                           
   878                           	psect	text2
   879  0014E2                     __ptext2:
   880                           	opt callstack 0
   881  0014E2                     _OledApi_printf:
   882                           	opt callstack 22
   883  0014E2                     
   884                           ;OledApi.c: 179: void OledApi_printf(char* s, uint8_t args, ...);OledApi.c: 180: {;OledA
      +                          pi.c: 181:     uint8_t count = 0;
   885  0014E2  0E00               	movlw	0
   886  0014E4  6E5C               	movwf	OledApi_printf@count^0,c
   887  0014E6                     
   888                           ;OledApi.c: 182:     va_list list;;OledApi.c: 183:     *list = __va_start();
   889  0014E6  0E4D               	movlw	low (?_OledApi_printf+3)
   890  0014E8  6E5E               	movwf	OledApi_printf@list^0,c
   891  0014EA  0E00               	movlw	high (?_OledApi_printf+3)
   892  0014EC  6E5F               	movwf	(OledApi_printf@list+1)^0,c
   893                           
   894                           ;OledApi.c: 185:     while(*s)
   895  0014EE  EF68  F00B         	goto	l2993
   896  0014F2                     l2939:
   897                           
   898                           ;OledApi.c: 186:     {;OledApi.c: 187:         if(*s == '%')
   899  0014F2  C04A  FFF6         	movff	OledApi_printf@s,tblptrl
   900  0014F6  C04B  FFF7         	movff	OledApi_printf@s+1,tblptrh
   901  0014FA                     	if	0	;tblptru may be non-zero
   902  0014FA                     	endif
   903  0014FA                     	if	0	;tblptru may be non-zero
   904  0014FA                     	endif
   905  0014FA  0008               	tblrd		*
   906  0014FC  50F5               	movf	tablat,w,c
   907  0014FE  0A25               	xorlw	37
   908  001500  A4D8               	btfss	status,2,c
   909  001502  EF85  F00A         	goto	u2851
   910  001506  EF87  F00A         	goto	u2850
   911  00150A                     u2851:
   912  00150A  EF5E  F00B         	goto	l2989
   913  00150E                     u2850:
   914  00150E                     
   915                           ;OledApi.c: 188:         {;OledApi.c: 190:             if(count == args)
   916  00150E  504C               	movf	OledApi_printf@args^0,w,c
   917  001510  185C               	xorwf	OledApi_printf@count^0,w,c
   918  001512  A4D8               	btfss	status,2,c
   919  001514  EF8E  F00A         	goto	u2861
   920  001518  EF90  F00A         	goto	u2860
   921  00151C                     u2861:
   922  00151C  EF96  F00A         	goto	l2945
   923  001520                     u2860:
   924  001520                     
   925                           ;OledApi.c: 191:             {;OledApi.c: 192:                 exit(1);
   926  001520  0E00               	movlw	0
   927  001522  6E0C               	movwf	(exit@code+1)^0,c
   928  001524  0E01               	movlw	1
   929  001526  6E0B               	movwf	exit@code^0,c
   930  001528  EC08  F012         	call	_exit	;wreg free
   931  00152C                     l2945:
   932                           
   933                           ;OledApi.c: 194:             uint8_t dec = 0, findingSpec;
   934  00152C  0E00               	movlw	0
   935  00152E  6E5D               	movwf	OledApi_printf@dec^0,c
   936  001530                     l2947:
   937                           
   938                           ;OledApi.c: 196:             {;OledApi.c: 197:                 findingSpec = 0;
   939  001530  0E00               	movlw	0
   940  001532  6E5B               	movwf	OledApi_printf@findingSpec^0,c
   941                           
   942                           ;OledApi.c: 198:                 switch(*(++s))
   943  001534  EF2C  F00B         	goto	l2985
   944  001538                     l2949:
   945                           
   946                           ;OledApi.c: 201:                         OledApi_printNum((*(int *)__va_arg(*(int **)lis
      +                          t, (int)0)), dec);
   947  001538  C05E  FFD9         	movff	OledApi_printf@list,fsr2l
   948  00153C  C05F  FFDA         	movff	OledApi_printf@list+1,fsr2h
   949  001540  CFDE F001          	movff	postinc2,___xxtofl@val
   950  001544  CFDD F002          	movff	postdec2,___xxtofl@val+1
   951  001548  0E00               	movlw	0
   952  00154A  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
   953  00154C  0EFF               	movlw	-1
   954  00154E  6E03               	movwf	(___xxtofl@val+2)^0,c
   955  001550  6E04               	movwf	(___xxtofl@val+3)^0,c
   956  001552  0E01               	movlw	1
   957  001554  EC77  F00B         	call	___xxtofl
   958  001558  C001  F057         	movff	?___xxtofl,_OledApi_printf$1366
   959  00155C  C002  F058         	movff	?___xxtofl+1,_OledApi_printf$1366+1
   960  001560  C003  F059         	movff	?___xxtofl+2,_OledApi_printf$1366+2
   961  001564  C004  F05A         	movff	?___xxtofl+3,_OledApi_printf$1366+3
   962  001568                     
   963                           ;OledApi.c: 201:                         OledApi_printNum((*(int *)__va_arg(*(int **)lis
      +                          t, (int)0)), dec);
   964  001568  C057  F025         	movff	_OledApi_printf$1366,OledApi_printNum@num
   965  00156C  C058  F026         	movff	_OledApi_printf$1366+1,OledApi_printNum@num+1
   966  001570  C059  F027         	movff	_OledApi_printf$1366+2,OledApi_printNum@num+2
   967  001574  C05A  F028         	movff	_OledApi_printf$1366+3,OledApi_printNum@num+3
   968  001578  C05D  F029         	movff	OledApi_printf@dec,OledApi_printNum@dec
   969  00157C  EC89  F008         	call	_OledApi_printNum	;wreg free
   970  001580  0E02               	movlw	2
   971  001582  265E               	addwf	OledApi_printf@list^0,f,c
   972  001584  0E00               	movlw	0
   973  001586  225F               	addwfc	(OledApi_printf@list+1)^0,f,c
   974  001588                     l2955:
   975                           
   976                           ;OledApi.c: 202:                         count++;
   977  001588  2A5C               	incf	OledApi_printf@count^0,f,c
   978                           
   979                           ;OledApi.c: 203:                         break;
   980  00158A  EF54  F00B         	goto	l2987
   981  00158E                     l2957:
   982                           
   983                           ;OledApi.c: 205:                         OledApi_printNum((*(double *)__va_arg(*(double 
      +                          **)list, (double)0)), dec);
   984  00158E  C05E  FFD9         	movff	OledApi_printf@list,fsr2l
   985  001592  C05F  FFDA         	movff	OledApi_printf@list+1,fsr2h
   986  001596  CFDE F025          	movff	postinc2,OledApi_printNum@num
   987  00159A  CFDE F026          	movff	postinc2,OledApi_printNum@num+1
   988  00159E  CFDE F027          	movff	postinc2,OledApi_printNum@num+2
   989  0015A2  CFDE F028          	movff	postinc2,OledApi_printNum@num+3
   990  0015A6  C05D  F029         	movff	OledApi_printf@dec,OledApi_printNum@dec
   991  0015AA  EC89  F008         	call	_OledApi_printNum	;wreg free
   992  0015AE  0E04               	movlw	4
   993  0015B0  265E               	addwf	OledApi_printf@list^0,f,c
   994  0015B2  0E00               	movlw	0
   995  0015B4  225F               	addwfc	(OledApi_printf@list+1)^0,f,c
   996  0015B6  EFC4  F00A         	goto	l2955
   997  0015BA                     l2963:
   998                           
   999                           ;OledApi.c: 209:                         OledApi_setCursor(0,1);
  1000  0015BA  0E01               	movlw	1
  1001  0015BC  6E22               	movwf	OledApi_setCursor@row^0,c
  1002  0015BE  0E00               	movlw	0
  1003  0015C0  EC43  F011         	call	_OledApi_setCursor
  1004                           
  1005                           ;OledApi.c: 210:                         break;
  1006  0015C4  EF54  F00B         	goto	l2987
  1007  0015C8                     l2965:
  1008                           
  1009                           ;OledApi.c: 212:                         OledApi_printStr((*(uint8_t* *)__va_arg(*(uint8
      +                          _t* **)list, (uint8_t*)0)));
  1010  0015C8  C05E  FFD9         	movff	OledApi_printf@list,fsr2l
  1011  0015CC  C05F  FFDA         	movff	OledApi_printf@list+1,fsr2h
  1012  0015D0  CFDE F026          	movff	postinc2,OledApi_printStr@s
  1013  0015D4  CFDD F027          	movff	postdec2,OledApi_printStr@s+1
  1014  0015D8  ECA6  F00F         	call	_OledApi_printStr	;wreg free
  1015  0015DC  0E02               	movlw	2
  1016  0015DE  265E               	addwf	OledApi_printf@list^0,f,c
  1017  0015E0  0E00               	movlw	0
  1018  0015E2  225F               	addwfc	(OledApi_printf@list+1)^0,f,c
  1019  0015E4  EFC4  F00A         	goto	l2955
  1020  0015E8                     l2971:
  1021                           
  1022                           ;OledApi.c: 216:                         OledApi_printSpec((*(int *)__va_arg(*(int **)li
      +                          st, (int)0)));
  1023  0015E8  C05E  FFD9         	movff	OledApi_printf@list,fsr2l
  1024  0015EC  C05F  FFDA         	movff	OledApi_printf@list+1,fsr2h
  1025  0015F0  50DF               	movf	indf2,w,c
  1026  0015F2  ECA0  F011         	call	_OledApi_printSpec
  1027  0015F6  0E02               	movlw	2
  1028  0015F8  265E               	addwf	OledApi_printf@list^0,f,c
  1029  0015FA  0E00               	movlw	0
  1030  0015FC  225F               	addwfc	(OledApi_printf@list+1)^0,f,c
  1031  0015FE  EFC4  F00A         	goto	l2955
  1032  001602                     l2977:
  1033                           
  1034                           ;OledApi.c: 220:                         if(*s >= '0' && *s <= '9')
  1035  001602  C04A  FFF6         	movff	OledApi_printf@s,tblptrl
  1036  001606  C04B  FFF7         	movff	OledApi_printf@s+1,tblptrh
  1037  00160A                     	if	0	;tblptru may be non-zero
  1038  00160A                     	endif
  1039  00160A                     	if	0	;tblptru may be non-zero
  1040  00160A                     	endif
  1041  00160A  0E2F               	movlw	47
  1042  00160C  0008               	tblrd		*
  1043  00160E  64F5               	cpfsgt	tablat,c
  1044  001610  EF0C  F00B         	goto	u2871
  1045  001614  EF0E  F00B         	goto	u2870
  1046  001618                     u2871:
  1047  001618  EF54  F00B         	goto	l2987
  1048  00161C                     u2870:
  1049  00161C  C04A  FFF6         	movff	OledApi_printf@s,tblptrl
  1050  001620  C04B  FFF7         	movff	OledApi_printf@s+1,tblptrh
  1051  001624                     	if	0	;tblptru may be non-zero
  1052  001624                     	endif
  1053  001624                     	if	0	;tblptru may be non-zero
  1054  001624                     	endif
  1055  001624  0E3A               	movlw	58
  1056  001626  0008               	tblrd		*
  1057  001628  60F5               	cpfslt	tablat,c
  1058  00162A  EF19  F00B         	goto	u2881
  1059  00162E  EF1B  F00B         	goto	u2880
  1060  001632                     u2881:
  1061  001632  EF54  F00B         	goto	l2987
  1062  001636                     u2880:
  1063  001636                     
  1064                           ;OledApi.c: 221:                         {;OledApi.c: 222:                             f
      +                          indingSpec = 1;
  1065  001636  0E01               	movlw	1
  1066  001638  6E5B               	movwf	OledApi_printf@findingSpec^0,c
  1067  00163A                     
  1068                           ;OledApi.c: 223:                             dec = dec*10 + (*s-'0');
  1069  00163A  C04A  FFF6         	movff	OledApi_printf@s,tblptrl
  1070  00163E  C04B  FFF7         	movff	OledApi_printf@s+1,tblptrh
  1071  001642                     	if	0	;tblptru may be non-zero
  1072  001642                     	endif
  1073  001642                     	if	0	;tblptru may be non-zero
  1074  001642                     	endif
  1075  001642  0008               	tblrd		*
  1076  001644  CFF5 F055          	movff	tablat,??_OledApi_printf
  1077  001648  505D               	movf	OledApi_printf@dec^0,w,c
  1078  00164A  0D0A               	mullw	10
  1079  00164C  50F3               	movf	243,w,c
  1080  00164E  2455               	addwf	??_OledApi_printf^0,w,c
  1081  001650  0FD0               	addlw	208
  1082  001652  6E5D               	movwf	OledApi_printf@dec^0,c
  1083  001654  EF54  F00B         	goto	l2987
  1084  001658                     l2985:
  1085  001658  4A4A               	infsnz	OledApi_printf@s^0,f,c
  1086  00165A  2A4B               	incf	(OledApi_printf@s+1)^0,f,c
  1087  00165C  C04A  FFF6         	movff	OledApi_printf@s,tblptrl
  1088  001660  C04B  FFF7         	movff	OledApi_printf@s+1,tblptrh
  1089  001664                     	if	0	;tblptru may be non-zero
  1090  001664                     	endif
  1091  001664                     	if	0	;tblptru may be non-zero
  1092  001664                     	endif
  1093  001664  0008               	tblrd		*
  1094  001666  50F5               	movf	tablat,w,c
  1095  001668  6E55               	movwf	??_OledApi_printf^0,c
  1096  00166A  6A56               	clrf	(??_OledApi_printf+1)^0,c
  1097                           
  1098                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1099                           ; Switch size 1, requested type "simple"
  1100                           ; Number of cases is 1, Range of values is 0 to 0
  1101                           ; switch strategies available:
  1102                           ; Name         Instructions Cycles
  1103                           ; simple_byte            4     3 (average)
  1104                           ;	Chosen strategy is simple_byte
  1105  00166C  5056               	movf	(??_OledApi_printf+1)^0,w,c
  1106  00166E  0A00               	xorlw	0	; case 0
  1107  001670  B4D8               	btfsc	status,2,c
  1108  001672  EF3D  F00B         	goto	l3223
  1109  001676  EF01  F00B         	goto	l2977
  1110  00167A                     l3223:
  1111                           
  1112                           ; Switch size 1, requested type "simple"
  1113                           ; Number of cases is 5, Range of values is 99 to 115
  1114                           ; switch strategies available:
  1115                           ; Name         Instructions Cycles
  1116                           ; simple_byte           16     9 (average)
  1117                           ;	Chosen strategy is simple_byte
  1118  00167A  5055               	movf	??_OledApi_printf^0,w,c
  1119  00167C  0A63               	xorlw	99	; case 99
  1120  00167E  B4D8               	btfsc	status,2,c
  1121  001680  EFF4  F00A         	goto	l2971
  1122  001684  0A07               	xorlw	7	; case 100
  1123  001686  B4D8               	btfsc	status,2,c
  1124  001688  EF9C  F00A         	goto	l2949
  1125  00168C  0A02               	xorlw	2	; case 102
  1126  00168E  B4D8               	btfsc	status,2,c
  1127  001690  EFC7  F00A         	goto	l2957
  1128  001694  0A08               	xorlw	8	; case 110
  1129  001696  B4D8               	btfsc	status,2,c
  1130  001698  EFDD  F00A         	goto	l2963
  1131  00169C  0A1D               	xorlw	29	; case 115
  1132  00169E  B4D8               	btfsc	status,2,c
  1133  0016A0  EFE4  F00A         	goto	l2965
  1134  0016A4  EF01  F00B         	goto	l2977
  1135  0016A8                     l2987:
  1136                           
  1137                           ;OledApi.c: 226:             }while(findingSpec);
  1138  0016A8  505B               	movf	OledApi_printf@findingSpec^0,w,c
  1139  0016AA  A4D8               	btfss	status,2,c
  1140  0016AC  EF5A  F00B         	goto	u2891
  1141  0016B0  EF5C  F00B         	goto	u2890
  1142  0016B4                     u2891:
  1143  0016B4  EF98  F00A         	goto	l2947
  1144  0016B8                     u2890:
  1145  0016B8  EF66  F00B         	goto	l2991
  1146  0016BC                     l2989:
  1147                           
  1148                           ;OledApi.c: 229:         {;OledApi.c: 230:             write(*s);
  1149  0016BC  C04A  FFF6         	movff	OledApi_printf@s,tblptrl
  1150  0016C0  C04B  FFF7         	movff	OledApi_printf@s+1,tblptrh
  1151  0016C4                     	if	0	;tblptru may be non-zero
  1152  0016C4                     	endif
  1153  0016C4                     	if	0	;tblptru may be non-zero
  1154  0016C4                     	endif
  1155  0016C4  0008               	tblrd		*
  1156  0016C6  50F5               	movf	tablat,w,c
  1157  0016C8  ECE3  F011         	call	_write
  1158  0016CC                     l2991:
  1159                           
  1160                           ;OledApi.c: 232:         s++;
  1161  0016CC  4A4A               	infsnz	OledApi_printf@s^0,f,c
  1162  0016CE  2A4B               	incf	(OledApi_printf@s+1)^0,f,c
  1163  0016D0                     l2993:
  1164                           
  1165                           ;OledApi.c: 185:     while(*s)
  1166  0016D0  C04A  FFF6         	movff	OledApi_printf@s,tblptrl
  1167  0016D4  C04B  FFF7         	movff	OledApi_printf@s+1,tblptrh
  1168  0016D8                     	if	0	;tblptru may be non-zero
  1169  0016D8                     	endif
  1170  0016D8                     	if	0	;tblptru may be non-zero
  1171  0016D8                     	endif
  1172  0016D8  0008               	tblrd		*
  1173  0016DA  50F5               	movf	tablat,w,c
  1174  0016DC  0900               	iorlw	0
  1175  0016DE  A4D8               	btfss	status,2,c
  1176  0016E0  EF74  F00B         	goto	u2901
  1177  0016E4  EF76  F00B         	goto	u2900
  1178  0016E8                     u2901:
  1179  0016E8  EF79  F00A         	goto	l2939
  1180  0016EC                     u2900:
  1181  0016EC  0012               	return		;funcret
  1182  0016EE                     __end_of_OledApi_printf:
  1183                           	opt callstack 0
  1184                           
  1185 ;; *************** function _OledApi_printStr *****************
  1186 ;; Defined at:
  1187 ;;		line 294 in file "OledApi.c"
  1188 ;; Parameters:    Size  Location     Type
  1189 ;;  s               2   37[COMRAM] PTR const unsigned char 
  1190 ;;		 -> ?_OledApi_printf(1), STR_2(5), 
  1191 ;; Auto vars:     Size  Location     Type
  1192 ;;  count           1   41[COMRAM] unsigned char 
  1193 ;; Return value:  Size  Location     Type
  1194 ;;                  1    wreg      void 
  1195 ;; Registers used:
  1196 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1197 ;; Tracked objects:
  1198 ;;		On entry : 0/0
  1199 ;;		On exit  : 0/0
  1200 ;;		Unchanged: 0/0
  1201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1202 ;;      Params:         2       0       0       0       0       0       0       0       0
  1203 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1204 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1205 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1206 ;;Total ram usage:        5 bytes
  1207 ;; Hardware stack levels used:    1
  1208 ;; Hardware stack levels required when called:    6
  1209 ;; This function calls:
  1210 ;;		_OledApi_setCursor
  1211 ;;		_writeStr
  1212 ;; This function is called by:
  1213 ;;		_OledApi_printf
  1214 ;; This function uses a non-reentrant model
  1215 ;;
  1216                           
  1217                           	psect	text3
  1218  001F4C                     __ptext3:
  1219                           	opt callstack 0
  1220  001F4C                     _OledApi_printStr:
  1221                           	opt callstack 22
  1222  001F4C                     
  1223                           ;OledApi.c: 294: void OledApi_printStr(const char* s);OledApi.c: 295: {;OledApi.c: 296: 
      +                              uint8_t count = 0;
  1224  001F4C  0E00               	movlw	0
  1225  001F4E  6E2A               	movwf	OledApi_printStr@count^0,c
  1226                           
  1227                           ;OledApi.c: 297:     while(s[count])
  1228  001F50  EFAB  F00F         	goto	l2913
  1229  001F54                     l2911:
  1230                           
  1231                           ;OledApi.c: 298:     {;OledApi.c: 299:         count++;
  1232  001F54  2A2A               	incf	OledApi_printStr@count^0,f,c
  1233  001F56                     l2913:
  1234                           
  1235                           ;OledApi.c: 297:     while(s[count])
  1236  001F56  502A               	movf	OledApi_printStr@count^0,w,c
  1237  001F58  2426               	addwf	OledApi_printStr@s^0,w,c
  1238  001F5A  6E28               	movwf	??_OledApi_printStr^0,c
  1239  001F5C  0E00               	movlw	0
  1240  001F5E  2027               	addwfc	(OledApi_printStr@s+1)^0,w,c
  1241  001F60  6E29               	movwf	(??_OledApi_printStr+1)^0,c
  1242  001F62  C028  FFF6         	movff	??_OledApi_printStr,tblptrl
  1243  001F66  C029  FFF7         	movff	??_OledApi_printStr+1,tblptrh
  1244  001F6A  6AF8               	clrf	tblptru,c
  1245  001F6C  0E07               	movlw	(high __ramtop+-1)
  1246  001F6E  64F7               	cpfsgt	tblptrh,c
  1247  001F70  D003               	bra	u2827
  1248  001F72  0008               	tblrd		*
  1249  001F74  50F5               	movf	tablat,w,c
  1250  001F76  D005               	bra	u2820
  1251  001F78                     u2827:
  1252  001F78  CFF6 FFE9          	movff	tblptrl,fsr0l
  1253  001F7C  CFF7 FFEA          	movff	tblptrh,fsr0h
  1254  001F80  50EF               	movf	indf0,w,c
  1255  001F82                     u2820:
  1256  001F82  0900               	iorlw	0
  1257  001F84  A4D8               	btfss	status,2,c
  1258  001F86  EFC7  F00F         	goto	u2831
  1259  001F8A  EFC9  F00F         	goto	u2830
  1260  001F8E                     u2831:
  1261  001F8E  EFAA  F00F         	goto	l2911
  1262  001F92                     u2830:
  1263  001F92                     
  1264                           ;OledApi.c: 301:     if(count > 16)
  1265  001F92  0E10               	movlw	16
  1266  001F94  642A               	cpfsgt	OledApi_printStr@count^0,c
  1267  001F96  EFCF  F00F         	goto	u2841
  1268  001F9A  EFD1  F00F         	goto	u2840
  1269  001F9E                     u2841:
  1270  001F9E  EFEB  F00F         	goto	l2919
  1271  001FA2                     u2840:
  1272  001FA2                     
  1273                           ;OledApi.c: 302:     {;OledApi.c: 303:         writeStr(s, 16);
  1274  001FA2  C026  F021         	movff	OledApi_printStr@s,writeStr@value
  1275  001FA6  C027  F022         	movff	OledApi_printStr@s+1,writeStr@value+1
  1276  001FAA  0E10               	movlw	16
  1277  001FAC  6E23               	movwf	writeStr@len^0,c
  1278  001FAE  ECFD  F011         	call	_writeStr	;wreg free
  1279                           
  1280                           ;OledApi.c: 304:         OledApi_setCursor(0,1);
  1281  001FB2  0E01               	movlw	1
  1282  001FB4  6E22               	movwf	OledApi_setCursor@row^0,c
  1283  001FB6  0E00               	movlw	0
  1284  001FB8  EC43  F011         	call	_OledApi_setCursor
  1285                           
  1286                           ;OledApi.c: 305:         writeStr(s+16, count - 16);
  1287  001FBC  0E10               	movlw	16
  1288  001FBE  2426               	addwf	OledApi_printStr@s^0,w,c
  1289  001FC0  6E21               	movwf	writeStr@value^0,c
  1290  001FC2  0E00               	movlw	0
  1291  001FC4  2027               	addwfc	(OledApi_printStr@s+1)^0,w,c
  1292  001FC6  6E22               	movwf	(writeStr@value+1)^0,c
  1293  001FC8  502A               	movf	OledApi_printStr@count^0,w,c
  1294  001FCA  0FF0               	addlw	240
  1295  001FCC  6E23               	movwf	writeStr@len^0,c
  1296  001FCE  ECFD  F011         	call	_writeStr	;wreg free
  1297                           
  1298                           ;OledApi.c: 306:     }
  1299  001FD2  EFF3  F00F         	goto	l213
  1300  001FD6                     l2919:
  1301                           
  1302                           ;OledApi.c: 308:     {;OledApi.c: 309:         writeStr(s, count);
  1303  001FD6  C026  F021         	movff	OledApi_printStr@s,writeStr@value
  1304  001FDA  C027  F022         	movff	OledApi_printStr@s+1,writeStr@value+1
  1305  001FDE  C02A  F023         	movff	OledApi_printStr@count,writeStr@len
  1306  001FE2  ECFD  F011         	call	_writeStr	;wreg free
  1307  001FE6                     l213:
  1308  001FE6  0012               	return		;funcret
  1309  001FE8                     __end_of_OledApi_printStr:
  1310                           	opt callstack 0
  1311                           
  1312 ;; *************** function _OledApi_setCursor *****************
  1313 ;; Defined at:
  1314 ;;		line 83 in file "OledApi.c"
  1315 ;; Parameters:    Size  Location     Type
  1316 ;;  col             1    wreg     unsigned char 
  1317 ;;  row             1   33[COMRAM] unsigned char 
  1318 ;; Auto vars:     Size  Location     Type
  1319 ;;  col             1   34[COMRAM] unsigned char 
  1320 ;; Return value:  Size  Location     Type
  1321 ;;                  1    wreg      void 
  1322 ;; Registers used:
  1323 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1324 ;; Tracked objects:
  1325 ;;		On entry : 0/0
  1326 ;;		On exit  : 0/0
  1327 ;;		Unchanged: 0/0
  1328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1329 ;;      Params:         1       0       0       0       0       0       0       0       0
  1330 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1331 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1332 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1333 ;;Total ram usage:        4 bytes
  1334 ;; Hardware stack levels used:    1
  1335 ;; Hardware stack levels required when called:    5
  1336 ;; This function calls:
  1337 ;;		_command
  1338 ;; This function is called by:
  1339 ;;		_OledApi_printf
  1340 ;;		_OledApi_printStr
  1341 ;; This function uses a non-reentrant model
  1342 ;;
  1343                           
  1344                           	psect	text4
  1345  002286                     __ptext4:
  1346                           	opt callstack 0
  1347  002286                     _OledApi_setCursor:
  1348                           	opt callstack 23
  1349                           
  1350                           ;incstack = 0
  1351                           ;OledApi_setCursor@col stored from wreg
  1352  002286  6E23               	movwf	OledApi_setCursor@col^0,c
  1353  002288                     
  1354                           ;OledApi.c: 83: void OledApi_setCursor(uint8_t col, uint8_t row);OledApi.c: 84: {;OledAp
      +                          i.c: 87:  command(0x80 | (row ? 0x40 : 0x00) | (col & 0x3F));
  1355  002288  5022               	movf	OledApi_setCursor@row^0,w,c
  1356  00228A  A4D8               	btfss	status,2,c
  1357  00228C  EF4A  F011         	goto	u2131
  1358  002290  EF4C  F011         	goto	u2130
  1359  002294                     u2131:
  1360  002294  EF52  F011         	goto	l2471
  1361  002298                     u2130:
  1362  002298  0E00               	movlw	0
  1363  00229A  6E25               	movwf	(_OledApi_setCursor$290+1)^0,c
  1364  00229C  0E00               	movlw	0
  1365  00229E  6E24               	movwf	_OledApi_setCursor$290^0,c
  1366  0022A0  EF56  F011         	goto	l2473
  1367  0022A4                     l2471:
  1368  0022A4  0E00               	movlw	0
  1369  0022A6  6E25               	movwf	(_OledApi_setCursor$290+1)^0,c
  1370  0022A8  0E40               	movlw	64
  1371  0022AA  6E24               	movwf	_OledApi_setCursor$290^0,c
  1372  0022AC                     l2473:
  1373  0022AC  5023               	movf	OledApi_setCursor@col^0,w,c
  1374  0022AE  0B3F               	andlw	63
  1375  0022B0  1024               	iorwf	_OledApi_setCursor$290^0,w,c
  1376  0022B2  0980               	iorlw	128
  1377  0022B4  ECF0  F011         	call	_command
  1378  0022B8  0012               	return		;funcret
  1379  0022BA                     __end_of_OledApi_setCursor:
  1380                           	opt callstack 0
  1381                           
  1382 ;; *************** function _OledApi_printSpec *****************
  1383 ;; Defined at:
  1384 ;;		line 171 in file "OledApi.c"
  1385 ;; Parameters:    Size  Location     Type
  1386 ;;  schar           1    wreg     unsigned char 
  1387 ;; Auto vars:     Size  Location     Type
  1388 ;;  schar           1   33[COMRAM] unsigned char 
  1389 ;; Return value:  Size  Location     Type
  1390 ;;                  1    wreg      void 
  1391 ;; Registers used:
  1392 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
  1393 ;; Tracked objects:
  1394 ;;		On entry : 0/0
  1395 ;;		On exit  : 0/0
  1396 ;;		Unchanged: 0/0
  1397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1398 ;;      Params:         0       0       0       0       0       0       0       0       0
  1399 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1400 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1401 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1402 ;;Total ram usage:        1 bytes
  1403 ;; Hardware stack levels used:    1
  1404 ;; Hardware stack levels required when called:    5
  1405 ;; This function calls:
  1406 ;;		_exit
  1407 ;;		_write
  1408 ;; This function is called by:
  1409 ;;		_OledApi_printf
  1410 ;; This function uses a non-reentrant model
  1411 ;;
  1412                           
  1413                           	psect	text5
  1414  002340                     __ptext5:
  1415                           	opt callstack 0
  1416  002340                     _OledApi_printSpec:
  1417                           	opt callstack 23
  1418                           
  1419                           ;incstack = 0
  1420                           ;OledApi_printSpec@schar stored from wreg
  1421  002340  6E22               	movwf	OledApi_printSpec@schar^0,c
  1422  002342                     
  1423                           ;OledApi.c: 171: void OledApi_printSpec(uint8_t schar);OledApi.c: 172: {;OledApi.c: 173:
      +                               if(schar > 7){
  1424  002342  0E07               	movlw	7
  1425  002344  6422               	cpfsgt	OledApi_printSpec@schar^0,c
  1426  002346  EFA7  F011         	goto	u2681
  1427  00234A  EFA9  F011         	goto	u2680
  1428  00234E                     u2681:
  1429  00234E  EFAF  F011         	goto	l2839
  1430  002352                     u2680:
  1431  002352                     
  1432                           ;OledApi.c: 174:         exit(1);
  1433  002352  0E00               	movlw	0
  1434  002354  6E0C               	movwf	(exit@code+1)^0,c
  1435  002356  0E01               	movlw	1
  1436  002358  6E0B               	movwf	exit@code^0,c
  1437  00235A  EC08  F012         	call	_exit	;wreg free
  1438  00235E                     l2839:
  1439                           
  1440                           ;OledApi.c: 176:     write(schar);
  1441  00235E  5022               	movf	OledApi_printSpec@schar^0,w,c
  1442  002360  ECE3  F011         	call	_write
  1443  002364  0012               	return		;funcret
  1444  002366                     __end_of_OledApi_printSpec:
  1445                           	opt callstack 0
  1446                           
  1447 ;; *************** function _OledApi_printNum *****************
  1448 ;; Defined at:
  1449 ;;		line 238 in file "OledApi.c"
  1450 ;; Parameters:    Size  Location     Type
  1451 ;;  num             4   36[COMRAM] float 
  1452 ;;  dec             1   40[COMRAM] char 
  1453 ;; Auto vars:     Size  Location     Type
  1454 ;;  i               2   61[COMRAM] int 
  1455 ;;  s              17   44[COMRAM] unsigned char [17]
  1456 ;;  whole           4   67[COMRAM] long 
  1457 ;;  fract           4   63[COMRAM] long 
  1458 ;;  c               2   71[COMRAM] int 
  1459 ;; Return value:  Size  Location     Type
  1460 ;;                  1    wreg      void 
  1461 ;; Registers used:
  1462 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1463 ;; Tracked objects:
  1464 ;;		On entry : 0/0
  1465 ;;		On exit  : 0/0
  1466 ;;		Unchanged: 0/0
  1467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1468 ;;      Params:         5       0       0       0       0       0       0       0       0
  1469 ;;      Locals:        29       0       0       0       0       0       0       0       0
  1470 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1471 ;;      Totals:        37       0       0       0       0       0       0       0       0
  1472 ;;Total ram usage:       37 bytes
  1473 ;; Hardware stack levels used:    1
  1474 ;; Hardware stack levels required when called:    5
  1475 ;; This function calls:
  1476 ;;		___aldiv
  1477 ;;		___almod
  1478 ;;		___flge
  1479 ;;		___flmul
  1480 ;;		___flsub
  1481 ;;		___fltol
  1482 ;;		___xxtofl
  1483 ;;		_exit
  1484 ;;		_writeStr
  1485 ;; This function is called by:
  1486 ;;		_OledApi_printf
  1487 ;; This function uses a non-reentrant model
  1488 ;;
  1489                           
  1490                           	psect	text6
  1491  001112                     __ptext6:
  1492                           	opt callstack 0
  1493  001112                     _OledApi_printNum:
  1494                           	opt callstack 23
  1495  001112                     
  1496                           ;OledApi.c: 238: void OledApi_printNum(float num, int8_t dec);OledApi.c: 239: {;OledApi.
      +                          c: 240:     int32_t whole, fract;;OledApi.c: 241:     uint8_t s[17] = {};
  1497  001112  EE20  F02D         	lfsr	2,OledApi_printNum@s
  1498  001116  0E10               	movlw	16
  1499  001118                     u2691:
  1500  001118  6ADE               	clrf	postinc2,c
  1501  00111A  06E8               	decf	wreg,f,c
  1502  00111C  E2FD               	bc	u2691
  1503  00111E                     
  1504                           ;OledApi.c: 242:     int c = 16;
  1505  00111E  0E00               	movlw	0
  1506  001120  6E49               	movwf	(OledApi_printNum@c+1)^0,c
  1507  001122  0E10               	movlw	16
  1508  001124  6E48               	movwf	OledApi_printNum@c^0,c
  1509  001126                     
  1510                           ;OledApi.c: 244:     whole = (int32_t) num;
  1511  001126  C025  F001         	movff	OledApi_printNum@num,___fltol@f1
  1512  00112A  C026  F002         	movff	OledApi_printNum@num+1,___fltol@f1+1
  1513  00112E  C027  F003         	movff	OledApi_printNum@num+2,___fltol@f1+2
  1514  001132  C028  F004         	movff	OledApi_printNum@num+3,___fltol@f1+3
  1515  001136  ECD7  F00C         	call	___fltol	;wreg free
  1516  00113A  C001  F044         	movff	?___fltol,OledApi_printNum@whole
  1517  00113E  C002  F045         	movff	?___fltol+1,OledApi_printNum@whole+1
  1518  001142  C003  F046         	movff	?___fltol+2,OledApi_printNum@whole+2
  1519  001146  C004  F047         	movff	?___fltol+3,OledApi_printNum@whole+3
  1520  00114A                     
  1521                           ;OledApi.c: 245:     num -= whole;
  1522  00114A  C025  F011         	movff	OledApi_printNum@num,___flsub@b
  1523  00114E  C026  F012         	movff	OledApi_printNum@num+1,___flsub@b+1
  1524  001152  C027  F013         	movff	OledApi_printNum@num+2,___flsub@b+2
  1525  001156  C028  F014         	movff	OledApi_printNum@num+3,___flsub@b+3
  1526  00115A  C044  F001         	movff	OledApi_printNum@whole,___xxtofl@val
  1527  00115E  C045  F002         	movff	OledApi_printNum@whole+1,___xxtofl@val+1
  1528  001162  C046  F003         	movff	OledApi_printNum@whole+2,___xxtofl@val+2
  1529  001166  C047  F004         	movff	OledApi_printNum@whole+3,___xxtofl@val+3
  1530  00116A  0E01               	movlw	1
  1531  00116C  EC77  F00B         	call	___xxtofl
  1532  001170  C001  F015         	movff	?___xxtofl,___flsub@a
  1533  001174  C002  F016         	movff	?___xxtofl+1,___flsub@a+1
  1534  001178  C003  F017         	movff	?___xxtofl+2,___flsub@a+2
  1535  00117C  C004  F018         	movff	?___xxtofl+3,___flsub@a+3
  1536  001180  ECDD  F010         	call	___flsub	;wreg free
  1537  001184  C011  F025         	movff	?___flsub,OledApi_printNum@num
  1538  001188  C012  F026         	movff	?___flsub+1,OledApi_printNum@num+1
  1539  00118C  C013  F027         	movff	?___flsub+2,OledApi_printNum@num+2
  1540  001190  C014  F028         	movff	?___flsub+3,OledApi_printNum@num+3
  1541  001194                     
  1542                           ;OledApi.c: 247:     for(int i = 0; i < dec; i++)
  1543  001194  0E00               	movlw	0
  1544  001196  6E3F               	movwf	(OledApi_printNum@i+1)^0,c
  1545  001198  0E00               	movlw	0
  1546  00119A  6E3E               	movwf	OledApi_printNum@i^0,c
  1547  00119C  EFEC  F008         	goto	l2855
  1548  0011A0                     l2851:
  1549                           
  1550                           ;OledApi.c: 248:     {;OledApi.c: 249:         num *= 10;
  1551  0011A0  C025  F001         	movff	OledApi_printNum@num,___flmul@b
  1552  0011A4  C026  F002         	movff	OledApi_printNum@num+1,___flmul@b+1
  1553  0011A8  C027  F003         	movff	OledApi_printNum@num+2,___flmul@b+2
  1554  0011AC  C028  F004         	movff	OledApi_printNum@num+3,___flmul@b+3
  1555  0011B0  0E00               	movlw	0
  1556  0011B2  6E05               	movwf	___flmul@a^0,c
  1557  0011B4  0E00               	movlw	0
  1558  0011B6  6E06               	movwf	(___flmul@a+1)^0,c
  1559  0011B8  0E20               	movlw	32
  1560  0011BA  6E07               	movwf	(___flmul@a+2)^0,c
  1561  0011BC  0E41               	movlw	65
  1562  0011BE  6E08               	movwf	(___flmul@a+3)^0,c
  1563  0011C0  EC74  F006         	call	___flmul	;wreg free
  1564  0011C4  C001  F025         	movff	?___flmul,OledApi_printNum@num
  1565  0011C8  C002  F026         	movff	?___flmul+1,OledApi_printNum@num+1
  1566  0011CC  C003  F027         	movff	?___flmul+2,OledApi_printNum@num+2
  1567  0011D0  C004  F028         	movff	?___flmul+3,OledApi_printNum@num+3
  1568  0011D4                     
  1569                           ;OledApi.c: 250:     }
  1570  0011D4  4A3E               	infsnz	OledApi_printNum@i^0,f,c
  1571  0011D6  2A3F               	incf	(OledApi_printNum@i+1)^0,f,c
  1572  0011D8                     l2855:
  1573  0011D8  C029  F02A         	movff	OledApi_printNum@dec,??_OledApi_printNum
  1574  0011DC  6A2B               	clrf	(??_OledApi_printNum+1)^0,c
  1575  0011DE  BE2A               	btfsc	??_OledApi_printNum^0,7,c
  1576  0011E0  062B               	decf	(??_OledApi_printNum+1)^0,f,c
  1577  0011E2  502A               	movf	??_OledApi_printNum^0,w,c
  1578  0011E4  5C3E               	subwf	OledApi_printNum@i^0,w,c
  1579  0011E6  503F               	movf	(OledApi_printNum@i+1)^0,w,c
  1580  0011E8  0A80               	xorlw	128
  1581  0011EA  6E2C               	movwf	(??_OledApi_printNum+2)^0,c
  1582  0011EC  502B               	movf	(??_OledApi_printNum+1)^0,w,c
  1583  0011EE  0A80               	xorlw	128
  1584  0011F0  582C               	subwfb	(??_OledApi_printNum+2)^0,w,c
  1585  0011F2  A0D8               	btfss	status,0,c
  1586  0011F4  EFFE  F008         	goto	u2701
  1587  0011F8  EF00  F009         	goto	u2700
  1588  0011FC                     u2701:
  1589  0011FC  EFD0  F008         	goto	l2851
  1590  001200                     u2700:
  1591  001200                     
  1592                           ;OledApi.c: 251:     fract = (int32_t) num;
  1593  001200  C025  F001         	movff	OledApi_printNum@num,___fltol@f1
  1594  001204  C026  F002         	movff	OledApi_printNum@num+1,___fltol@f1+1
  1595  001208  C027  F003         	movff	OledApi_printNum@num+2,___fltol@f1+2
  1596  00120C  C028  F004         	movff	OledApi_printNum@num+3,___fltol@f1+3
  1597  001210  ECD7  F00C         	call	___fltol	;wreg free
  1598  001214  C001  F040         	movff	?___fltol,OledApi_printNum@fract
  1599  001218  C002  F041         	movff	?___fltol+1,OledApi_printNum@fract+1
  1600  00121C  C003  F042         	movff	?___fltol+2,OledApi_printNum@fract+2
  1601  001220  C004  F043         	movff	?___fltol+3,OledApi_printNum@fract+3
  1602  001224                     
  1603                           ;OledApi.c: 253:     if(dec == 0)
  1604  001224  5029               	movf	OledApi_printNum@dec^0,w,c
  1605  001226  A4D8               	btfss	status,2,c
  1606  001228  EF18  F009         	goto	u2711
  1607  00122C  EF1A  F009         	goto	u2710
  1608  001230                     u2711:
  1609  001230  EF3C  F009         	goto	l2867
  1610  001234                     u2710:
  1611  001234                     
  1612                           ;OledApi.c: 254:     {;OledApi.c: 255:         if(num >= 0.5)
  1613  001234  C025  F019         	movff	OledApi_printNum@num,___flge@ff1
  1614  001238  C026  F01A         	movff	OledApi_printNum@num+1,___flge@ff1+1
  1615  00123C  C027  F01B         	movff	OledApi_printNum@num+2,___flge@ff1+2
  1616  001240  C028  F01C         	movff	OledApi_printNum@num+3,___flge@ff1+3
  1617  001244  0E00               	movlw	0
  1618  001246  6E1D               	movwf	___flge@ff2^0,c
  1619  001248  0E00               	movlw	0
  1620  00124A  6E1E               	movwf	(___flge@ff2+1)^0,c
  1621  00124C  0E00               	movlw	0
  1622  00124E  6E1F               	movwf	(___flge@ff2+2)^0,c
  1623  001250  0E3F               	movlw	63
  1624  001252  6E20               	movwf	(___flge@ff2+3)^0,c
  1625  001254  EC5A  F00D         	call	___flge	;wreg free
  1626  001258  A0D8               	btfss	status,0,c
  1627  00125A  EF31  F009         	goto	u2721
  1628  00125E  EF33  F009         	goto	u2720
  1629  001262                     u2721:
  1630  001262  EF39  F009         	goto	l2865
  1631  001266                     u2720:
  1632  001266                     
  1633                           ;OledApi.c: 256:         {;OledApi.c: 257:             whole++;
  1634  001266  0E01               	movlw	1
  1635  001268  2644               	addwf	OledApi_printNum@whole^0,f,c
  1636  00126A  0E00               	movlw	0
  1637  00126C  2245               	addwfc	(OledApi_printNum@whole+1)^0,f,c
  1638  00126E  2246               	addwfc	(OledApi_printNum@whole+2)^0,f,c
  1639  001270  2247               	addwfc	(OledApi_printNum@whole+3)^0,f,c
  1640  001272                     l2865:
  1641                           
  1642                           ;OledApi.c: 259:         dec = -1;
  1643  001272  6829               	setf	OledApi_printNum@dec^0,c
  1644                           
  1645                           ;OledApi.c: 260:     }
  1646  001274  EFC1  F009         	goto	l2879
  1647  001278                     l2867:
  1648  001278  C040  F001         	movff	OledApi_printNum@fract,___xxtofl@val
  1649  00127C  C041  F002         	movff	OledApi_printNum@fract+1,___xxtofl@val+1
  1650  001280  C042  F003         	movff	OledApi_printNum@fract+2,___xxtofl@val+2
  1651  001284  C043  F004         	movff	OledApi_printNum@fract+3,___xxtofl@val+3
  1652  001288  0E01               	movlw	1
  1653  00128A  EC77  F00B         	call	___xxtofl
  1654  00128E  C001  F015         	movff	?___xxtofl,___flsub@a
  1655  001292  C002  F016         	movff	?___xxtofl+1,___flsub@a+1
  1656  001296  C003  F017         	movff	?___xxtofl+2,___flsub@a+2
  1657  00129A  C004  F018         	movff	?___xxtofl+3,___flsub@a+3
  1658  00129E  C025  F011         	movff	OledApi_printNum@num,___flsub@b
  1659  0012A2  C026  F012         	movff	OledApi_printNum@num+1,___flsub@b+1
  1660  0012A6  C027  F013         	movff	OledApi_printNum@num+2,___flsub@b+2
  1661  0012AA  C028  F014         	movff	OledApi_printNum@num+3,___flsub@b+3
  1662  0012AE  ECDD  F010         	call	___flsub	;wreg free
  1663  0012B2  C011  F019         	movff	?___flsub,___flge@ff1
  1664  0012B6  C012  F01A         	movff	?___flsub+1,___flge@ff1+1
  1665  0012BA  C013  F01B         	movff	?___flsub+2,___flge@ff1+2
  1666  0012BE  C014  F01C         	movff	?___flsub+3,___flge@ff1+3
  1667  0012C2  0E00               	movlw	0
  1668  0012C4  6E1D               	movwf	___flge@ff2^0,c
  1669  0012C6  0E00               	movlw	0
  1670  0012C8  6E1E               	movwf	(___flge@ff2+1)^0,c
  1671  0012CA  0E00               	movlw	0
  1672  0012CC  6E1F               	movwf	(___flge@ff2+2)^0,c
  1673  0012CE  0E3F               	movlw	63
  1674  0012D0  6E20               	movwf	(___flge@ff2+3)^0,c
  1675  0012D2  EC5A  F00D         	call	___flge	;wreg free
  1676  0012D6  A0D8               	btfss	status,0,c
  1677  0012D8  EF70  F009         	goto	u2731
  1678  0012DC  EF72  F009         	goto	u2730
  1679  0012E0                     u2731:
  1680  0012E0  EFC1  F009         	goto	l2879
  1681  0012E4                     u2730:
  1682  0012E4                     
  1683                           ;OledApi.c: 262:     {;OledApi.c: 263:         fract++;
  1684  0012E4  0E01               	movlw	1
  1685  0012E6  2640               	addwf	OledApi_printNum@fract^0,f,c
  1686  0012E8  0E00               	movlw	0
  1687  0012EA  2241               	addwfc	(OledApi_printNum@fract+1)^0,f,c
  1688  0012EC  2242               	addwfc	(OledApi_printNum@fract+2)^0,f,c
  1689  0012EE  2243               	addwfc	(OledApi_printNum@fract+3)^0,f,c
  1690  0012F0  EFC1  F009         	goto	l2879
  1691  0012F4                     l2871:
  1692                           
  1693                           ;OledApi.c: 267:     {;OledApi.c: 268:         if(c == 0) exit(1);
  1694  0012F4  5048               	movf	OledApi_printNum@c^0,w,c
  1695  0012F6  1049               	iorwf	(OledApi_printNum@c+1)^0,w,c
  1696  0012F8  A4D8               	btfss	status,2,c
  1697  0012FA  EF81  F009         	goto	u2741
  1698  0012FE  EF83  F009         	goto	u2740
  1699  001302                     u2741:
  1700  001302  EF89  F009         	goto	l2875
  1701  001306                     u2740:
  1702  001306  0E00               	movlw	0
  1703  001308  6E0C               	movwf	(exit@code+1)^0,c
  1704  00130A  0E01               	movlw	1
  1705  00130C  6E0B               	movwf	exit@code^0,c
  1706  00130E  EC08  F012         	call	_exit	;wreg free
  1707  001312                     l2875:
  1708                           
  1709                           ;OledApi.c: 269:         s[--c] = '0' + (fract % 10);
  1710  001312  0648               	decf	OledApi_printNum@c^0,f,c
  1711  001314  A0D8               	btfss	status,0,c
  1712  001316  0649               	decf	(OledApi_printNum@c+1)^0,f,c
  1713  001318  0E2D               	movlw	low OledApi_printNum@s
  1714  00131A  2448               	addwf	OledApi_printNum@c^0,w,c
  1715  00131C  6ED9               	movwf	fsr2l,c
  1716  00131E  0E00               	movlw	high OledApi_printNum@s
  1717  001320  2049               	addwfc	(OledApi_printNum@c+1)^0,w,c
  1718  001322  6EDA               	movwf	fsr2h,c
  1719  001324  C040  F001         	movff	OledApi_printNum@fract,___almod@dividend
  1720  001328  C041  F002         	movff	OledApi_printNum@fract+1,___almod@dividend+1
  1721  00132C  C042  F003         	movff	OledApi_printNum@fract+2,___almod@dividend+2
  1722  001330  C043  F004         	movff	OledApi_printNum@fract+3,___almod@dividend+3
  1723  001334  0E0A               	movlw	10
  1724  001336  6E05               	movwf	___almod@divisor^0,c
  1725  001338  0E00               	movlw	0
  1726  00133A  6E06               	movwf	(___almod@divisor+1)^0,c
  1727  00133C  0E00               	movlw	0
  1728  00133E  6E07               	movwf	(___almod@divisor+2)^0,c
  1729  001340  0E00               	movlw	0
  1730  001342  6E08               	movwf	(___almod@divisor+3)^0,c
  1731  001344  ECDC  F00D         	call	___almod	;wreg free
  1732  001348  5001               	movf	?___almod^0,w,c
  1733  00134A  0F30               	addlw	48
  1734  00134C  6EDF               	movwf	indf2,c
  1735  00134E                     
  1736                           ;OledApi.c: 270:         fract /= 10;
  1737  00134E  C040  F001         	movff	OledApi_printNum@fract,___aldiv@dividend
  1738  001352  C041  F002         	movff	OledApi_printNum@fract+1,___aldiv@dividend+1
  1739  001356  C042  F003         	movff	OledApi_printNum@fract+2,___aldiv@dividend+2
  1740  00135A  C043  F004         	movff	OledApi_printNum@fract+3,___aldiv@dividend+3
  1741  00135E  0E0A               	movlw	10
  1742  001360  6E05               	movwf	___aldiv@divisor^0,c
  1743  001362  0E00               	movlw	0
  1744  001364  6E06               	movwf	(___aldiv@divisor+1)^0,c
  1745  001366  0E00               	movlw	0
  1746  001368  6E07               	movwf	(___aldiv@divisor+2)^0,c
  1747  00136A  0E00               	movlw	0
  1748  00136C  6E08               	movwf	(___aldiv@divisor+3)^0,c
  1749  00136E  EC51  F00C         	call	___aldiv	;wreg free
  1750  001372  C001  F040         	movff	?___aldiv,OledApi_printNum@fract
  1751  001376  C002  F041         	movff	?___aldiv+1,OledApi_printNum@fract+1
  1752  00137A  C003  F042         	movff	?___aldiv+2,OledApi_printNum@fract+2
  1753  00137E  C004  F043         	movff	?___aldiv+3,OledApi_printNum@fract+3
  1754  001382                     l2879:
  1755                           
  1756                           ;OledApi.c: 266:     while(dec-- > 0)
  1757  001382  0629               	decf	OledApi_printNum@dec^0,f,c
  1758  001384  2829               	incf	OledApi_printNum@dec^0,w,c
  1759  001386  0A80               	xorlw	128
  1760  001388  0F7F               	addlw	-129
  1761  00138A  B0D8               	btfsc	status,0,c
  1762  00138C  EFCA  F009         	goto	u2751
  1763  001390  EFCC  F009         	goto	u2750
  1764  001394                     u2751:
  1765  001394  EF7A  F009         	goto	l2871
  1766  001398                     u2750:
  1767  001398                     
  1768                           ;OledApi.c: 272:     if(dec == -1)
  1769  001398  2829               	incf	OledApi_printNum@dec^0,w,c
  1770  00139A  A4D8               	btfss	status,2,c
  1771  00139C  EFD2  F009         	goto	u2761
  1772  0013A0  EFD4  F009         	goto	u2760
  1773  0013A4                     u2761:
  1774  0013A4  EFEE  F009         	goto	l2889
  1775  0013A8                     u2760:
  1776  0013A8                     
  1777                           ;OledApi.c: 273:     {;OledApi.c: 274:         if(c == 0) exit(1);
  1778  0013A8  5048               	movf	OledApi_printNum@c^0,w,c
  1779  0013AA  1049               	iorwf	(OledApi_printNum@c+1)^0,w,c
  1780  0013AC  A4D8               	btfss	status,2,c
  1781  0013AE  EFDB  F009         	goto	u2771
  1782  0013B2  EFDD  F009         	goto	u2770
  1783  0013B6                     u2771:
  1784  0013B6  EFE3  F009         	goto	l2887
  1785  0013BA                     u2770:
  1786  0013BA  0E00               	movlw	0
  1787  0013BC  6E0C               	movwf	(exit@code+1)^0,c
  1788  0013BE  0E01               	movlw	1
  1789  0013C0  6E0B               	movwf	exit@code^0,c
  1790  0013C2  EC08  F012         	call	_exit	;wreg free
  1791  0013C6                     l2887:
  1792                           
  1793                           ;OledApi.c: 275:         s[--c] = '.';
  1794  0013C6  0648               	decf	OledApi_printNum@c^0,f,c
  1795  0013C8  A0D8               	btfss	status,0,c
  1796  0013CA  0649               	decf	(OledApi_printNum@c+1)^0,f,c
  1797  0013CC  0E2D               	movlw	low OledApi_printNum@s
  1798  0013CE  2448               	addwf	OledApi_printNum@c^0,w,c
  1799  0013D0  6ED9               	movwf	fsr2l,c
  1800  0013D2  0E00               	movlw	high OledApi_printNum@s
  1801  0013D4  2049               	addwfc	(OledApi_printNum@c+1)^0,w,c
  1802  0013D6  6EDA               	movwf	fsr2h,c
  1803  0013D8  0E2E               	movlw	46
  1804  0013DA  6EDF               	movwf	indf2,c
  1805  0013DC                     l2889:
  1806                           
  1807                           ;OledApi.c: 279:     {;OledApi.c: 280:         if(c == 0) exit(1);
  1808  0013DC  5048               	movf	OledApi_printNum@c^0,w,c
  1809  0013DE  1049               	iorwf	(OledApi_printNum@c+1)^0,w,c
  1810  0013E0  A4D8               	btfss	status,2,c
  1811  0013E2  EFF5  F009         	goto	u2781
  1812  0013E6  EFF7  F009         	goto	u2780
  1813  0013EA                     u2781:
  1814  0013EA  EFFD  F009         	goto	l2893
  1815  0013EE                     u2780:
  1816  0013EE  0E00               	movlw	0
  1817  0013F0  6E0C               	movwf	(exit@code+1)^0,c
  1818  0013F2  0E01               	movlw	1
  1819  0013F4  6E0B               	movwf	exit@code^0,c
  1820  0013F6  EC08  F012         	call	_exit	;wreg free
  1821  0013FA                     l2893:
  1822                           
  1823                           ;OledApi.c: 281:         s[--c] = '0' + (whole % 10);
  1824  0013FA  0648               	decf	OledApi_printNum@c^0,f,c
  1825  0013FC  A0D8               	btfss	status,0,c
  1826  0013FE  0649               	decf	(OledApi_printNum@c+1)^0,f,c
  1827  001400  0E2D               	movlw	low OledApi_printNum@s
  1828  001402  2448               	addwf	OledApi_printNum@c^0,w,c
  1829  001404  6ED9               	movwf	fsr2l,c
  1830  001406  0E00               	movlw	high OledApi_printNum@s
  1831  001408  2049               	addwfc	(OledApi_printNum@c+1)^0,w,c
  1832  00140A  6EDA               	movwf	fsr2h,c
  1833  00140C  C044  F001         	movff	OledApi_printNum@whole,___almod@dividend
  1834  001410  C045  F002         	movff	OledApi_printNum@whole+1,___almod@dividend+1
  1835  001414  C046  F003         	movff	OledApi_printNum@whole+2,___almod@dividend+2
  1836  001418  C047  F004         	movff	OledApi_printNum@whole+3,___almod@dividend+3
  1837  00141C  0E0A               	movlw	10
  1838  00141E  6E05               	movwf	___almod@divisor^0,c
  1839  001420  0E00               	movlw	0
  1840  001422  6E06               	movwf	(___almod@divisor+1)^0,c
  1841  001424  0E00               	movlw	0
  1842  001426  6E07               	movwf	(___almod@divisor+2)^0,c
  1843  001428  0E00               	movlw	0
  1844  00142A  6E08               	movwf	(___almod@divisor+3)^0,c
  1845  00142C  ECDC  F00D         	call	___almod	;wreg free
  1846  001430  5001               	movf	?___almod^0,w,c
  1847  001432  0F30               	addlw	48
  1848  001434  6EDF               	movwf	indf2,c
  1849  001436                     
  1850                           ;OledApi.c: 282:         whole /= 10;
  1851  001436  C044  F001         	movff	OledApi_printNum@whole,___aldiv@dividend
  1852  00143A  C045  F002         	movff	OledApi_printNum@whole+1,___aldiv@dividend+1
  1853  00143E  C046  F003         	movff	OledApi_printNum@whole+2,___aldiv@dividend+2
  1854  001442  C047  F004         	movff	OledApi_printNum@whole+3,___aldiv@dividend+3
  1855  001446  0E0A               	movlw	10
  1856  001448  6E05               	movwf	___aldiv@divisor^0,c
  1857  00144A  0E00               	movlw	0
  1858  00144C  6E06               	movwf	(___aldiv@divisor+1)^0,c
  1859  00144E  0E00               	movlw	0
  1860  001450  6E07               	movwf	(___aldiv@divisor+2)^0,c
  1861  001452  0E00               	movlw	0
  1862  001454  6E08               	movwf	(___aldiv@divisor+3)^0,c
  1863  001456  EC51  F00C         	call	___aldiv	;wreg free
  1864  00145A  C001  F044         	movff	?___aldiv,OledApi_printNum@whole
  1865  00145E  C002  F045         	movff	?___aldiv+1,OledApi_printNum@whole+1
  1866  001462  C003  F046         	movff	?___aldiv+2,OledApi_printNum@whole+2
  1867  001466  C004  F047         	movff	?___aldiv+3,OledApi_printNum@whole+3
  1868  00146A                     
  1869                           ;OledApi.c: 283:     }while(whole > 0);
  1870  00146A  BE47               	btfsc	(OledApi_printNum@whole+3)^0,7,c
  1871  00146C  EF44  F00A         	goto	u2790
  1872  001470  5047               	movf	(OledApi_printNum@whole+3)^0,w,c
  1873  001472  1046               	iorwf	(OledApi_printNum@whole+2)^0,w,c
  1874  001474  1045               	iorwf	(OledApi_printNum@whole+1)^0,w,c
  1875  001476  E106               	bnz	u2791
  1876  001478  0444               	decf	OledApi_printNum@whole^0,w,c
  1877  00147A  B0D8               	btfsc	status,0,c
  1878  00147C  EF42  F00A         	goto	u2791
  1879  001480  EF44  F00A         	goto	u2790
  1880  001484                     u2791:
  1881  001484  EFEE  F009         	goto	l2889
  1882  001488                     u2790:
  1883  001488                     
  1884                           ;OledApi.c: 285:     if(num < 0)
  1885  001488  BE28               	btfsc	(OledApi_printNum@num+3)^0,7,c
  1886  00148A  EF4B  F00A         	goto	u2800
  1887  00148E  EF49  F00A         	goto	u2801
  1888  001492                     u2801:
  1889  001492  EF65  F00A         	goto	l2907
  1890  001496                     u2800:
  1891  001496                     
  1892                           ;OledApi.c: 286:     {;OledApi.c: 287:         if(c == 0) exit(1);
  1893  001496  5048               	movf	OledApi_printNum@c^0,w,c
  1894  001498  1049               	iorwf	(OledApi_printNum@c+1)^0,w,c
  1895  00149A  A4D8               	btfss	status,2,c
  1896  00149C  EF52  F00A         	goto	u2811
  1897  0014A0  EF54  F00A         	goto	u2810
  1898  0014A4                     u2811:
  1899  0014A4  EF5A  F00A         	goto	l2905
  1900  0014A8                     u2810:
  1901  0014A8  0E00               	movlw	0
  1902  0014AA  6E0C               	movwf	(exit@code+1)^0,c
  1903  0014AC  0E01               	movlw	1
  1904  0014AE  6E0B               	movwf	exit@code^0,c
  1905  0014B0  EC08  F012         	call	_exit	;wreg free
  1906  0014B4                     l2905:
  1907                           
  1908                           ;OledApi.c: 288:         s[--c] = '-';
  1909  0014B4  0648               	decf	OledApi_printNum@c^0,f,c
  1910  0014B6  A0D8               	btfss	status,0,c
  1911  0014B8  0649               	decf	(OledApi_printNum@c+1)^0,f,c
  1912  0014BA  0E2D               	movlw	low OledApi_printNum@s
  1913  0014BC  2448               	addwf	OledApi_printNum@c^0,w,c
  1914  0014BE  6ED9               	movwf	fsr2l,c
  1915  0014C0  0E00               	movlw	high OledApi_printNum@s
  1916  0014C2  2049               	addwfc	(OledApi_printNum@c+1)^0,w,c
  1917  0014C4  6EDA               	movwf	fsr2h,c
  1918  0014C6  0E2D               	movlw	45
  1919  0014C8  6EDF               	movwf	indf2,c
  1920  0014CA                     l2907:
  1921                           
  1922                           ;OledApi.c: 291:     writeStr(s+c, 16-c);
  1923  0014CA  0E2D               	movlw	low OledApi_printNum@s
  1924  0014CC  2448               	addwf	OledApi_printNum@c^0,w,c
  1925  0014CE  6E21               	movwf	writeStr@value^0,c
  1926  0014D0  0E00               	movlw	high OledApi_printNum@s
  1927  0014D2  2049               	addwfc	(OledApi_printNum@c+1)^0,w,c
  1928  0014D4  6E22               	movwf	(writeStr@value+1)^0,c
  1929  0014D6  5048               	movf	OledApi_printNum@c^0,w,c
  1930  0014D8  0810               	sublw	16
  1931  0014DA  6E23               	movwf	writeStr@len^0,c
  1932  0014DC  ECFD  F011         	call	_writeStr	;wreg free
  1933  0014E0  0012               	return		;funcret
  1934  0014E2                     __end_of_OledApi_printNum:
  1935                           	opt callstack 0
  1936                           
  1937 ;; *************** function _writeStr *****************
  1938 ;; Defined at:
  1939 ;;		line 326 in file "OledApi.c"
  1940 ;; Parameters:    Size  Location     Type
  1941 ;;  value           2   32[COMRAM] PTR const unsigned char 
  1942 ;;		 -> OledApi_printNum@s(17), ?_OledApi_printf(1), STR_2(5), 
  1943 ;;  len             1   34[COMRAM] unsigned char 
  1944 ;; Auto vars:     Size  Location     Type
  1945 ;;		None
  1946 ;; Return value:  Size  Location     Type
  1947 ;;                  1    wreg      void 
  1948 ;; Registers used:
  1949 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1950 ;; Tracked objects:
  1951 ;;		On entry : 0/0
  1952 ;;		On exit  : 0/0
  1953 ;;		Unchanged: 0/0
  1954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1955 ;;      Params:         3       0       0       0       0       0       0       0       0
  1956 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1957 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1958 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1959 ;;Total ram usage:        3 bytes
  1960 ;; Hardware stack levels used:    1
  1961 ;; Hardware stack levels required when called:    4
  1962 ;; This function calls:
  1963 ;;		_send
  1964 ;; This function is called by:
  1965 ;;		_OledApi_printNum
  1966 ;;		_OledApi_printStr
  1967 ;; This function uses a non-reentrant model
  1968 ;;
  1969                           
  1970                           	psect	text7
  1971  0023FA                     __ptext7:
  1972                           	opt callstack 0
  1973  0023FA                     _writeStr:
  1974                           	opt callstack 23
  1975  0023FA                     
  1976                           ;OledApi.c: 326: static void writeStr(const uint8_t *value, uint8_t len);OledApi.c: 327:
      +                           {;OledApi.c: 328:  send(1, value, len);
  1977  0023FA  C021  F012         	movff	writeStr@value,send@buf
  1978  0023FE  C022  F013         	movff	writeStr@value+1,send@buf+1
  1979  002402  C023  F014         	movff	writeStr@len,send@count
  1980  002406  6A15               	clrf	(send@count+1)^0,c
  1981  002408  0E01               	movlw	1
  1982  00240A  EC52  F00E         	call	_send
  1983  00240E  0012               	return		;funcret
  1984  002410                     __end_of_writeStr:
  1985                           	opt callstack 0
  1986                           
  1987 ;; *************** function _exit *****************
  1988 ;; Defined at:
  1989 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\exit.c"
  1990 ;; Parameters:    Size  Location     Type
  1991 ;;  code            2   10[COMRAM] int 
  1992 ;; Auto vars:     Size  Location     Type
  1993 ;;		None
  1994 ;; Return value:  Size  Location     Type
  1995 ;;                  1    wreg      void 
  1996 ;; Registers used:
  1997 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  1998 ;; Tracked objects:
  1999 ;;		On entry : 0/0
  2000 ;;		On exit  : 0/0
  2001 ;;		Unchanged: 0/0
  2002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2003 ;;      Params:         2       0       0       0       0       0       0       0       0
  2004 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2005 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2006 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2007 ;;Total ram usage:        2 bytes
  2008 ;; Hardware stack levels used:    1
  2009 ;; Hardware stack levels required when called:    2
  2010 ;; This function calls:
  2011 ;;		__Exit
  2012 ;;		___funcs_on_exit
  2013 ;; This function is called by:
  2014 ;;		_OledApi_printSpec
  2015 ;;		_OledApi_printf
  2016 ;;		_OledApi_printNum
  2017 ;; This function uses a non-reentrant model
  2018 ;;
  2019                           
  2020                           	psect	text8
  2021  002410                     __ptext8:
  2022                           	opt callstack 0
  2023  002410                     _exit:
  2024                           	opt callstack 26
  2025  002410  ECC8  F00E         	call	___funcs_on_exit	;wreg free
  2026  002414  C00B  F001         	movff	exit@code,__Exit@ec
  2027  002418  C00C  F002         	movff	exit@code+1,__Exit@ec+1
  2028  00241C  EC1E  F012         	call	__Exit	;wreg free
  2029  002420  0012               	return		;funcret
  2030  002422                     __end_of_exit:
  2031                           	opt callstack 0
  2032                           
  2033 ;; *************** function ___funcs_on_exit *****************
  2034 ;; Defined at:
  2035 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atexit.c"
  2036 ;; Parameters:    Size  Location     Type
  2037 ;;		None
  2038 ;; Auto vars:     Size  Location     Type
  2039 ;;  arg             2    8[COMRAM] PTR void 
  2040 ;;		 -> RAM(2047), 
  2041 ;;  func            2    6[COMRAM] PTR FTN(PTR void ,)void 
  2042 ;;		 -> call(1), 
  2043 ;; Return value:  Size  Location     Type
  2044 ;;                  1    wreg      void 
  2045 ;; Registers used:
  2046 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  2047 ;; Tracked objects:
  2048 ;;		On entry : 0/0
  2049 ;;		On exit  : 0/0
  2050 ;;		Unchanged: 0/0
  2051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2052 ;;      Params:         0       0       0       0       0       0       0       0       0
  2053 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2054 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2055 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2056 ;;Total ram usage:        8 bytes
  2057 ;; Hardware stack levels used:    1
  2058 ;; Hardware stack levels required when called:    1
  2059 ;; This function calls:
  2060 ;;		_call
  2061 ;; This function is called by:
  2062 ;;		_exit
  2063 ;; This function uses a non-reentrant model
  2064 ;;
  2065                           
  2066                           	psect	text9
  2067  001D90                     __ptext9:
  2068                           	opt callstack 0
  2069  001D90                     ___funcs_on_exit:
  2070                           	opt callstack 26
  2071  001D90  EF2F  F00F         	goto	l2459
  2072  001D94                     l2449:
  2073                           
  2074                           ; BSR set to: 0
  2075  001D94  C071  F003         	movff	_slot,??___funcs_on_exit
  2076  001D98  C072  F004         	movff	_slot+1,??___funcs_on_exit+1
  2077  001D9C  90D8               	bcf	status,0,c
  2078  001D9E  3603               	rlcf	??___funcs_on_exit^0,f,c
  2079  001DA0  3604               	rlcf	(??___funcs_on_exit+1)^0,f,c
  2080  001DA2  C073  F005         	movff	_head,??___funcs_on_exit+2
  2081  001DA6  C074  F006         	movff	_head+1,??___funcs_on_exit+3
  2082  001DAA  5003               	movf	??___funcs_on_exit^0,w,c
  2083  001DAC  2605               	addwf	(??___funcs_on_exit+2)^0,f,c
  2084  001DAE  5004               	movf	(??___funcs_on_exit+1)^0,w,c
  2085  001DB0  2206               	addwfc	(??___funcs_on_exit+3)^0,f,c
  2086  001DB2  0E02               	movlw	2
  2087  001DB4  2405               	addwf	(??___funcs_on_exit+2)^0,w,c
  2088  001DB6  6ED9               	movwf	fsr2l,c
  2089  001DB8  0E00               	movlw	0
  2090  001DBA  2006               	addwfc	(??___funcs_on_exit+3)^0,w,c
  2091  001DBC  6EDA               	movwf	fsr2h,c
  2092  001DBE  CFDE F007          	movff	postinc2,___funcs_on_exit@func
  2093  001DC2  CFDD F008          	movff	postdec2,___funcs_on_exit@func+1
  2094  001DC6  C071  F003         	movff	_slot,??___funcs_on_exit
  2095  001DCA  C072  F004         	movff	_slot+1,??___funcs_on_exit+1
  2096  001DCE  90D8               	bcf	status,0,c
  2097  001DD0  3603               	rlcf	??___funcs_on_exit^0,f,c
  2098  001DD2  3604               	rlcf	(??___funcs_on_exit+1)^0,f,c
  2099  001DD4  C073  F005         	movff	_head,??___funcs_on_exit+2
  2100  001DD8  C074  F006         	movff	_head+1,??___funcs_on_exit+3
  2101  001DDC  5003               	movf	??___funcs_on_exit^0,w,c
  2102  001DDE  2605               	addwf	(??___funcs_on_exit+2)^0,f,c
  2103  001DE0  5004               	movf	(??___funcs_on_exit+1)^0,w,c
  2104  001DE2  2206               	addwfc	(??___funcs_on_exit+3)^0,f,c
  2105  001DE4  0E42               	movlw	66
  2106  001DE6  2405               	addwf	(??___funcs_on_exit+2)^0,w,c
  2107  001DE8  6ED9               	movwf	fsr2l,c
  2108  001DEA  0E00               	movlw	0
  2109  001DEC  2006               	addwfc	(??___funcs_on_exit+3)^0,w,c
  2110  001DEE  6EDA               	movwf	fsr2h,c
  2111  001DF0  CFDE F009          	movff	postinc2,___funcs_on_exit@arg
  2112  001DF4  CFDD F00A          	movff	postdec2,___funcs_on_exit@arg+1
  2113  001DF8                     
  2114                           ; BSR set to: 0
  2115  001DF8  C009  F001         	movff	___funcs_on_exit@arg,call@p
  2116  001DFC  C00A  F002         	movff	___funcs_on_exit@arg+1,call@p+1
  2117  001E00  D802               	call	u2108
  2118  001E02  EF0D  F00F         	goto	u2109
  2119  001E06                     u2108:
  2120  001E06  0005               	push	
  2121  001E08  6EFA               	movwf	pclath,c
  2122  001E0A  5007               	movf	___funcs_on_exit@func^0,w,c
  2123  001E0C  6EFD               	movwf	tosl,c
  2124  001E0E  5008               	movf	(___funcs_on_exit@func+1)^0,w,c
  2125  001E10  6EFE               	movwf	tosh,c
  2126  001E12  50F8               	movf	tblptru,w,c
  2127  001E14  6EFF               	movwf	tosu,c
  2128  001E16  50FA               	movf	pclath,w,c
  2129  001E18  0012               	return		;indir
  2130  001E1A                     u2109:
  2131  001E1A                     l2453:
  2132  001E1A  0100               	movlb	0	; () banked
  2133  001E1C  5171               	movf	_slot& (0+255),w,b
  2134  001E1E  6E03               	movwf	??___funcs_on_exit^0,c
  2135  001E20  5172               	movf	(_slot+1)& (0+255),w,b
  2136  001E22  6E04               	movwf	(??___funcs_on_exit+1)^0,c
  2137  001E24  0E01               	movlw	1
  2138  001E26  5F71               	subwf	_slot& (0+255),f,b
  2139  001E28  0E00               	movlw	0
  2140  001E2A  5B72               	subwfb	(_slot+1)& (0+255),f,b
  2141  001E2C  BE04               	btfsc	(??___funcs_on_exit+1)^0,7,c
  2142  001E2E  EF23  F00F         	goto	u2110
  2143  001E32  5004               	movf	(??___funcs_on_exit+1)^0,w,c
  2144  001E34  E106               	bnz	u2111
  2145  001E36  0403               	decf	??___funcs_on_exit^0,w,c
  2146  001E38  B0D8               	btfsc	status,0,c
  2147  001E3A  EF21  F00F         	goto	u2111
  2148  001E3E  EF23  F00F         	goto	u2110
  2149  001E42                     u2111:
  2150  001E42  EFCA  F00E         	goto	l2449
  2151  001E46                     u2110:
  2152  001E46                     
  2153                           ; BSR set to: 0
  2154  001E46  C073  FFD9         	movff	_head,fsr2l
  2155  001E4A  C074  FFDA         	movff	_head+1,fsr2h
  2156  001E4E  CFDE F073          	movff	postinc2,_head
  2157  001E52  CFDD F074          	movff	postdec2,_head+1
  2158  001E56                     
  2159                           ; BSR set to: 0
  2160  001E56  0E00               	movlw	0
  2161  001E58  6F72               	movwf	(_slot+1)& (0+255),b
  2162  001E5A  0E20               	movlw	32
  2163  001E5C  6F71               	movwf	_slot& (0+255),b
  2164  001E5E                     l2459:
  2165  001E5E  0100               	movlb	0	; () banked
  2166  001E60  5173               	movf	_head& (0+255),w,b
  2167  001E62  1174               	iorwf	(_head+1)& (0+255),w,b
  2168  001E64  A4D8               	btfss	status,2,c
  2169  001E66  EF37  F00F         	goto	u2121
  2170  001E6A  EF39  F00F         	goto	u2120
  2171  001E6E                     u2121:
  2172  001E6E  EF0D  F00F         	goto	l2453
  2173  001E72                     u2120:
  2174  001E72                     
  2175                           ; BSR set to: 0
  2176  001E72  0012               	return		;funcret
  2177  001E74                     __end_of___funcs_on_exit:
  2178                           	opt callstack 0
  2179                           
  2180 ;; *************** function _call *****************
  2181 ;; Defined at:
  2182 ;;		line 45 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atexit.c"
  2183 ;; Parameters:    Size  Location     Type
  2184 ;;  p               2    0[COMRAM] PTR void 
  2185 ;;		 -> RAM(2047), 
  2186 ;; Auto vars:     Size  Location     Type
  2187 ;;		None
  2188 ;; Return value:  Size  Location     Type
  2189 ;;                  1    wreg      void 
  2190 ;; Registers used:
  2191 ;;		None
  2192 ;; Tracked objects:
  2193 ;;		On entry : 0/0
  2194 ;;		On exit  : 0/0
  2195 ;;		Unchanged: 0/0
  2196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2197 ;;      Params:         2       0       0       0       0       0       0       0       0
  2198 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2199 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2200 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2201 ;;Total ram usage:        2 bytes
  2202 ;; Hardware stack levels used:    1
  2203 ;; This function calls:
  2204 ;;		Nothing
  2205 ;; This function is called by:
  2206 ;;		___funcs_on_exit
  2207 ;; This function uses a non-reentrant model
  2208 ;;
  2209                           
  2210                           	psect	text10
  2211  002442                     __ptext10:
  2212                           	opt callstack 0
  2213  002442                     _call:
  2214                           	opt callstack 26
  2215  002442  0012               	return		;funcret
  2216  002444                     __end_of_call:
  2217                           	opt callstack 0
  2218                           
  2219 ;; *************** function __Exit *****************
  2220 ;; Defined at:
  2221 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\_Exit.c"
  2222 ;; Parameters:    Size  Location     Type
  2223 ;;  ec              2    0[COMRAM] int 
  2224 ;; Auto vars:     Size  Location     Type
  2225 ;;		None
  2226 ;; Return value:  Size  Location     Type
  2227 ;;                  1    wreg      void 
  2228 ;; Registers used:
  2229 ;;		None
  2230 ;; Tracked objects:
  2231 ;;		On entry : 0/0
  2232 ;;		On exit  : 0/0
  2233 ;;		Unchanged: 0/0
  2234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2235 ;;      Params:         2       0       0       0       0       0       0       0       0
  2236 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2237 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2238 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2239 ;;Total ram usage:        2 bytes
  2240 ;; Hardware stack levels used:    1
  2241 ;; This function calls:
  2242 ;;		Nothing
  2243 ;; This function is called by:
  2244 ;;		_exit
  2245 ;; This function uses a non-reentrant model
  2246 ;;
  2247                           
  2248                           	psect	text11
  2249  00243C                     __ptext11:
  2250                           	opt callstack 0
  2251  00243C                     __Exit:
  2252                           	opt callstack 27
  2253  00243C                     l1045:
  2254  00243C  EF1E  F012         	goto	l1045
  2255  002440  0012               	return		;funcret
  2256  002442                     __end_of__Exit:
  2257                           	opt callstack 0
  2258                           
  2259 ;; *************** function ___xxtofl *****************
  2260 ;; Defined at:
  2261 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
  2262 ;; Parameters:    Size  Location     Type
  2263 ;;  sign            1    wreg     unsigned char 
  2264 ;;  val             4    0[COMRAM] long 
  2265 ;; Auto vars:     Size  Location     Type
  2266 ;;  sign            1    8[COMRAM] unsigned char 
  2267 ;;  arg             4   10[COMRAM] unsigned long 
  2268 ;;  exp             1    9[COMRAM] unsigned char 
  2269 ;; Return value:  Size  Location     Type
  2270 ;;                  4    0[COMRAM] unsigned char 
  2271 ;; Registers used:
  2272 ;;		wreg, status,2, status,0
  2273 ;; Tracked objects:
  2274 ;;		On entry : 0/0
  2275 ;;		On exit  : 0/0
  2276 ;;		Unchanged: 0/0
  2277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2278 ;;      Params:         4       0       0       0       0       0       0       0       0
  2279 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2280 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2281 ;;      Totals:        14       0       0       0       0       0       0       0       0
  2282 ;;Total ram usage:       14 bytes
  2283 ;; Hardware stack levels used:    1
  2284 ;; This function calls:
  2285 ;;		Nothing
  2286 ;; This function is called by:
  2287 ;;		_OledApi_printf
  2288 ;;		_OledApi_printNum
  2289 ;; This function uses a non-reentrant model
  2290 ;;
  2291                           
  2292                           	psect	text12
  2293  0016EE                     __ptext12:
  2294                           	opt callstack 0
  2295  0016EE                     ___xxtofl:
  2296                           	opt callstack 28
  2297                           
  2298                           ;incstack = 0
  2299                           ;___xxtofl@sign stored from wreg
  2300  0016EE  6E09               	movwf	___xxtofl@sign^0,c
  2301  0016F0  5009               	movf	___xxtofl@sign^0,w,c
  2302  0016F2  B4D8               	btfsc	status,2,c
  2303  0016F4  EF7E  F00B         	goto	u2571
  2304  0016F8  EF80  F00B         	goto	u2570
  2305  0016FC                     u2571:
  2306  0016FC  EFA2  F00B         	goto	l1019
  2307  001700                     u2570:
  2308  001700  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  2309  001702  EF87  F00B         	goto	u2580
  2310  001706  EF85  F00B         	goto	u2581
  2311  00170A                     u2581:
  2312  00170A  EFA2  F00B         	goto	l1019
  2313  00170E                     u2580:
  2314  00170E  C001  F005         	movff	___xxtofl@val,??___xxtofl
  2315  001712  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  2316  001716  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  2317  00171A  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  2318  00171E  1E05               	comf	??___xxtofl^0,f,c
  2319  001720  1E06               	comf	(??___xxtofl+1)^0,f,c
  2320  001722  1E07               	comf	(??___xxtofl+2)^0,f,c
  2321  001724  1E08               	comf	(??___xxtofl+3)^0,f,c
  2322  001726  2A05               	incf	??___xxtofl^0,f,c
  2323  001728  0E00               	movlw	0
  2324  00172A  2206               	addwfc	(??___xxtofl+1)^0,f,c
  2325  00172C  2207               	addwfc	(??___xxtofl+2)^0,f,c
  2326  00172E  2208               	addwfc	(??___xxtofl+3)^0,f,c
  2327  001730  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  2328  001734  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  2329  001738  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  2330  00173C  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  2331  001740  EFAA  F00B         	goto	l2771
  2332  001744                     l1019:
  2333  001744  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  2334  001748  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2335  00174C  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2336  001750  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2337  001754                     l2771:
  2338  001754  5001               	movf	___xxtofl@val^0,w,c
  2339  001756  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  2340  001758  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  2341  00175A  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  2342  00175C  A4D8               	btfss	status,2,c
  2343  00175E  EFB3  F00B         	goto	u2591
  2344  001762  EFB5  F00B         	goto	u2590
  2345  001766                     u2591:
  2346  001766  EFBF  F00B         	goto	l2777
  2347  00176A                     u2590:
  2348  00176A  0E00               	movlw	0
  2349  00176C  6E01               	movwf	?___xxtofl^0,c
  2350  00176E  0E00               	movlw	0
  2351  001770  6E02               	movwf	(?___xxtofl+1)^0,c
  2352  001772  0E00               	movlw	0
  2353  001774  6E03               	movwf	(?___xxtofl+2)^0,c
  2354  001776  0E00               	movlw	0
  2355  001778  6E04               	movwf	(?___xxtofl+3)^0,c
  2356  00177A  EF50  F00C         	goto	l1022
  2357  00177E                     l2777:
  2358  00177E  0E96               	movlw	150
  2359  001780  6E0A               	movwf	___xxtofl@exp^0,c
  2360  001782  EFC9  F00B         	goto	l2781
  2361  001786                     l2779:
  2362  001786  2A0A               	incf	___xxtofl@exp^0,f,c
  2363  001788  90D8               	bcf	status,0,c
  2364  00178A  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  2365  00178C  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  2366  00178E  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  2367  001790  320B               	rrcf	___xxtofl@arg^0,f,c
  2368  001792                     l2781:
  2369  001792  0E00               	movlw	0
  2370  001794  140B               	andwf	___xxtofl@arg^0,w,c
  2371  001796  6E05               	movwf	??___xxtofl^0,c
  2372  001798  0E00               	movlw	0
  2373  00179A  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  2374  00179C  6E06               	movwf	(??___xxtofl+1)^0,c
  2375  00179E  0E00               	movlw	0
  2376  0017A0  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  2377  0017A2  6E07               	movwf	(??___xxtofl+2)^0,c
  2378  0017A4  0EFE               	movlw	254
  2379  0017A6  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  2380  0017A8  6E08               	movwf	(??___xxtofl+3)^0,c
  2381  0017AA  5005               	movf	??___xxtofl^0,w,c
  2382  0017AC  1006               	iorwf	(??___xxtofl+1)^0,w,c
  2383  0017AE  1007               	iorwf	(??___xxtofl+2)^0,w,c
  2384  0017B0  1008               	iorwf	(??___xxtofl+3)^0,w,c
  2385  0017B2  A4D8               	btfss	status,2,c
  2386  0017B4  EFDE  F00B         	goto	u2601
  2387  0017B8  EFE0  F00B         	goto	u2600
  2388  0017BC                     u2601:
  2389  0017BC  EFC3  F00B         	goto	l2779
  2390  0017C0                     u2600:
  2391  0017C0  EFEE  F00B         	goto	l1026
  2392  0017C4                     l2783:
  2393  0017C4  2A0A               	incf	___xxtofl@exp^0,f,c
  2394  0017C6  0E01               	movlw	1
  2395  0017C8  260B               	addwf	___xxtofl@arg^0,f,c
  2396  0017CA  0E00               	movlw	0
  2397  0017CC  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  2398  0017CE  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  2399  0017D0  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  2400  0017D2  90D8               	bcf	status,0,c
  2401  0017D4  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  2402  0017D6  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  2403  0017D8  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  2404  0017DA  320B               	rrcf	___xxtofl@arg^0,f,c
  2405  0017DC                     l1026:
  2406  0017DC  0E00               	movlw	0
  2407  0017DE  140B               	andwf	___xxtofl@arg^0,w,c
  2408  0017E0  6E05               	movwf	??___xxtofl^0,c
  2409  0017E2  0E00               	movlw	0
  2410  0017E4  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  2411  0017E6  6E06               	movwf	(??___xxtofl+1)^0,c
  2412  0017E8  0E00               	movlw	0
  2413  0017EA  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  2414  0017EC  6E07               	movwf	(??___xxtofl+2)^0,c
  2415  0017EE  0EFF               	movlw	255
  2416  0017F0  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  2417  0017F2  6E08               	movwf	(??___xxtofl+3)^0,c
  2418  0017F4  5005               	movf	??___xxtofl^0,w,c
  2419  0017F6  1006               	iorwf	(??___xxtofl+1)^0,w,c
  2420  0017F8  1007               	iorwf	(??___xxtofl+2)^0,w,c
  2421  0017FA  1008               	iorwf	(??___xxtofl+3)^0,w,c
  2422  0017FC  A4D8               	btfss	status,2,c
  2423  0017FE  EF03  F00C         	goto	u2611
  2424  001802  EF05  F00C         	goto	u2610
  2425  001806                     u2611:
  2426  001806  EFE2  F00B         	goto	l2783
  2427  00180A                     u2610:
  2428  00180A  EF0D  F00C         	goto	l2791
  2429  00180E                     l2789:
  2430  00180E  060A               	decf	___xxtofl@exp^0,f,c
  2431  001810  90D8               	bcf	status,0,c
  2432  001812  360B               	rlcf	___xxtofl@arg^0,f,c
  2433  001814  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  2434  001816  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  2435  001818  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  2436  00181A                     l2791:
  2437  00181A  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  2438  00181C  EF12  F00C         	goto	u2621
  2439  001820  EF14  F00C         	goto	u2620
  2440  001824                     u2621:
  2441  001824  EF1C  F00C         	goto	l1033
  2442  001828                     u2620:
  2443  001828  0E02               	movlw	2
  2444  00182A  600A               	cpfslt	___xxtofl@exp^0,c
  2445  00182C  EF1A  F00C         	goto	u2631
  2446  001830  EF1C  F00C         	goto	u2630
  2447  001834                     u2631:
  2448  001834  EF07  F00C         	goto	l2789
  2449  001838                     u2630:
  2450  001838                     l1033:
  2451  001838  B00A               	btfsc	___xxtofl@exp^0,0,c
  2452  00183A  EF21  F00C         	goto	u2641
  2453  00183E  EF23  F00C         	goto	u2640
  2454  001842                     u2641:
  2455  001842  EF24  F00C         	goto	l2797
  2456  001846                     u2640:
  2457  001846  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  2458  001848                     l2797:
  2459  001848  90D8               	bcf	status,0,c
  2460  00184A  320A               	rrcf	___xxtofl@exp^0,f,c
  2461  00184C  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  2462  001850  6A06               	clrf	(??___xxtofl+1)^0,c
  2463  001852  6A07               	clrf	(??___xxtofl+2)^0,c
  2464  001854  6A08               	clrf	(??___xxtofl+3)^0,c
  2465  001856  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  2466  00185A  6A07               	clrf	(??___xxtofl+2)^0,c
  2467  00185C  6A06               	clrf	(??___xxtofl+1)^0,c
  2468  00185E  6A05               	clrf	??___xxtofl^0,c
  2469  001860  5005               	movf	??___xxtofl^0,w,c
  2470  001862  120B               	iorwf	___xxtofl@arg^0,f,c
  2471  001864  5006               	movf	(??___xxtofl+1)^0,w,c
  2472  001866  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  2473  001868  5007               	movf	(??___xxtofl+2)^0,w,c
  2474  00186A  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  2475  00186C  5008               	movf	(??___xxtofl+3)^0,w,c
  2476  00186E  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  2477  001870  5009               	movf	___xxtofl@sign^0,w,c
  2478  001872  B4D8               	btfsc	status,2,c
  2479  001874  EF3E  F00C         	goto	u2651
  2480  001878  EF40  F00C         	goto	u2650
  2481  00187C                     u2651:
  2482  00187C  EF48  F00C         	goto	l2807
  2483  001880                     u2650:
  2484  001880  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  2485  001882  EF47  F00C         	goto	u2660
  2486  001886  EF45  F00C         	goto	u2661
  2487  00188A                     u2661:
  2488  00188A  EF48  F00C         	goto	l2807
  2489  00188E                     u2660:
  2490  00188E  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  2491  001890                     l2807:
  2492  001890  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  2493  001894  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  2494  001898  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  2495  00189C  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  2496  0018A0                     l1022:
  2497  0018A0  0012               	return		;funcret
  2498  0018A2                     __end_of___xxtofl:
  2499                           	opt callstack 0
  2500                           
  2501 ;; *************** function ___fltol *****************
  2502 ;; Defined at:
  2503 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
  2504 ;; Parameters:    Size  Location     Type
  2505 ;;  f1              4    0[COMRAM] unsigned char 
  2506 ;; Auto vars:     Size  Location     Type
  2507 ;;  exp1            1    9[COMRAM] unsigned char 
  2508 ;;  sign1           1    8[COMRAM] unsigned char 
  2509 ;; Return value:  Size  Location     Type
  2510 ;;                  4    0[COMRAM] long 
  2511 ;; Registers used:
  2512 ;;		wreg, status,2, status,0
  2513 ;; Tracked objects:
  2514 ;;		On entry : 0/0
  2515 ;;		On exit  : 0/0
  2516 ;;		Unchanged: 0/0
  2517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2518 ;;      Params:         4       0       0       0       0       0       0       0       0
  2519 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2520 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2521 ;;      Totals:        10       0       0       0       0       0       0       0       0
  2522 ;;Total ram usage:       10 bytes
  2523 ;; Hardware stack levels used:    1
  2524 ;; This function calls:
  2525 ;;		Nothing
  2526 ;; This function is called by:
  2527 ;;		_OledApi_printNum
  2528 ;; This function uses a non-reentrant model
  2529 ;;
  2530                           
  2531                           	psect	text13
  2532  0019AE                     __ptext13:
  2533                           	opt callstack 0
  2534  0019AE                     ___fltol:
  2535                           	opt callstack 27
  2536  0019AE  3403               	rlcf	(___fltol@f1+2)^0,w,c
  2537  0019B0  3404               	rlcf	(___fltol@f1+3)^0,w,c
  2538  0019B2  6E0A               	movwf	___fltol@exp1^0,c
  2539  0019B4  500A               	movf	___fltol@exp1^0,w,c
  2540  0019B6  A4D8               	btfss	status,2,c
  2541  0019B8  EFE0  F00C         	goto	u2501
  2542  0019BC  EFE2  F00C         	goto	u2500
  2543  0019C0                     u2501:
  2544  0019C0  EFEC  F00C         	goto	l2727
  2545  0019C4                     u2500:
  2546  0019C4                     l2723:
  2547  0019C4  0E00               	movlw	0
  2548  0019C6  6E01               	movwf	?___fltol^0,c
  2549  0019C8  0E00               	movlw	0
  2550  0019CA  6E02               	movwf	(?___fltol+1)^0,c
  2551  0019CC  0E00               	movlw	0
  2552  0019CE  6E03               	movwf	(?___fltol+2)^0,c
  2553  0019D0  0E00               	movlw	0
  2554  0019D2  6E04               	movwf	(?___fltol+3)^0,c
  2555  0019D4  EF59  F00D         	goto	l661
  2556  0019D8                     l2727:
  2557  0019D8  C001  F005         	movff	___fltol@f1,??___fltol
  2558  0019DC  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  2559  0019E0  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  2560  0019E4  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  2561  0019E8  0E20               	movlw	32
  2562  0019EA  EFFC  F00C         	goto	u2510
  2563  0019EE                     u2515:
  2564  0019EE  90D8               	bcf	status,0,c
  2565  0019F0  3208               	rrcf	(??___fltol+3)^0,f,c
  2566  0019F2  3207               	rrcf	(??___fltol+2)^0,f,c
  2567  0019F4  3206               	rrcf	(??___fltol+1)^0,f,c
  2568  0019F6  3205               	rrcf	??___fltol^0,f,c
  2569  0019F8                     u2510:
  2570  0019F8  2EE8               	decfsz	wreg,f,c
  2571  0019FA  EFF7  F00C         	goto	u2515
  2572  0019FE  5005               	movf	??___fltol^0,w,c
  2573  001A00  6E09               	movwf	___fltol@sign1^0,c
  2574  001A02  8E03               	bsf	(___fltol@f1+2)^0,7,c
  2575  001A04  0EFF               	movlw	255
  2576  001A06  1601               	andwf	___fltol@f1^0,f,c
  2577  001A08  0EFF               	movlw	255
  2578  001A0A  1602               	andwf	(___fltol@f1+1)^0,f,c
  2579  001A0C  0EFF               	movlw	255
  2580  001A0E  1603               	andwf	(___fltol@f1+2)^0,f,c
  2581  001A10  0E00               	movlw	0
  2582  001A12  1604               	andwf	(___fltol@f1+3)^0,f,c
  2583  001A14  0E96               	movlw	150
  2584  001A16  5E0A               	subwf	___fltol@exp1^0,f,c
  2585  001A18  BE0A               	btfsc	___fltol@exp1^0,7,c
  2586  001A1A  EF13  F00D         	goto	u2520
  2587  001A1E  EF11  F00D         	goto	u2521
  2588  001A22                     u2521:
  2589  001A22  EF29  F00D         	goto	l2747
  2590  001A26                     u2520:
  2591  001A26  500A               	movf	___fltol@exp1^0,w,c
  2592  001A28  0A80               	xorlw	128
  2593  001A2A  0F97               	addlw	151
  2594  001A2C  B0D8               	btfsc	status,0,c
  2595  001A2E  EF1B  F00D         	goto	u2531
  2596  001A32  EF1D  F00D         	goto	u2530
  2597  001A36                     u2531:
  2598  001A36  EF1F  F00D         	goto	l2743
  2599  001A3A                     u2530:
  2600  001A3A  EFE2  F00C         	goto	l2723
  2601  001A3E                     l2743:
  2602  001A3E  90D8               	bcf	status,0,c
  2603  001A40  3204               	rrcf	(___fltol@f1+3)^0,f,c
  2604  001A42  3203               	rrcf	(___fltol@f1+2)^0,f,c
  2605  001A44  3202               	rrcf	(___fltol@f1+1)^0,f,c
  2606  001A46  3201               	rrcf	___fltol@f1^0,f,c
  2607  001A48  3E0A               	incfsz	___fltol@exp1^0,f,c
  2608  001A4A  EF1F  F00D         	goto	l2743
  2609  001A4E  EF41  F00D         	goto	l2757
  2610  001A52                     l2747:
  2611  001A52  0E1F               	movlw	31
  2612  001A54  640A               	cpfsgt	___fltol@exp1^0,c
  2613  001A56  EF2F  F00D         	goto	u2541
  2614  001A5A  EF31  F00D         	goto	u2540
  2615  001A5E                     u2541:
  2616  001A5E  EF39  F00D         	goto	l2755
  2617  001A62                     u2540:
  2618  001A62  EFE2  F00C         	goto	l2723
  2619  001A66                     l2753:
  2620  001A66  90D8               	bcf	status,0,c
  2621  001A68  3601               	rlcf	___fltol@f1^0,f,c
  2622  001A6A  3602               	rlcf	(___fltol@f1+1)^0,f,c
  2623  001A6C  3603               	rlcf	(___fltol@f1+2)^0,f,c
  2624  001A6E  3604               	rlcf	(___fltol@f1+3)^0,f,c
  2625  001A70  060A               	decf	___fltol@exp1^0,f,c
  2626  001A72                     l2755:
  2627  001A72  500A               	movf	___fltol@exp1^0,w,c
  2628  001A74  A4D8               	btfss	status,2,c
  2629  001A76  EF3F  F00D         	goto	u2551
  2630  001A7A  EF41  F00D         	goto	u2550
  2631  001A7E                     u2551:
  2632  001A7E  EF33  F00D         	goto	l2753
  2633  001A82                     u2550:
  2634  001A82                     l2757:
  2635  001A82  5009               	movf	___fltol@sign1^0,w,c
  2636  001A84  B4D8               	btfsc	status,2,c
  2637  001A86  EF47  F00D         	goto	u2561
  2638  001A8A  EF49  F00D         	goto	u2560
  2639  001A8E                     u2561:
  2640  001A8E  EF51  F00D         	goto	l2761
  2641  001A92                     u2560:
  2642  001A92  1E04               	comf	(___fltol@f1+3)^0,f,c
  2643  001A94  1E03               	comf	(___fltol@f1+2)^0,f,c
  2644  001A96  1E02               	comf	(___fltol@f1+1)^0,f,c
  2645  001A98  6C01               	negf	___fltol@f1^0,c
  2646  001A9A  0E00               	movlw	0
  2647  001A9C  2202               	addwfc	(___fltol@f1+1)^0,f,c
  2648  001A9E  2203               	addwfc	(___fltol@f1+2)^0,f,c
  2649  001AA0  2204               	addwfc	(___fltol@f1+3)^0,f,c
  2650  001AA2                     l2761:
  2651  001AA2  C001  F001         	movff	___fltol@f1,?___fltol
  2652  001AA6  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  2653  001AAA  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  2654  001AAE  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  2655  001AB2                     l661:
  2656  001AB2  0012               	return		;funcret
  2657  001AB4                     __end_of___fltol:
  2658                           	opt callstack 0
  2659                           
  2660 ;; *************** function ___flsub *****************
  2661 ;; Defined at:
  2662 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  2663 ;; Parameters:    Size  Location     Type
  2664 ;;  b               4   16[COMRAM] long 
  2665 ;;  a               4   20[COMRAM] long 
  2666 ;; Auto vars:     Size  Location     Type
  2667 ;;		None
  2668 ;; Return value:  Size  Location     Type
  2669 ;;                  4   16[COMRAM] long 
  2670 ;; Registers used:
  2671 ;;		wreg, status,2, status,0, cstack
  2672 ;; Tracked objects:
  2673 ;;		On entry : 0/0
  2674 ;;		On exit  : 0/0
  2675 ;;		Unchanged: 0/0
  2676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2677 ;;      Params:         8       0       0       0       0       0       0       0       0
  2678 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2679 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2680 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2681 ;;Total ram usage:        8 bytes
  2682 ;; Hardware stack levels used:    1
  2683 ;; Hardware stack levels required when called:    1
  2684 ;; This function calls:
  2685 ;;		___fladd
  2686 ;; This function is called by:
  2687 ;;		_OledApi_printNum
  2688 ;; This function uses a non-reentrant model
  2689 ;;
  2690                           
  2691                           	psect	text14
  2692  0021BA                     __ptext14:
  2693                           	opt callstack 0
  2694  0021BA                     ___flsub:
  2695                           	opt callstack 26
  2696  0021BA  0E00               	movlw	0
  2697  0021BC  1A15               	xorwf	___flsub@a^0,f,c
  2698  0021BE  0E00               	movlw	0
  2699  0021C0  1A16               	xorwf	(___flsub@a+1)^0,f,c
  2700  0021C2  0E00               	movlw	0
  2701  0021C4  1A17               	xorwf	(___flsub@a+2)^0,f,c
  2702  0021C6  0E80               	movlw	128
  2703  0021C8  1A18               	xorwf	(___flsub@a+3)^0,f,c
  2704  0021CA  C011  F001         	movff	___flsub@b,___fladd@b
  2705  0021CE  C012  F002         	movff	___flsub@b+1,___fladd@b+1
  2706  0021D2  C013  F003         	movff	___flsub@b+2,___fladd@b+2
  2707  0021D6  C014  F004         	movff	___flsub@b+3,___fladd@b+3
  2708  0021DA  C015  F005         	movff	___flsub@a,___fladd@a
  2709  0021DE  C016  F006         	movff	___flsub@a+1,___fladd@a+1
  2710  0021E2  C017  F007         	movff	___flsub@a+2,___fladd@a+2
  2711  0021E6  C018  F008         	movff	___flsub@a+3,___fladd@a+3
  2712  0021EA  EC14  F004         	call	___fladd	;wreg free
  2713  0021EE  C001  F011         	movff	?___fladd,?___flsub
  2714  0021F2  C002  F012         	movff	?___fladd+1,?___flsub+1
  2715  0021F6  C003  F013         	movff	?___fladd+2,?___flsub+2
  2716  0021FA  C004  F014         	movff	?___fladd+3,?___flsub+3
  2717  0021FE  0012               	return		;funcret
  2718  002200                     __end_of___flsub:
  2719                           	opt callstack 0
  2720                           
  2721 ;; *************** function ___fladd *****************
  2722 ;; Defined at:
  2723 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  2724 ;; Parameters:    Size  Location     Type
  2725 ;;  b               4    0[COMRAM] long 
  2726 ;;  a               4    4[COMRAM] long 
  2727 ;; Auto vars:     Size  Location     Type
  2728 ;;  grs             1   15[COMRAM] unsigned char 
  2729 ;;  bexp            1   14[COMRAM] unsigned char 
  2730 ;;  aexp            1   13[COMRAM] unsigned char 
  2731 ;;  signs           1   12[COMRAM] unsigned char 
  2732 ;; Return value:  Size  Location     Type
  2733 ;;                  4    0[COMRAM] unsigned char 
  2734 ;; Registers used:
  2735 ;;		wreg, status,2, status,0
  2736 ;; Tracked objects:
  2737 ;;		On entry : 0/0
  2738 ;;		On exit  : 0/0
  2739 ;;		Unchanged: 0/0
  2740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2741 ;;      Params:         8       0       0       0       0       0       0       0       0
  2742 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2743 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2744 ;;      Totals:        16       0       0       0       0       0       0       0       0
  2745 ;;Total ram usage:       16 bytes
  2746 ;; Hardware stack levels used:    1
  2747 ;; This function calls:
  2748 ;;		Nothing
  2749 ;; This function is called by:
  2750 ;;		___flsub
  2751 ;; This function uses a non-reentrant model
  2752 ;;
  2753                           
  2754                           	psect	text15
  2755  000828                     __ptext15:
  2756                           	opt callstack 0
  2757  000828                     ___fladd:
  2758                           	opt callstack 26
  2759  000828  5004               	movf	(___fladd@b+3)^0,w,c
  2760  00082A  0B80               	andlw	128
  2761  00082C  6E0D               	movwf	___fladd@signs^0,c
  2762  00082E  5004               	movf	(___fladd@b+3)^0,w,c
  2763  000830  2404               	addwf	(___fladd@b+3)^0,w,c
  2764  000832  6E0F               	movwf	___fladd@bexp^0,c
  2765  000834  AE03               	btfss	(___fladd@b+2)^0,7,c
  2766  000836  EF1F  F004         	goto	u1711
  2767  00083A  EF21  F004         	goto	u1710
  2768  00083E                     u1711:
  2769  00083E  EF22  F004         	goto	l2251
  2770  000842                     u1710:
  2771  000842  800F               	bsf	___fladd@bexp^0,0,c
  2772  000844                     l2251:
  2773  000844  500F               	movf	___fladd@bexp^0,w,c
  2774  000846  B4D8               	btfsc	status,2,c
  2775  000848  EF28  F004         	goto	u1721
  2776  00084C  EF2A  F004         	goto	u1720
  2777  000850                     u1721:
  2778  000850  EF3F  F004         	goto	l2261
  2779  000854                     u1720:
  2780  000854  280F               	incf	___fladd@bexp^0,w,c
  2781  000856  A4D8               	btfss	status,2,c
  2782  000858  EF30  F004         	goto	u1731
  2783  00085C  EF32  F004         	goto	u1730
  2784  000860                     u1731:
  2785  000860  EF3A  F004         	goto	l2257
  2786  000864                     u1730:
  2787  000864  0E00               	movlw	0
  2788  000866  6E01               	movwf	___fladd@b^0,c
  2789  000868  0E00               	movlw	0
  2790  00086A  6E02               	movwf	(___fladd@b+1)^0,c
  2791  00086C  0E00               	movlw	0
  2792  00086E  6E03               	movwf	(___fladd@b+2)^0,c
  2793  000870  0E00               	movlw	0
  2794  000872  6E04               	movwf	(___fladd@b+3)^0,c
  2795  000874                     l2257:
  2796  000874  8E03               	bsf	(___fladd@b+2)^0,7,c
  2797  000876  0E00               	movlw	0
  2798  000878  6E04               	movwf	(___fladd@b+3)^0,c
  2799  00087A  EF47  F004         	goto	l2263
  2800  00087E                     l2261:
  2801  00087E  0E00               	movlw	0
  2802  000880  6E01               	movwf	___fladd@b^0,c
  2803  000882  0E00               	movlw	0
  2804  000884  6E02               	movwf	(___fladd@b+1)^0,c
  2805  000886  0E00               	movlw	0
  2806  000888  6E03               	movwf	(___fladd@b+2)^0,c
  2807  00088A  0E00               	movlw	0
  2808  00088C  6E04               	movwf	(___fladd@b+3)^0,c
  2809  00088E                     l2263:
  2810  00088E  5008               	movf	(___fladd@a+3)^0,w,c
  2811  000890  0B80               	andlw	128
  2812  000892  6E0E               	movwf	___fladd@aexp^0,c
  2813  000894  500D               	movf	___fladd@signs^0,w,c
  2814  000896  180E               	xorwf	___fladd@aexp^0,w,c
  2815  000898  B4D8               	btfsc	status,2,c
  2816  00089A  EF51  F004         	goto	u1741
  2817  00089E  EF53  F004         	goto	u1740
  2818  0008A2                     u1741:
  2819  0008A2  EF54  F004         	goto	l2269
  2820  0008A6                     u1740:
  2821  0008A6  8C0D               	bsf	___fladd@signs^0,6,c
  2822  0008A8                     l2269:
  2823  0008A8  5008               	movf	(___fladd@a+3)^0,w,c
  2824  0008AA  2408               	addwf	(___fladd@a+3)^0,w,c
  2825  0008AC  6E0E               	movwf	___fladd@aexp^0,c
  2826  0008AE  AE07               	btfss	(___fladd@a+2)^0,7,c
  2827  0008B0  EF5C  F004         	goto	u1751
  2828  0008B4  EF5E  F004         	goto	u1750
  2829  0008B8                     u1751:
  2830  0008B8  EF5F  F004         	goto	l2275
  2831  0008BC                     u1750:
  2832  0008BC  800E               	bsf	___fladd@aexp^0,0,c
  2833  0008BE                     l2275:
  2834  0008BE  500E               	movf	___fladd@aexp^0,w,c
  2835  0008C0  B4D8               	btfsc	status,2,c
  2836  0008C2  EF65  F004         	goto	u1761
  2837  0008C6  EF67  F004         	goto	u1760
  2838  0008CA                     u1761:
  2839  0008CA  EF7C  F004         	goto	l2285
  2840  0008CE                     u1760:
  2841  0008CE  280E               	incf	___fladd@aexp^0,w,c
  2842  0008D0  A4D8               	btfss	status,2,c
  2843  0008D2  EF6D  F004         	goto	u1771
  2844  0008D6  EF6F  F004         	goto	u1770
  2845  0008DA                     u1771:
  2846  0008DA  EF77  F004         	goto	l2281
  2847  0008DE                     u1770:
  2848  0008DE  0E00               	movlw	0
  2849  0008E0  6E05               	movwf	___fladd@a^0,c
  2850  0008E2  0E00               	movlw	0
  2851  0008E4  6E06               	movwf	(___fladd@a+1)^0,c
  2852  0008E6  0E00               	movlw	0
  2853  0008E8  6E07               	movwf	(___fladd@a+2)^0,c
  2854  0008EA  0E00               	movlw	0
  2855  0008EC  6E08               	movwf	(___fladd@a+3)^0,c
  2856  0008EE                     l2281:
  2857  0008EE  8E07               	bsf	(___fladd@a+2)^0,7,c
  2858  0008F0  0E00               	movlw	0
  2859  0008F2  6E08               	movwf	(___fladd@a+3)^0,c
  2860  0008F4  EF84  F004         	goto	l2287
  2861  0008F8                     l2285:
  2862  0008F8  0E00               	movlw	0
  2863  0008FA  6E05               	movwf	___fladd@a^0,c
  2864  0008FC  0E00               	movlw	0
  2865  0008FE  6E06               	movwf	(___fladd@a+1)^0,c
  2866  000900  0E00               	movlw	0
  2867  000902  6E07               	movwf	(___fladd@a+2)^0,c
  2868  000904  0E00               	movlw	0
  2869  000906  6E08               	movwf	(___fladd@a+3)^0,c
  2870  000908                     l2287:
  2871  000908  500F               	movf	___fladd@bexp^0,w,c
  2872  00090A  5C0E               	subwf	___fladd@aexp^0,w,c
  2873  00090C  B0D8               	btfsc	status,0,c
  2874  00090E  EF8B  F004         	goto	u1781
  2875  000912  EF8D  F004         	goto	u1780
  2876  000916                     u1781:
  2877  000916  EFB4  F004         	goto	l2323
  2878  00091A                     u1780:
  2879  00091A  AC0D               	btfss	___fladd@signs^0,6,c
  2880  00091C  EF92  F004         	goto	u1791
  2881  000920  EF94  F004         	goto	u1790
  2882  000924                     u1791:
  2883  000924  EF96  F004         	goto	l2293
  2884  000928                     u1790:
  2885  000928  0E80               	movlw	128
  2886  00092A  1A0D               	xorwf	___fladd@signs^0,f,c
  2887  00092C                     l2293:
  2888  00092C  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  2889  000930  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  2890  000934  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  2891  000938  C001  F010         	movff	___fladd@b,___fladd@grs
  2892  00093C  C005  F001         	movff	___fladd@a,___fladd@b
  2893  000940  C010  F005         	movff	___fladd@grs,___fladd@a
  2894  000944  C002  F010         	movff	___fladd@b+1,___fladd@grs
  2895  000948  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  2896  00094C  C010  F006         	movff	___fladd@grs,___fladd@a+1
  2897  000950  C003  F010         	movff	___fladd@b+2,___fladd@grs
  2898  000954  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  2899  000958  C010  F007         	movff	___fladd@grs,___fladd@a+2
  2900  00095C  C004  F010         	movff	___fladd@b+3,___fladd@grs
  2901  000960  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  2902  000964  C010  F008         	movff	___fladd@grs,___fladd@a+3
  2903  000968                     l2323:
  2904  000968  0E00               	movlw	0
  2905  00096A  6E10               	movwf	___fladd@grs^0,c
  2906  00096C  500F               	movf	___fladd@bexp^0,w,c
  2907  00096E  C00E  F009         	movff	___fladd@aexp,??___fladd
  2908  000972  6A0A               	clrf	(??___fladd+1)^0,c
  2909  000974  5E09               	subwf	??___fladd^0,f,c
  2910  000976  0E00               	movlw	0
  2911  000978  5A0A               	subwfb	(??___fladd+1)^0,f,c
  2912  00097A  BE0A               	btfsc	(??___fladd+1)^0,7,c
  2913  00097C  EFC9  F004         	goto	u1801
  2914  000980  500A               	movf	(??___fladd+1)^0,w,c
  2915  000982  E109               	bnz	u1800
  2916  000984  0E1A               	movlw	26
  2917  000986  5C09               	subwf	??___fladd^0,w,c
  2918  000988  A0D8               	btfss	status,0,c
  2919  00098A  EFC9  F004         	goto	u1801
  2920  00098E  EFCB  F004         	goto	u1800
  2921  000992                     u1801:
  2922  000992  EF02  F005         	goto	l893
  2923  000996                     u1800:
  2924  000996  5001               	movf	___fladd@b^0,w,c
  2925  000998  1002               	iorwf	(___fladd@b+1)^0,w,c
  2926  00099A  1003               	iorwf	(___fladd@b+2)^0,w,c
  2927  00099C  1004               	iorwf	(___fladd@b+3)^0,w,c
  2928  00099E  A4D8               	btfss	status,2,c
  2929  0009A0  EFD4  F004         	goto	u1811
  2930  0009A4  EFD7  F004         	goto	u1810
  2931  0009A8                     u1811:
  2932  0009A8  0E01               	movlw	1
  2933  0009AA  EFD8  F004         	goto	u1820
  2934  0009AE                     u1810:
  2935  0009AE  0E00               	movlw	0
  2936  0009B0                     u1820:
  2937  0009B0  6E10               	movwf	___fladd@grs^0,c
  2938  0009B2  0E00               	movlw	0
  2939  0009B4  6E01               	movwf	___fladd@b^0,c
  2940  0009B6  0E00               	movlw	0
  2941  0009B8  6E02               	movwf	(___fladd@b+1)^0,c
  2942  0009BA  0E00               	movlw	0
  2943  0009BC  6E03               	movwf	(___fladd@b+2)^0,c
  2944  0009BE  0E00               	movlw	0
  2945  0009C0  6E04               	movwf	(___fladd@b+3)^0,c
  2946  0009C2  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  2947  0009C6  EF0B  F005         	goto	l892
  2948  0009CA                     l894:
  2949  0009CA  A010               	btfss	___fladd@grs^0,0,c
  2950  0009CC  EFEA  F004         	goto	u1831
  2951  0009D0  EFEC  F004         	goto	u1830
  2952  0009D4                     u1831:
  2953  0009D4  EFF2  F004         	goto	l2335
  2954  0009D8                     u1830:
  2955  0009D8  90D8               	bcf	status,0,c
  2956  0009DA  3010               	rrcf	___fladd@grs^0,w,c
  2957  0009DC  0901               	iorlw	1
  2958  0009DE  6E10               	movwf	___fladd@grs^0,c
  2959  0009E0  EFF4  F004         	goto	l2337
  2960  0009E4                     l2335:
  2961  0009E4  90D8               	bcf	status,0,c
  2962  0009E6  3210               	rrcf	___fladd@grs^0,f,c
  2963  0009E8                     l2337:
  2964  0009E8  A001               	btfss	___fladd@b^0,0,c
  2965  0009EA  EFF9  F004         	goto	u1841
  2966  0009EE  EFFB  F004         	goto	u1840
  2967  0009F2                     u1841:
  2968  0009F2  EFFC  F004         	goto	l2341
  2969  0009F6                     u1840:
  2970  0009F6  8E10               	bsf	___fladd@grs^0,7,c
  2971  0009F8                     l2341:
  2972  0009F8  3404               	rlcf	(___fladd@b+3)^0,w,c
  2973  0009FA  3204               	rrcf	(___fladd@b+3)^0,f,c
  2974  0009FC  3203               	rrcf	(___fladd@b+2)^0,f,c
  2975  0009FE  3202               	rrcf	(___fladd@b+1)^0,f,c
  2976  000A00  3201               	rrcf	___fladd@b^0,f,c
  2977  000A02  2A0F               	incf	___fladd@bexp^0,f,c
  2978  000A04                     l893:
  2979  000A04  500E               	movf	___fladd@aexp^0,w,c
  2980  000A06  5C0F               	subwf	___fladd@bexp^0,w,c
  2981  000A08  A0D8               	btfss	status,0,c
  2982  000A0A  EF09  F005         	goto	u1851
  2983  000A0E  EF0B  F005         	goto	u1850
  2984  000A12                     u1851:
  2985  000A12  EFE5  F004         	goto	l894
  2986  000A16                     u1850:
  2987  000A16                     l892:
  2988  000A16  BC0D               	btfsc	___fladd@signs^0,6,c
  2989  000A18  EF10  F005         	goto	u1861
  2990  000A1C  EF12  F005         	goto	u1860
  2991  000A20                     u1861:
  2992  000A20  EF52  F005         	goto	l2369
  2993  000A24                     u1860:
  2994  000A24  500F               	movf	___fladd@bexp^0,w,c
  2995  000A26  A4D8               	btfss	status,2,c
  2996  000A28  EF18  F005         	goto	u1871
  2997  000A2C  EF1A  F005         	goto	u1870
  2998  000A30                     u1871:
  2999  000A30  EF24  F005         	goto	l2351
  3000  000A34                     u1870:
  3001  000A34  0E00               	movlw	0
  3002  000A36  6E01               	movwf	?___fladd^0,c
  3003  000A38  0E00               	movlw	0
  3004  000A3A  6E02               	movwf	(?___fladd+1)^0,c
  3005  000A3C  0E00               	movlw	0
  3006  000A3E  6E03               	movwf	(?___fladd+2)^0,c
  3007  000A40  0E00               	movlw	0
  3008  000A42  6E04               	movwf	(?___fladd+3)^0,c
  3009  000A44  EF73  F006         	goto	l901
  3010  000A48                     l2351:
  3011  000A48  5005               	movf	___fladd@a^0,w,c
  3012  000A4A  2601               	addwf	___fladd@b^0,f,c
  3013  000A4C  5006               	movf	(___fladd@a+1)^0,w,c
  3014  000A4E  2202               	addwfc	(___fladd@b+1)^0,f,c
  3015  000A50  5007               	movf	(___fladd@a+2)^0,w,c
  3016  000A52  2203               	addwfc	(___fladd@b+2)^0,f,c
  3017  000A54  5008               	movf	(___fladd@a+3)^0,w,c
  3018  000A56  2204               	addwfc	(___fladd@b+3)^0,f,c
  3019  000A58  A004               	btfss	(___fladd@b+3)^0,0,c
  3020  000A5A  EF31  F005         	goto	u1881
  3021  000A5E  EF33  F005         	goto	u1880
  3022  000A62                     u1881:
  3023  000A62  EFDF  F005         	goto	l2405
  3024  000A66                     u1880:
  3025  000A66  A010               	btfss	___fladd@grs^0,0,c
  3026  000A68  EF38  F005         	goto	u1891
  3027  000A6C  EF3A  F005         	goto	u1890
  3028  000A70                     u1891:
  3029  000A70  EF40  F005         	goto	l2359
  3030  000A74                     u1890:
  3031  000A74  90D8               	bcf	status,0,c
  3032  000A76  3010               	rrcf	___fladd@grs^0,w,c
  3033  000A78  0901               	iorlw	1
  3034  000A7A  6E10               	movwf	___fladd@grs^0,c
  3035  000A7C  EF42  F005         	goto	l2361
  3036  000A80                     l2359:
  3037  000A80  90D8               	bcf	status,0,c
  3038  000A82  3210               	rrcf	___fladd@grs^0,f,c
  3039  000A84                     l2361:
  3040  000A84  A001               	btfss	___fladd@b^0,0,c
  3041  000A86  EF47  F005         	goto	u1901
  3042  000A8A  EF49  F005         	goto	u1900
  3043  000A8E                     u1901:
  3044  000A8E  EF4A  F005         	goto	l2365
  3045  000A92                     u1900:
  3046  000A92  8E10               	bsf	___fladd@grs^0,7,c
  3047  000A94                     l2365:
  3048  000A94  3404               	rlcf	(___fladd@b+3)^0,w,c
  3049  000A96  3204               	rrcf	(___fladd@b+3)^0,f,c
  3050  000A98  3203               	rrcf	(___fladd@b+2)^0,f,c
  3051  000A9A  3202               	rrcf	(___fladd@b+1)^0,f,c
  3052  000A9C  3201               	rrcf	___fladd@b^0,f,c
  3053  000A9E  2A0F               	incf	___fladd@bexp^0,f,c
  3054  000AA0  EFDF  F005         	goto	l2405
  3055  000AA4                     l2369:
  3056  000AA4  5005               	movf	___fladd@a^0,w,c
  3057  000AA6  5C01               	subwf	___fladd@b^0,w,c
  3058  000AA8  5006               	movf	(___fladd@a+1)^0,w,c
  3059  000AAA  5802               	subwfb	(___fladd@b+1)^0,w,c
  3060  000AAC  5007               	movf	(___fladd@a+2)^0,w,c
  3061  000AAE  5803               	subwfb	(___fladd@b+2)^0,w,c
  3062  000AB0  5004               	movf	(___fladd@b+3)^0,w,c
  3063  000AB2  0A80               	xorlw	128
  3064  000AB4  6E09               	movwf	??___fladd^0,c
  3065  000AB6  5008               	movf	(___fladd@a+3)^0,w,c
  3066  000AB8  0A80               	xorlw	128
  3067  000ABA  5809               	subwfb	??___fladd^0,w,c
  3068  000ABC  B0D8               	btfsc	status,0,c
  3069  000ABE  EF63  F005         	goto	u1911
  3070  000AC2  EF65  F005         	goto	u1910
  3071  000AC6                     u1911:
  3072  000AC6  EF90  F005         	goto	l2379
  3073  000ACA                     u1910:
  3074  000ACA  5001               	movf	___fladd@b^0,w,c
  3075  000ACC  5C05               	subwf	___fladd@a^0,w,c
  3076  000ACE  6E09               	movwf	??___fladd^0,c
  3077  000AD0  5002               	movf	(___fladd@b+1)^0,w,c
  3078  000AD2  5806               	subwfb	(___fladd@a+1)^0,w,c
  3079  000AD4  6E0A               	movwf	(??___fladd+1)^0,c
  3080  000AD6  5003               	movf	(___fladd@b+2)^0,w,c
  3081  000AD8  5807               	subwfb	(___fladd@a+2)^0,w,c
  3082  000ADA  6E0B               	movwf	(??___fladd+2)^0,c
  3083  000ADC  5004               	movf	(___fladd@b+3)^0,w,c
  3084  000ADE  5808               	subwfb	(___fladd@a+3)^0,w,c
  3085  000AE0  6E0C               	movwf	(??___fladd+3)^0,c
  3086  000AE2  0EFF               	movlw	255
  3087  000AE4  2409               	addwf	??___fladd^0,w,c
  3088  000AE6  6E01               	movwf	___fladd@b^0,c
  3089  000AE8  0EFF               	movlw	255
  3090  000AEA  200A               	addwfc	(??___fladd+1)^0,w,c
  3091  000AEC  6E02               	movwf	(___fladd@b+1)^0,c
  3092  000AEE  0EFF               	movlw	255
  3093  000AF0  200B               	addwfc	(??___fladd+2)^0,w,c
  3094  000AF2  6E03               	movwf	(___fladd@b+2)^0,c
  3095  000AF4  0EFF               	movlw	255
  3096  000AF6  200C               	addwfc	(??___fladd+3)^0,w,c
  3097  000AF8  6E04               	movwf	(___fladd@b+3)^0,c
  3098  000AFA  0E80               	movlw	128
  3099  000AFC  1A0D               	xorwf	___fladd@signs^0,f,c
  3100  000AFE  6C10               	negf	___fladd@grs^0,c
  3101  000B00  5010               	movf	___fladd@grs^0,w,c
  3102  000B02  A4D8               	btfss	status,2,c
  3103  000B04  EF86  F005         	goto	u1921
  3104  000B08  EF88  F005         	goto	u1920
  3105  000B0C                     u1921:
  3106  000B0C  EF98  F005         	goto	l909
  3107  000B10                     u1920:
  3108  000B10  0E01               	movlw	1
  3109  000B12  2601               	addwf	___fladd@b^0,f,c
  3110  000B14  0E00               	movlw	0
  3111  000B16  2202               	addwfc	(___fladd@b+1)^0,f,c
  3112  000B18  2203               	addwfc	(___fladd@b+2)^0,f,c
  3113  000B1A  2204               	addwfc	(___fladd@b+3)^0,f,c
  3114  000B1C  EF98  F005         	goto	l909
  3115  000B20                     l2379:
  3116  000B20  5005               	movf	___fladd@a^0,w,c
  3117  000B22  5E01               	subwf	___fladd@b^0,f,c
  3118  000B24  5006               	movf	(___fladd@a+1)^0,w,c
  3119  000B26  5A02               	subwfb	(___fladd@b+1)^0,f,c
  3120  000B28  5007               	movf	(___fladd@a+2)^0,w,c
  3121  000B2A  5A03               	subwfb	(___fladd@b+2)^0,f,c
  3122  000B2C  5008               	movf	(___fladd@a+3)^0,w,c
  3123  000B2E  5A04               	subwfb	(___fladd@b+3)^0,f,c
  3124  000B30                     l909:
  3125  000B30  5001               	movf	___fladd@b^0,w,c
  3126  000B32  1002               	iorwf	(___fladd@b+1)^0,w,c
  3127  000B34  1003               	iorwf	(___fladd@b+2)^0,w,c
  3128  000B36  1004               	iorwf	(___fladd@b+3)^0,w,c
  3129  000B38  A4D8               	btfss	status,2,c
  3130  000B3A  EFA1  F005         	goto	u1931
  3131  000B3E  EFA3  F005         	goto	u1930
  3132  000B42                     u1931:
  3133  000B42  EFD8  F005         	goto	l2403
  3134  000B46                     u1930:
  3135  000B46  5010               	movf	___fladd@grs^0,w,c
  3136  000B48  A4D8               	btfss	status,2,c
  3137  000B4A  EFA9  F005         	goto	u1941
  3138  000B4E  EFAB  F005         	goto	u1940
  3139  000B52                     u1941:
  3140  000B52  EFD8  F005         	goto	l2403
  3141  000B56                     u1940:
  3142  000B56  0E00               	movlw	0
  3143  000B58  6E01               	movwf	?___fladd^0,c
  3144  000B5A  0E00               	movlw	0
  3145  000B5C  6E02               	movwf	(?___fladd+1)^0,c
  3146  000B5E  0E00               	movlw	0
  3147  000B60  6E03               	movwf	(?___fladd+2)^0,c
  3148  000B62  0E00               	movlw	0
  3149  000B64  6E04               	movwf	(?___fladd+3)^0,c
  3150  000B66  EF73  F006         	goto	l901
  3151  000B6A                     l2387:
  3152  000B6A  90D8               	bcf	status,0,c
  3153  000B6C  3601               	rlcf	___fladd@b^0,f,c
  3154  000B6E  3602               	rlcf	(___fladd@b+1)^0,f,c
  3155  000B70  3603               	rlcf	(___fladd@b+2)^0,f,c
  3156  000B72  3604               	rlcf	(___fladd@b+3)^0,f,c
  3157  000B74  AE10               	btfss	___fladd@grs^0,7,c
  3158  000B76  EFBF  F005         	goto	u1951
  3159  000B7A  EFC1  F005         	goto	u1950
  3160  000B7E                     u1951:
  3161  000B7E  EFC2  F005         	goto	l2393
  3162  000B82                     u1950:
  3163  000B82  8001               	bsf	___fladd@b^0,0,c
  3164  000B84                     l2393:
  3165  000B84  A010               	btfss	___fladd@grs^0,0,c
  3166  000B86  EFC7  F005         	goto	u1961
  3167  000B8A  EFC9  F005         	goto	u1960
  3168  000B8E                     u1961:
  3169  000B8E  EFCD  F005         	goto	l2397
  3170  000B92                     u1960:
  3171  000B92  80D8               	bsf	status,0,c
  3172  000B94  3610               	rlcf	___fladd@grs^0,f,c
  3173  000B96  EFCF  F005         	goto	l2399
  3174  000B9A                     l2397:
  3175  000B9A  90D8               	bcf	status,0,c
  3176  000B9C  3610               	rlcf	___fladd@grs^0,f,c
  3177  000B9E                     l2399:
  3178  000B9E  500F               	movf	___fladd@bexp^0,w,c
  3179  000BA0  B4D8               	btfsc	status,2,c
  3180  000BA2  EFD5  F005         	goto	u1971
  3181  000BA6  EFD7  F005         	goto	u1970
  3182  000BAA                     u1971:
  3183  000BAA  EFD8  F005         	goto	l2403
  3184  000BAE                     u1970:
  3185  000BAE  060F               	decf	___fladd@bexp^0,f,c
  3186  000BB0                     l2403:
  3187  000BB0  AE03               	btfss	(___fladd@b+2)^0,7,c
  3188  000BB2  EFDD  F005         	goto	u1981
  3189  000BB6  EFDF  F005         	goto	u1980
  3190  000BBA                     u1981:
  3191  000BBA  EFB5  F005         	goto	l2387
  3192  000BBE                     u1980:
  3193  000BBE                     l2405:
  3194  000BBE  0E00               	movlw	0
  3195  000BC0  6E0E               	movwf	___fladd@aexp^0,c
  3196  000BC2  AE10               	btfss	___fladd@grs^0,7,c
  3197  000BC4  EFE6  F005         	goto	u1991
  3198  000BC8  EFE8  F005         	goto	u1990
  3199  000BCC                     u1991:
  3200  000BCC  EF00  F006         	goto	l918
  3201  000BD0                     u1990:
  3202  000BD0  C010  F009         	movff	___fladd@grs,??___fladd
  3203  000BD4  0E7F               	movlw	127
  3204  000BD6  1609               	andwf	??___fladd^0,f,c
  3205  000BD8  B4D8               	btfsc	status,2,c
  3206  000BDA  EFF1  F005         	goto	u2001
  3207  000BDE  EFF3  F005         	goto	u2000
  3208  000BE2                     u2001:
  3209  000BE2  EFF7  F005         	goto	l919
  3210  000BE6                     u2000:
  3211  000BE6                     l2411:
  3212  000BE6  0E01               	movlw	1
  3213  000BE8  6E0E               	movwf	___fladd@aexp^0,c
  3214  000BEA  EF00  F006         	goto	l918
  3215  000BEE                     l919:
  3216  000BEE  A001               	btfss	___fladd@b^0,0,c
  3217  000BF0  EFFC  F005         	goto	u2011
  3218  000BF4  EFFE  F005         	goto	u2010
  3219  000BF8                     u2011:
  3220  000BF8  EF00  F006         	goto	l918
  3221  000BFC                     u2010:
  3222  000BFC  EFF3  F005         	goto	l2411
  3223  000C00                     l918:
  3224  000C00  500E               	movf	___fladd@aexp^0,w,c
  3225  000C02  B4D8               	btfsc	status,2,c
  3226  000C04  EF06  F006         	goto	u2021
  3227  000C08  EF08  F006         	goto	u2020
  3228  000C0C                     u2021:
  3229  000C0C  EF33  F006         	goto	l2423
  3230  000C10                     u2020:
  3231  000C10  0E01               	movlw	1
  3232  000C12  2601               	addwf	___fladd@b^0,f,c
  3233  000C14  0E00               	movlw	0
  3234  000C16  2202               	addwfc	(___fladd@b+1)^0,f,c
  3235  000C18  2203               	addwfc	(___fladd@b+2)^0,f,c
  3236  000C1A  2204               	addwfc	(___fladd@b+3)^0,f,c
  3237  000C1C  A004               	btfss	(___fladd@b+3)^0,0,c
  3238  000C1E  EF13  F006         	goto	u2031
  3239  000C22  EF15  F006         	goto	u2030
  3240  000C26                     u2031:
  3241  000C26  EF33  F006         	goto	l2423
  3242  000C2A                     u2030:
  3243  000C2A  C001  F009         	movff	___fladd@b,??___fladd
  3244  000C2E  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  3245  000C32  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  3246  000C36  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  3247  000C3A  340C               	rlcf	(??___fladd+3)^0,w,c
  3248  000C3C  320C               	rrcf	(??___fladd+3)^0,f,c
  3249  000C3E  320B               	rrcf	(??___fladd+2)^0,f,c
  3250  000C40  320A               	rrcf	(??___fladd+1)^0,f,c
  3251  000C42  3209               	rrcf	??___fladd^0,f,c
  3252  000C44  C009  F001         	movff	??___fladd,___fladd@b
  3253  000C48  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  3254  000C4C  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  3255  000C50  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  3256  000C54  280F               	incf	___fladd@bexp^0,w,c
  3257  000C56  B4D8               	btfsc	status,2,c
  3258  000C58  EF30  F006         	goto	u2041
  3259  000C5C  EF32  F006         	goto	u2040
  3260  000C60                     u2041:
  3261  000C60  EF33  F006         	goto	l2423
  3262  000C64                     u2040:
  3263  000C64  2A0F               	incf	___fladd@bexp^0,f,c
  3264  000C66                     l2423:
  3265  000C66  280F               	incf	___fladd@bexp^0,w,c
  3266  000C68  B4D8               	btfsc	status,2,c
  3267  000C6A  EF39  F006         	goto	u2051
  3268  000C6E  EF3B  F006         	goto	u2050
  3269  000C72                     u2051:
  3270  000C72  EF43  F006         	goto	l2427
  3271  000C76                     u2050:
  3272  000C76  500F               	movf	___fladd@bexp^0,w,c
  3273  000C78  A4D8               	btfss	status,2,c
  3274  000C7A  EF41  F006         	goto	u2061
  3275  000C7E  EF43  F006         	goto	u2060
  3276  000C82                     u2061:
  3277  000C82  EF55  F006         	goto	l2431
  3278  000C86                     u2060:
  3279  000C86                     l2427:
  3280  000C86  0E00               	movlw	0
  3281  000C88  6E01               	movwf	___fladd@b^0,c
  3282  000C8A  0E00               	movlw	0
  3283  000C8C  6E02               	movwf	(___fladd@b+1)^0,c
  3284  000C8E  0E00               	movlw	0
  3285  000C90  6E03               	movwf	(___fladd@b+2)^0,c
  3286  000C92  0E00               	movlw	0
  3287  000C94  6E04               	movwf	(___fladd@b+3)^0,c
  3288  000C96  500F               	movf	___fladd@bexp^0,w,c
  3289  000C98  A4D8               	btfss	status,2,c
  3290  000C9A  EF51  F006         	goto	u2071
  3291  000C9E  EF53  F006         	goto	u2070
  3292  000CA2                     u2071:
  3293  000CA2  EF55  F006         	goto	l2431
  3294  000CA6                     u2070:
  3295  000CA6  0E00               	movlw	0
  3296  000CA8  6E0D               	movwf	___fladd@signs^0,c
  3297  000CAA                     l2431:
  3298  000CAA  A00F               	btfss	___fladd@bexp^0,0,c
  3299  000CAC  EF5A  F006         	goto	u2081
  3300  000CB0  EF5C  F006         	goto	u2080
  3301  000CB4                     u2081:
  3302  000CB4  EF5F  F006         	goto	l2435
  3303  000CB8                     u2080:
  3304  000CB8  8E03               	bsf	(___fladd@b+2)^0,7,c
  3305  000CBA  EF60  F006         	goto	l2437
  3306  000CBE                     l2435:
  3307  000CBE  9E03               	bcf	(___fladd@b+2)^0,7,c
  3308  000CC0                     l2437:
  3309  000CC0  90D8               	bcf	status,0,c
  3310  000CC2  300F               	rrcf	___fladd@bexp^0,w,c
  3311  000CC4  6E04               	movwf	(___fladd@b+3)^0,c
  3312  000CC6  AE0D               	btfss	___fladd@signs^0,7,c
  3313  000CC8  EF68  F006         	goto	u2091
  3314  000CCC  EF6A  F006         	goto	u2090
  3315  000CD0                     u2091:
  3316  000CD0  EF6B  F006         	goto	l2443
  3317  000CD4                     u2090:
  3318  000CD4  8E04               	bsf	(___fladd@b+3)^0,7,c
  3319  000CD6                     l2443:
  3320  000CD6  C001  F001         	movff	___fladd@b,?___fladd
  3321  000CDA  C002  F002         	movff	___fladd@b+1,?___fladd+1
  3322  000CDE  C003  F003         	movff	___fladd@b+2,?___fladd+2
  3323  000CE2  C004  F004         	movff	___fladd@b+3,?___fladd+3
  3324  000CE6                     l901:
  3325  000CE6  0012               	return		;funcret
  3326  000CE8                     __end_of___fladd:
  3327                           	opt callstack 0
  3328                           
  3329 ;; *************** function ___flmul *****************
  3330 ;; Defined at:
  3331 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
  3332 ;; Parameters:    Size  Location     Type
  3333 ;;  b               4    0[COMRAM] unsigned char 
  3334 ;;  a               4    4[COMRAM] unsigned char 
  3335 ;; Auto vars:     Size  Location     Type
  3336 ;;  prod            4   19[COMRAM] struct .
  3337 ;;  grs             4   13[COMRAM] unsigned long 
  3338 ;;  temp            2   23[COMRAM] struct .
  3339 ;;  bexp            1   18[COMRAM] unsigned char 
  3340 ;;  aexp            1   17[COMRAM] unsigned char 
  3341 ;;  sign            1   12[COMRAM] unsigned char 
  3342 ;; Return value:  Size  Location     Type
  3343 ;;                  4    0[COMRAM] unsigned char 
  3344 ;; Registers used:
  3345 ;;		wreg, status,2, status,0, prodl, prodh
  3346 ;; Tracked objects:
  3347 ;;		On entry : 0/0
  3348 ;;		On exit  : 0/0
  3349 ;;		Unchanged: 0/0
  3350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3351 ;;      Params:         8       0       0       0       0       0       0       0       0
  3352 ;;      Locals:        13       0       0       0       0       0       0       0       0
  3353 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3354 ;;      Totals:        25       0       0       0       0       0       0       0       0
  3355 ;;Total ram usage:       25 bytes
  3356 ;; Hardware stack levels used:    1
  3357 ;; This function calls:
  3358 ;;		Nothing
  3359 ;; This function is called by:
  3360 ;;		_OledApi_printNum
  3361 ;; This function uses a non-reentrant model
  3362 ;;
  3363                           
  3364                           	psect	text16
  3365  000CE8                     __ptext16:
  3366                           	opt callstack 0
  3367  000CE8                     ___flmul:
  3368                           	opt callstack 27
  3369  000CE8  5004               	movf	(___flmul@b+3)^0,w,c
  3370  000CEA  0B80               	andlw	128
  3371  000CEC  6E0D               	movwf	___flmul@sign^0,c
  3372  000CEE  5004               	movf	(___flmul@b+3)^0,w,c
  3373  000CF0  2404               	addwf	(___flmul@b+3)^0,w,c
  3374  000CF2  6E13               	movwf	___flmul@bexp^0,c
  3375  000CF4  AE03               	btfss	(___flmul@b+2)^0,7,c
  3376  000CF6  EF7F  F006         	goto	u2261
  3377  000CFA  EF81  F006         	goto	u2260
  3378  000CFE                     u2261:
  3379  000CFE  EF82  F006         	goto	l2569
  3380  000D02                     u2260:
  3381  000D02  8013               	bsf	___flmul@bexp^0,0,c
  3382  000D04                     l2569:
  3383  000D04  5013               	movf	___flmul@bexp^0,w,c
  3384  000D06  B4D8               	btfsc	status,2,c
  3385  000D08  EF88  F006         	goto	u2271
  3386  000D0C  EF8A  F006         	goto	u2270
  3387  000D10                     u2271:
  3388  000D10  EF9D  F006         	goto	l2577
  3389  000D14                     u2270:
  3390  000D14  2813               	incf	___flmul@bexp^0,w,c
  3391  000D16  A4D8               	btfss	status,2,c
  3392  000D18  EF90  F006         	goto	u2281
  3393  000D1C  EF92  F006         	goto	u2280
  3394  000D20                     u2281:
  3395  000D20  EF9A  F006         	goto	l2575
  3396  000D24                     u2280:
  3397  000D24  0E00               	movlw	0
  3398  000D26  6E01               	movwf	___flmul@b^0,c
  3399  000D28  0E00               	movlw	0
  3400  000D2A  6E02               	movwf	(___flmul@b+1)^0,c
  3401  000D2C  0E00               	movlw	0
  3402  000D2E  6E03               	movwf	(___flmul@b+2)^0,c
  3403  000D30  0E00               	movlw	0
  3404  000D32  6E04               	movwf	(___flmul@b+3)^0,c
  3405  000D34                     l2575:
  3406  000D34  8E03               	bsf	(___flmul@b+2)^0,7,c
  3407  000D36  EFA5  F006         	goto	l2579
  3408  000D3A                     l2577:
  3409  000D3A  0E00               	movlw	0
  3410  000D3C  6E01               	movwf	___flmul@b^0,c
  3411  000D3E  0E00               	movlw	0
  3412  000D40  6E02               	movwf	(___flmul@b+1)^0,c
  3413  000D42  0E00               	movlw	0
  3414  000D44  6E03               	movwf	(___flmul@b+2)^0,c
  3415  000D46  0E00               	movlw	0
  3416  000D48  6E04               	movwf	(___flmul@b+3)^0,c
  3417  000D4A                     l2579:
  3418  000D4A  5008               	movf	(___flmul@a+3)^0,w,c
  3419  000D4C  0B80               	andlw	128
  3420  000D4E  1A0D               	xorwf	___flmul@sign^0,f,c
  3421  000D50  5008               	movf	(___flmul@a+3)^0,w,c
  3422  000D52  2408               	addwf	(___flmul@a+3)^0,w,c
  3423  000D54  6E12               	movwf	___flmul@aexp^0,c
  3424  000D56  AE07               	btfss	(___flmul@a+2)^0,7,c
  3425  000D58  EFB0  F006         	goto	u2291
  3426  000D5C  EFB2  F006         	goto	u2290
  3427  000D60                     u2291:
  3428  000D60  EFB3  F006         	goto	l2587
  3429  000D64                     u2290:
  3430  000D64  8012               	bsf	___flmul@aexp^0,0,c
  3431  000D66                     l2587:
  3432  000D66  5012               	movf	___flmul@aexp^0,w,c
  3433  000D68  B4D8               	btfsc	status,2,c
  3434  000D6A  EFB9  F006         	goto	u2301
  3435  000D6E  EFBB  F006         	goto	u2300
  3436  000D72                     u2301:
  3437  000D72  EFCE  F006         	goto	l2595
  3438  000D76                     u2300:
  3439  000D76  2812               	incf	___flmul@aexp^0,w,c
  3440  000D78  A4D8               	btfss	status,2,c
  3441  000D7A  EFC1  F006         	goto	u2311
  3442  000D7E  EFC3  F006         	goto	u2310
  3443  000D82                     u2311:
  3444  000D82  EFCB  F006         	goto	l2593
  3445  000D86                     u2310:
  3446  000D86  0E00               	movlw	0
  3447  000D88  6E05               	movwf	___flmul@a^0,c
  3448  000D8A  0E00               	movlw	0
  3449  000D8C  6E06               	movwf	(___flmul@a+1)^0,c
  3450  000D8E  0E00               	movlw	0
  3451  000D90  6E07               	movwf	(___flmul@a+2)^0,c
  3452  000D92  0E00               	movlw	0
  3453  000D94  6E08               	movwf	(___flmul@a+3)^0,c
  3454  000D96                     l2593:
  3455  000D96  8E07               	bsf	(___flmul@a+2)^0,7,c
  3456  000D98  EFD6  F006         	goto	l978
  3457  000D9C                     l2595:
  3458  000D9C  0E00               	movlw	0
  3459  000D9E  6E05               	movwf	___flmul@a^0,c
  3460  000DA0  0E00               	movlw	0
  3461  000DA2  6E06               	movwf	(___flmul@a+1)^0,c
  3462  000DA4  0E00               	movlw	0
  3463  000DA6  6E07               	movwf	(___flmul@a+2)^0,c
  3464  000DA8  0E00               	movlw	0
  3465  000DAA  6E08               	movwf	(___flmul@a+3)^0,c
  3466  000DAC                     l978:
  3467  000DAC  5012               	movf	___flmul@aexp^0,w,c
  3468  000DAE  B4D8               	btfsc	status,2,c
  3469  000DB0  EFDC  F006         	goto	u2321
  3470  000DB4  EFDE  F006         	goto	u2320
  3471  000DB8                     u2321:
  3472  000DB8  EFE6  F006         	goto	l2599
  3473  000DBC                     u2320:
  3474  000DBC  5013               	movf	___flmul@bexp^0,w,c
  3475  000DBE  A4D8               	btfss	status,2,c
  3476  000DC0  EFE4  F006         	goto	u2331
  3477  000DC4  EFE6  F006         	goto	u2330
  3478  000DC8                     u2331:
  3479  000DC8  EFF0  F006         	goto	l2603
  3480  000DCC                     u2330:
  3481  000DCC                     l2599:
  3482  000DCC  0E00               	movlw	0
  3483  000DCE  6E01               	movwf	?___flmul^0,c
  3484  000DD0  0E00               	movlw	0
  3485  000DD2  6E02               	movwf	(?___flmul+1)^0,c
  3486  000DD4  0E00               	movlw	0
  3487  000DD6  6E03               	movwf	(?___flmul+2)^0,c
  3488  000DD8  0E00               	movlw	0
  3489  000DDA  6E04               	movwf	(?___flmul+3)^0,c
  3490  000DDC  EF88  F008         	goto	l982
  3491  000DE0                     l2603:
  3492  000DE0  5007               	movf	(___flmul@a+2)^0,w,c
  3493  000DE2  0201               	mulwf	___flmul@b^0,c
  3494  000DE4  CFF3 F018          	movff	prodl,___flmul@temp
  3495  000DE8  CFF4 F019          	movff	prodh,___flmul@temp+1
  3496  000DEC  5018               	movf	___flmul@temp^0,w,c
  3497  000DEE  6E0E               	movwf	___flmul@grs^0,c
  3498  000DF0  6A0F               	clrf	(___flmul@grs+1)^0,c
  3499  000DF2  6A10               	clrf	(___flmul@grs+2)^0,c
  3500  000DF4  6A11               	clrf	(___flmul@grs+3)^0,c
  3501  000DF6  5019               	movf	(___flmul@temp+1)^0,w,c
  3502  000DF8  6E14               	movwf	___flmul@prod^0,c
  3503  000DFA  6A15               	clrf	(___flmul@prod+1)^0,c
  3504  000DFC  6A16               	clrf	(___flmul@prod+2)^0,c
  3505  000DFE  6A17               	clrf	(___flmul@prod+3)^0,c
  3506  000E00  5006               	movf	(___flmul@a+1)^0,w,c
  3507  000E02  0202               	mulwf	(___flmul@b+1)^0,c
  3508  000E04  CFF3 F018          	movff	prodl,___flmul@temp
  3509  000E08  CFF4 F019          	movff	prodh,___flmul@temp+1
  3510  000E0C  5018               	movf	___flmul@temp^0,w,c
  3511  000E0E  260E               	addwf	___flmul@grs^0,f,c
  3512  000E10  0E00               	movlw	0
  3513  000E12  220F               	addwfc	(___flmul@grs+1)^0,f,c
  3514  000E14  2210               	addwfc	(___flmul@grs+2)^0,f,c
  3515  000E16  2211               	addwfc	(___flmul@grs+3)^0,f,c
  3516  000E18  5019               	movf	(___flmul@temp+1)^0,w,c
  3517  000E1A  2614               	addwf	___flmul@prod^0,f,c
  3518  000E1C  0E00               	movlw	0
  3519  000E1E  2215               	addwfc	(___flmul@prod+1)^0,f,c
  3520  000E20  2216               	addwfc	(___flmul@prod+2)^0,f,c
  3521  000E22  2217               	addwfc	(___flmul@prod+3)^0,f,c
  3522  000E24  5005               	movf	___flmul@a^0,w,c
  3523  000E26  0203               	mulwf	(___flmul@b+2)^0,c
  3524  000E28  CFF3 F018          	movff	prodl,___flmul@temp
  3525  000E2C  CFF4 F019          	movff	prodh,___flmul@temp+1
  3526  000E30  5018               	movf	___flmul@temp^0,w,c
  3527  000E32  260E               	addwf	___flmul@grs^0,f,c
  3528  000E34  0E00               	movlw	0
  3529  000E36  220F               	addwfc	(___flmul@grs+1)^0,f,c
  3530  000E38  2210               	addwfc	(___flmul@grs+2)^0,f,c
  3531  000E3A  2211               	addwfc	(___flmul@grs+3)^0,f,c
  3532  000E3C  5019               	movf	(___flmul@temp+1)^0,w,c
  3533  000E3E  2614               	addwf	___flmul@prod^0,f,c
  3534  000E40  0E00               	movlw	0
  3535  000E42  2215               	addwfc	(___flmul@prod+1)^0,f,c
  3536  000E44  2216               	addwfc	(___flmul@prod+2)^0,f,c
  3537  000E46  2217               	addwfc	(___flmul@prod+3)^0,f,c
  3538  000E48  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  3539  000E4C  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  3540  000E50  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  3541  000E54  6A0E               	clrf	___flmul@grs^0,c
  3542  000E56  5005               	movf	___flmul@a^0,w,c
  3543  000E58  0202               	mulwf	(___flmul@b+1)^0,c
  3544  000E5A  CFF3 F018          	movff	prodl,___flmul@temp
  3545  000E5E  CFF4 F019          	movff	prodh,___flmul@temp+1
  3546  000E62  5018               	movf	___flmul@temp^0,w,c
  3547  000E64  260E               	addwf	___flmul@grs^0,f,c
  3548  000E66  5019               	movf	(___flmul@temp+1)^0,w,c
  3549  000E68  220F               	addwfc	(___flmul@grs+1)^0,f,c
  3550  000E6A  0E00               	movlw	0
  3551  000E6C  2210               	addwfc	(___flmul@grs+2)^0,f,c
  3552  000E6E  0E00               	movlw	0
  3553  000E70  2211               	addwfc	(___flmul@grs+3)^0,f,c
  3554  000E72  5006               	movf	(___flmul@a+1)^0,w,c
  3555  000E74  0201               	mulwf	___flmul@b^0,c
  3556  000E76  CFF3 F018          	movff	prodl,___flmul@temp
  3557  000E7A  CFF4 F019          	movff	prodh,___flmul@temp+1
  3558  000E7E  5018               	movf	___flmul@temp^0,w,c
  3559  000E80  260E               	addwf	___flmul@grs^0,f,c
  3560  000E82  5019               	movf	(___flmul@temp+1)^0,w,c
  3561  000E84  220F               	addwfc	(___flmul@grs+1)^0,f,c
  3562  000E86  0E00               	movlw	0
  3563  000E88  2210               	addwfc	(___flmul@grs+2)^0,f,c
  3564  000E8A  0E00               	movlw	0
  3565  000E8C  2211               	addwfc	(___flmul@grs+3)^0,f,c
  3566  000E8E  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  3567  000E92  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  3568  000E96  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  3569  000E9A  6A0E               	clrf	___flmul@grs^0,c
  3570  000E9C  5005               	movf	___flmul@a^0,w,c
  3571  000E9E  0201               	mulwf	___flmul@b^0,c
  3572  000EA0  CFF3 F018          	movff	prodl,___flmul@temp
  3573  000EA4  CFF4 F019          	movff	prodh,___flmul@temp+1
  3574  000EA8  5018               	movf	___flmul@temp^0,w,c
  3575  000EAA  260E               	addwf	___flmul@grs^0,f,c
  3576  000EAC  5019               	movf	(___flmul@temp+1)^0,w,c
  3577  000EAE  220F               	addwfc	(___flmul@grs+1)^0,f,c
  3578  000EB0  0E00               	movlw	0
  3579  000EB2  2210               	addwfc	(___flmul@grs+2)^0,f,c
  3580  000EB4  0E00               	movlw	0
  3581  000EB6  2211               	addwfc	(___flmul@grs+3)^0,f,c
  3582  000EB8  5007               	movf	(___flmul@a+2)^0,w,c
  3583  000EBA  0202               	mulwf	(___flmul@b+1)^0,c
  3584  000EBC  CFF3 F018          	movff	prodl,___flmul@temp
  3585  000EC0  CFF4 F019          	movff	prodh,___flmul@temp+1
  3586  000EC4  5018               	movf	___flmul@temp^0,w,c
  3587  000EC6  2614               	addwf	___flmul@prod^0,f,c
  3588  000EC8  5019               	movf	(___flmul@temp+1)^0,w,c
  3589  000ECA  2215               	addwfc	(___flmul@prod+1)^0,f,c
  3590  000ECC  0E00               	movlw	0
  3591  000ECE  2216               	addwfc	(___flmul@prod+2)^0,f,c
  3592  000ED0  0E00               	movlw	0
  3593  000ED2  2217               	addwfc	(___flmul@prod+3)^0,f,c
  3594  000ED4  5006               	movf	(___flmul@a+1)^0,w,c
  3595  000ED6  0203               	mulwf	(___flmul@b+2)^0,c
  3596  000ED8  CFF3 F018          	movff	prodl,___flmul@temp
  3597  000EDC  CFF4 F019          	movff	prodh,___flmul@temp+1
  3598  000EE0  5018               	movf	___flmul@temp^0,w,c
  3599  000EE2  2614               	addwf	___flmul@prod^0,f,c
  3600  000EE4  5019               	movf	(___flmul@temp+1)^0,w,c
  3601  000EE6  2215               	addwfc	(___flmul@prod+1)^0,f,c
  3602  000EE8  0E00               	movlw	0
  3603  000EEA  2216               	addwfc	(___flmul@prod+2)^0,f,c
  3604  000EEC  0E00               	movlw	0
  3605  000EEE  2217               	addwfc	(___flmul@prod+3)^0,f,c
  3606  000EF0  5007               	movf	(___flmul@a+2)^0,w,c
  3607  000EF2  0203               	mulwf	(___flmul@b+2)^0,c
  3608  000EF4  CFF3 F018          	movff	prodl,___flmul@temp
  3609  000EF8  CFF4 F019          	movff	prodh,___flmul@temp+1
  3610  000EFC  5018               	movf	___flmul@temp^0,w,c
  3611  000EFE  6E09               	movwf	??___flmul^0,c
  3612  000F00  5019               	movf	(___flmul@temp+1)^0,w,c
  3613  000F02  6E0A               	movwf	(??___flmul+1)^0,c
  3614  000F04  6A0B               	clrf	(??___flmul+2)^0,c
  3615  000F06  6A0C               	clrf	(??___flmul+3)^0,c
  3616  000F08  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  3617  000F0C  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  3618  000F10  C009  F00A         	movff	??___flmul,??___flmul+1
  3619  000F14  6A09               	clrf	??___flmul^0,c
  3620  000F16  5009               	movf	??___flmul^0,w,c
  3621  000F18  2614               	addwf	___flmul@prod^0,f,c
  3622  000F1A  500A               	movf	(??___flmul+1)^0,w,c
  3623  000F1C  2215               	addwfc	(___flmul@prod+1)^0,f,c
  3624  000F1E  500B               	movf	(??___flmul+2)^0,w,c
  3625  000F20  2216               	addwfc	(___flmul@prod+2)^0,f,c
  3626  000F22  500C               	movf	(??___flmul+3)^0,w,c
  3627  000F24  2217               	addwfc	(___flmul@prod+3)^0,f,c
  3628  000F26  C00E  F009         	movff	___flmul@grs,??___flmul
  3629  000F2A  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  3630  000F2E  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  3631  000F32  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  3632  000F36  0E19               	movlw	25
  3633  000F38  EFA3  F007         	goto	u2340
  3634  000F3C                     u2345:
  3635  000F3C  90D8               	bcf	status,0,c
  3636  000F3E  320C               	rrcf	(??___flmul+3)^0,f,c
  3637  000F40  320B               	rrcf	(??___flmul+2)^0,f,c
  3638  000F42  320A               	rrcf	(??___flmul+1)^0,f,c
  3639  000F44  3209               	rrcf	??___flmul^0,f,c
  3640  000F46                     u2340:
  3641  000F46  2EE8               	decfsz	wreg,f,c
  3642  000F48  EF9E  F007         	goto	u2345
  3643  000F4C  5009               	movf	??___flmul^0,w,c
  3644  000F4E  2614               	addwf	___flmul@prod^0,f,c
  3645  000F50  500A               	movf	(??___flmul+1)^0,w,c
  3646  000F52  2215               	addwfc	(___flmul@prod+1)^0,f,c
  3647  000F54  500B               	movf	(??___flmul+2)^0,w,c
  3648  000F56  2216               	addwfc	(___flmul@prod+2)^0,f,c
  3649  000F58  500C               	movf	(??___flmul+3)^0,w,c
  3650  000F5A  2217               	addwfc	(___flmul@prod+3)^0,f,c
  3651  000F5C  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  3652  000F60  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  3653  000F64  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  3654  000F68  6A0E               	clrf	___flmul@grs^0,c
  3655  000F6A  5012               	movf	___flmul@aexp^0,w,c
  3656  000F6C  C013  F009         	movff	___flmul@bexp,??___flmul
  3657  000F70  6A0A               	clrf	(??___flmul+1)^0,c
  3658  000F72  2609               	addwf	??___flmul^0,f,c
  3659  000F74  0E00               	movlw	0
  3660  000F76  220A               	addwfc	(??___flmul+1)^0,f,c
  3661  000F78  0E82               	movlw	130
  3662  000F7A  2409               	addwf	??___flmul^0,w,c
  3663  000F7C  6E18               	movwf	___flmul@temp^0,c
  3664  000F7E  0EFF               	movlw	255
  3665  000F80  200A               	addwfc	(??___flmul+1)^0,w,c
  3666  000F82  6E19               	movwf	(___flmul@temp+1)^0,c
  3667  000F84  EFD9  F007         	goto	l2651
  3668  000F88                     l2645:
  3669  000F88  90D8               	bcf	status,0,c
  3670  000F8A  3614               	rlcf	___flmul@prod^0,f,c
  3671  000F8C  3615               	rlcf	(___flmul@prod+1)^0,f,c
  3672  000F8E  3616               	rlcf	(___flmul@prod+2)^0,f,c
  3673  000F90  3617               	rlcf	(___flmul@prod+3)^0,f,c
  3674  000F92  AE11               	btfss	(___flmul@grs+3)^0,7,c
  3675  000F94  EFCE  F007         	goto	u2351
  3676  000F98  EFD0  F007         	goto	u2350
  3677  000F9C                     u2351:
  3678  000F9C  EFD1  F007         	goto	l985
  3679  000FA0                     u2350:
  3680  000FA0  8014               	bsf	___flmul@prod^0,0,c
  3681  000FA2                     l985:
  3682  000FA2  90D8               	bcf	status,0,c
  3683  000FA4  360E               	rlcf	___flmul@grs^0,f,c
  3684  000FA6  360F               	rlcf	(___flmul@grs+1)^0,f,c
  3685  000FA8  3610               	rlcf	(___flmul@grs+2)^0,f,c
  3686  000FAA  3611               	rlcf	(___flmul@grs+3)^0,f,c
  3687  000FAC  0618               	decf	___flmul@temp^0,f,c
  3688  000FAE  A0D8               	btfss	status,0,c
  3689  000FB0  0619               	decf	(___flmul@temp+1)^0,f,c
  3690  000FB2                     l2651:
  3691  000FB2  AE16               	btfss	(___flmul@prod+2)^0,7,c
  3692  000FB4  EFDE  F007         	goto	u2361
  3693  000FB8  EFE0  F007         	goto	u2360
  3694  000FBC                     u2361:
  3695  000FBC  EFC4  F007         	goto	l2645
  3696  000FC0                     u2360:
  3697  000FC0  0E00               	movlw	0
  3698  000FC2  6E12               	movwf	___flmul@aexp^0,c
  3699  000FC4  AE11               	btfss	(___flmul@grs+3)^0,7,c
  3700  000FC6  EFE7  F007         	goto	u2371
  3701  000FCA  EFE9  F007         	goto	u2370
  3702  000FCE                     u2371:
  3703  000FCE  EF0D  F008         	goto	l987
  3704  000FD2                     u2370:
  3705  000FD2  0EFF               	movlw	255
  3706  000FD4  140E               	andwf	___flmul@grs^0,w,c
  3707  000FD6  6E09               	movwf	??___flmul^0,c
  3708  000FD8  0EFF               	movlw	255
  3709  000FDA  140F               	andwf	(___flmul@grs+1)^0,w,c
  3710  000FDC  6E0A               	movwf	(??___flmul+1)^0,c
  3711  000FDE  0EFF               	movlw	255
  3712  000FE0  1410               	andwf	(___flmul@grs+2)^0,w,c
  3713  000FE2  6E0B               	movwf	(??___flmul+2)^0,c
  3714  000FE4  0E7F               	movlw	127
  3715  000FE6  1411               	andwf	(___flmul@grs+3)^0,w,c
  3716  000FE8  6E0C               	movwf	(??___flmul+3)^0,c
  3717  000FEA  5009               	movf	??___flmul^0,w,c
  3718  000FEC  100A               	iorwf	(??___flmul+1)^0,w,c
  3719  000FEE  100B               	iorwf	(??___flmul+2)^0,w,c
  3720  000FF0  100C               	iorwf	(??___flmul+3)^0,w,c
  3721  000FF2  B4D8               	btfsc	status,2,c
  3722  000FF4  EFFE  F007         	goto	u2381
  3723  000FF8  EF00  F008         	goto	u2380
  3724  000FFC                     u2381:
  3725  000FFC  EF04  F008         	goto	l988
  3726  001000                     u2380:
  3727  001000                     l2659:
  3728  001000  0E01               	movlw	1
  3729  001002  6E12               	movwf	___flmul@aexp^0,c
  3730  001004  EF0D  F008         	goto	l987
  3731  001008                     l988:
  3732  001008  A014               	btfss	___flmul@prod^0,0,c
  3733  00100A  EF09  F008         	goto	u2391
  3734  00100E  EF0B  F008         	goto	u2390
  3735  001012                     u2391:
  3736  001012  EF0D  F008         	goto	l987
  3737  001016                     u2390:
  3738  001016  EF00  F008         	goto	l2659
  3739  00101A                     l987:
  3740  00101A  5012               	movf	___flmul@aexp^0,w,c
  3741  00101C  B4D8               	btfsc	status,2,c
  3742  00101E  EF13  F008         	goto	u2401
  3743  001022  EF15  F008         	goto	u2400
  3744  001026                     u2401:
  3745  001026  EF39  F008         	goto	l2671
  3746  00102A                     u2400:
  3747  00102A  0E01               	movlw	1
  3748  00102C  2614               	addwf	___flmul@prod^0,f,c
  3749  00102E  0E00               	movlw	0
  3750  001030  2215               	addwfc	(___flmul@prod+1)^0,f,c
  3751  001032  2216               	addwfc	(___flmul@prod+2)^0,f,c
  3752  001034  2217               	addwfc	(___flmul@prod+3)^0,f,c
  3753  001036  A017               	btfss	(___flmul@prod+3)^0,0,c
  3754  001038  EF20  F008         	goto	u2411
  3755  00103C  EF22  F008         	goto	u2410
  3756  001040                     u2411:
  3757  001040  EF39  F008         	goto	l2671
  3758  001044                     u2410:
  3759  001044  C014  F009         	movff	___flmul@prod,??___flmul
  3760  001048  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  3761  00104C  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  3762  001050  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  3763  001054  340C               	rlcf	(??___flmul+3)^0,w,c
  3764  001056  320C               	rrcf	(??___flmul+3)^0,f,c
  3765  001058  320B               	rrcf	(??___flmul+2)^0,f,c
  3766  00105A  320A               	rrcf	(??___flmul+1)^0,f,c
  3767  00105C  3209               	rrcf	??___flmul^0,f,c
  3768  00105E  C009  F014         	movff	??___flmul,___flmul@prod
  3769  001062  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  3770  001066  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  3771  00106A  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  3772  00106E  4A18               	infsnz	___flmul@temp^0,f,c
  3773  001070  2A19               	incf	(___flmul@temp+1)^0,f,c
  3774  001072                     l2671:
  3775  001072  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  3776  001074  EF44  F008         	goto	u2421
  3777  001078  5019               	movf	(___flmul@temp+1)^0,w,c
  3778  00107A  E108               	bnz	u2420
  3779  00107C  2818               	incf	___flmul@temp^0,w,c
  3780  00107E  A0D8               	btfss	status,0,c
  3781  001080  EF44  F008         	goto	u2421
  3782  001084  EF46  F008         	goto	u2420
  3783  001088                     u2421:
  3784  001088  EF50  F008         	goto	l2675
  3785  00108C                     u2420:
  3786  00108C  0E00               	movlw	0
  3787  00108E  6E14               	movwf	___flmul@prod^0,c
  3788  001090  0E00               	movlw	0
  3789  001092  6E15               	movwf	(___flmul@prod+1)^0,c
  3790  001094  0E80               	movlw	128
  3791  001096  6E16               	movwf	(___flmul@prod+2)^0,c
  3792  001098  0E7F               	movlw	127
  3793  00109A  6E17               	movwf	(___flmul@prod+3)^0,c
  3794  00109C  EF7E  F008         	goto	l2687
  3795  0010A0                     l2675:
  3796  0010A0  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  3797  0010A2  EF5D  F008         	goto	u2430
  3798  0010A6  5019               	movf	(___flmul@temp+1)^0,w,c
  3799  0010A8  E106               	bnz	u2431
  3800  0010AA  0418               	decf	___flmul@temp^0,w,c
  3801  0010AC  B0D8               	btfsc	status,0,c
  3802  0010AE  EF5B  F008         	goto	u2431
  3803  0010B2  EF5D  F008         	goto	u2430
  3804  0010B6                     u2431:
  3805  0010B6  EF69  F008         	goto	l995
  3806  0010BA                     u2430:
  3807  0010BA  0E00               	movlw	0
  3808  0010BC  6E14               	movwf	___flmul@prod^0,c
  3809  0010BE  0E00               	movlw	0
  3810  0010C0  6E15               	movwf	(___flmul@prod+1)^0,c
  3811  0010C2  0E00               	movlw	0
  3812  0010C4  6E16               	movwf	(___flmul@prod+2)^0,c
  3813  0010C6  0E00               	movlw	0
  3814  0010C8  6E17               	movwf	(___flmul@prod+3)^0,c
  3815  0010CA  0E00               	movlw	0
  3816  0010CC  6E0D               	movwf	___flmul@sign^0,c
  3817  0010CE  EF7E  F008         	goto	l2687
  3818  0010D2                     l995:
  3819  0010D2  C018  F013         	movff	___flmul@temp,___flmul@bexp
  3820  0010D6  0EFF               	movlw	255
  3821  0010D8  1614               	andwf	___flmul@prod^0,f,c
  3822  0010DA  0EFF               	movlw	255
  3823  0010DC  1615               	andwf	(___flmul@prod+1)^0,f,c
  3824  0010DE  0E7F               	movlw	127
  3825  0010E0  1616               	andwf	(___flmul@prod+2)^0,f,c
  3826  0010E2  0E00               	movlw	0
  3827  0010E4  1617               	andwf	(___flmul@prod+3)^0,f,c
  3828  0010E6  A013               	btfss	___flmul@bexp^0,0,c
  3829  0010E8  EF78  F008         	goto	u2441
  3830  0010EC  EF7A  F008         	goto	u2440
  3831  0010F0                     u2441:
  3832  0010F0  EF7B  F008         	goto	l2685
  3833  0010F4                     u2440:
  3834  0010F4  8E16               	bsf	(___flmul@prod+2)^0,7,c
  3835  0010F6                     l2685:
  3836  0010F6  90D8               	bcf	status,0,c
  3837  0010F8  3013               	rrcf	___flmul@bexp^0,w,c
  3838  0010FA  6E17               	movwf	(___flmul@prod+3)^0,c
  3839  0010FC                     l2687:
  3840  0010FC  500D               	movf	___flmul@sign^0,w,c
  3841  0010FE  1217               	iorwf	(___flmul@prod+3)^0,f,c
  3842  001100  C014  F001         	movff	___flmul@prod,?___flmul
  3843  001104  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  3844  001108  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  3845  00110C  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  3846  001110                     l982:
  3847  001110  0012               	return		;funcret
  3848  001112                     __end_of___flmul:
  3849                           	opt callstack 0
  3850                           
  3851 ;; *************** function ___flge *****************
  3852 ;; Defined at:
  3853 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
  3854 ;; Parameters:    Size  Location     Type
  3855 ;;  ff1             4   24[COMRAM] unsigned char 
  3856 ;;  ff2             4   28[COMRAM] unsigned char 
  3857 ;; Auto vars:     Size  Location     Type
  3858 ;;		None
  3859 ;; Return value:  Size  Location     Type
  3860 ;;		None               void
  3861 ;; Registers used:
  3862 ;;		wreg, status,2, status,0
  3863 ;; Tracked objects:
  3864 ;;		On entry : 0/0
  3865 ;;		On exit  : 0/0
  3866 ;;		Unchanged: 0/0
  3867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3868 ;;      Params:         8       0       0       0       0       0       0       0       0
  3869 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3870 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3871 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3872 ;;Total ram usage:       12 bytes
  3873 ;; Hardware stack levels used:    1
  3874 ;; This function calls:
  3875 ;;		Nothing
  3876 ;; This function is called by:
  3877 ;;		_OledApi_printNum
  3878 ;; This function uses a non-reentrant model
  3879 ;;
  3880                           
  3881                           	psect	text17
  3882  001AB4                     __ptext17:
  3883                           	opt callstack 0
  3884  001AB4                     ___flge:
  3885                           	opt callstack 27
  3886  001AB4  0E00               	movlw	0
  3887  001AB6  1419               	andwf	___flge@ff1^0,w,c
  3888  001AB8  6E21               	movwf	??___flge^0,c
  3889  001ABA  0E00               	movlw	0
  3890  001ABC  141A               	andwf	(___flge@ff1+1)^0,w,c
  3891  001ABE  6E22               	movwf	(??___flge+1)^0,c
  3892  001AC0  0E80               	movlw	128
  3893  001AC2  141B               	andwf	(___flge@ff1+2)^0,w,c
  3894  001AC4  6E23               	movwf	(??___flge+2)^0,c
  3895  001AC6  0E7F               	movlw	127
  3896  001AC8  141C               	andwf	(___flge@ff1+3)^0,w,c
  3897  001ACA  6E24               	movwf	(??___flge+3)^0,c
  3898  001ACC  5021               	movf	??___flge^0,w,c
  3899  001ACE  1022               	iorwf	(??___flge+1)^0,w,c
  3900  001AD0  1023               	iorwf	(??___flge+2)^0,w,c
  3901  001AD2  1024               	iorwf	(??___flge+3)^0,w,c
  3902  001AD4  A4D8               	btfss	status,2,c
  3903  001AD6  EF6F  F00D         	goto	u2451
  3904  001ADA  EF71  F00D         	goto	u2450
  3905  001ADE                     u2451:
  3906  001ADE  EF79  F00D         	goto	l2703
  3907  001AE2                     u2450:
  3908  001AE2  0E00               	movlw	0
  3909  001AE4  6E19               	movwf	___flge@ff1^0,c
  3910  001AE6  0E00               	movlw	0
  3911  001AE8  6E1A               	movwf	(___flge@ff1+1)^0,c
  3912  001AEA  0E00               	movlw	0
  3913  001AEC  6E1B               	movwf	(___flge@ff1+2)^0,c
  3914  001AEE  0E00               	movlw	0
  3915  001AF0  6E1C               	movwf	(___flge@ff1+3)^0,c
  3916  001AF2                     l2703:
  3917  001AF2  0E00               	movlw	0
  3918  001AF4  141D               	andwf	___flge@ff2^0,w,c
  3919  001AF6  6E21               	movwf	??___flge^0,c
  3920  001AF8  0E00               	movlw	0
  3921  001AFA  141E               	andwf	(___flge@ff2+1)^0,w,c
  3922  001AFC  6E22               	movwf	(??___flge+1)^0,c
  3923  001AFE  0E80               	movlw	128
  3924  001B00  141F               	andwf	(___flge@ff2+2)^0,w,c
  3925  001B02  6E23               	movwf	(??___flge+2)^0,c
  3926  001B04  0E7F               	movlw	127
  3927  001B06  1420               	andwf	(___flge@ff2+3)^0,w,c
  3928  001B08  6E24               	movwf	(??___flge+3)^0,c
  3929  001B0A  5021               	movf	??___flge^0,w,c
  3930  001B0C  1022               	iorwf	(??___flge+1)^0,w,c
  3931  001B0E  1023               	iorwf	(??___flge+2)^0,w,c
  3932  001B10  1024               	iorwf	(??___flge+3)^0,w,c
  3933  001B12  A4D8               	btfss	status,2,c
  3934  001B14  EF8E  F00D         	goto	u2461
  3935  001B18  EF90  F00D         	goto	u2460
  3936  001B1C                     u2461:
  3937  001B1C  EF98  F00D         	goto	l2707
  3938  001B20                     u2460:
  3939  001B20  0E00               	movlw	0
  3940  001B22  6E1D               	movwf	___flge@ff2^0,c
  3941  001B24  0E00               	movlw	0
  3942  001B26  6E1E               	movwf	(___flge@ff2+1)^0,c
  3943  001B28  0E00               	movlw	0
  3944  001B2A  6E1F               	movwf	(___flge@ff2+2)^0,c
  3945  001B2C  0E00               	movlw	0
  3946  001B2E  6E20               	movwf	(___flge@ff2+3)^0,c
  3947  001B30                     l2707:
  3948  001B30  AE1C               	btfss	(___flge@ff1+3)^0,7,c
  3949  001B32  EF9D  F00D         	goto	u2471
  3950  001B36  EF9F  F00D         	goto	u2470
  3951  001B3A                     u2471:
  3952  001B3A  EFA8  F00D         	goto	l2711
  3953  001B3E                     u2470:
  3954  001B3E  6C19               	negf	___flge@ff1^0,c
  3955  001B40  1E1A               	comf	(___flge@ff1+1)^0,f,c
  3956  001B42  B0D8               	btfsc	status,0,c
  3957  001B44  2A1A               	incf	(___flge@ff1+1)^0,f,c
  3958  001B46  1E1B               	comf	(___flge@ff1+2)^0,f,c
  3959  001B48  B0D8               	btfsc	status,0,c
  3960  001B4A  2A1B               	incf	(___flge@ff1+2)^0,f,c
  3961  001B4C  0E80               	movlw	128
  3962  001B4E  561C               	subfwb	(___flge@ff1+3)^0,f,c
  3963  001B50                     l2711:
  3964  001B50  AE20               	btfss	(___flge@ff2+3)^0,7,c
  3965  001B52  EFAD  F00D         	goto	u2481
  3966  001B56  EFAF  F00D         	goto	u2480
  3967  001B5A                     u2481:
  3968  001B5A  EFB8  F00D         	goto	l629
  3969  001B5E                     u2480:
  3970  001B5E  6C1D               	negf	___flge@ff2^0,c
  3971  001B60  1E1E               	comf	(___flge@ff2+1)^0,f,c
  3972  001B62  B0D8               	btfsc	status,0,c
  3973  001B64  2A1E               	incf	(___flge@ff2+1)^0,f,c
  3974  001B66  1E1F               	comf	(___flge@ff2+2)^0,f,c
  3975  001B68  B0D8               	btfsc	status,0,c
  3976  001B6A  2A1F               	incf	(___flge@ff2+2)^0,f,c
  3977  001B6C  0E80               	movlw	128
  3978  001B6E  5620               	subfwb	(___flge@ff2+3)^0,f,c
  3979  001B70                     l629:
  3980  001B70  0E00               	movlw	0
  3981  001B72  1A19               	xorwf	___flge@ff1^0,f,c
  3982  001B74  0E00               	movlw	0
  3983  001B76  1A1A               	xorwf	(___flge@ff1+1)^0,f,c
  3984  001B78  0E00               	movlw	0
  3985  001B7A  1A1B               	xorwf	(___flge@ff1+2)^0,f,c
  3986  001B7C  0E80               	movlw	128
  3987  001B7E  1A1C               	xorwf	(___flge@ff1+3)^0,f,c
  3988  001B80  0E00               	movlw	0
  3989  001B82  1A1D               	xorwf	___flge@ff2^0,f,c
  3990  001B84  0E00               	movlw	0
  3991  001B86  1A1E               	xorwf	(___flge@ff2+1)^0,f,c
  3992  001B88  0E00               	movlw	0
  3993  001B8A  1A1F               	xorwf	(___flge@ff2+2)^0,f,c
  3994  001B8C  0E80               	movlw	128
  3995  001B8E  1A20               	xorwf	(___flge@ff2+3)^0,f,c
  3996  001B90  501D               	movf	___flge@ff2^0,w,c
  3997  001B92  5C19               	subwf	___flge@ff1^0,w,c
  3998  001B94  501E               	movf	(___flge@ff2+1)^0,w,c
  3999  001B96  581A               	subwfb	(___flge@ff1+1)^0,w,c
  4000  001B98  501F               	movf	(___flge@ff2+2)^0,w,c
  4001  001B9A  581B               	subwfb	(___flge@ff1+2)^0,w,c
  4002  001B9C  5020               	movf	(___flge@ff2+3)^0,w,c
  4003  001B9E  581C               	subwfb	(___flge@ff1+3)^0,w,c
  4004  001BA0  B0D8               	btfsc	status,0,c
  4005  001BA2  EFD5  F00D         	goto	u2491
  4006  001BA6  EFD7  F00D         	goto	u2490
  4007  001BAA                     u2491:
  4008  001BAA  EFDA  F00D         	goto	l2717
  4009  001BAE                     u2490:
  4010  001BAE  90D8               	bcf	status,0,c
  4011  001BB0  EFDB  F00D         	goto	l634
  4012  001BB4                     l2717:
  4013  001BB4  80D8               	bsf	status,0,c
  4014  001BB6                     l634:
  4015  001BB6  0012               	return		;funcret
  4016  001BB8                     __end_of___flge:
  4017                           	opt callstack 0
  4018                           
  4019 ;; *************** function ___almod *****************
  4020 ;; Defined at:
  4021 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\almod.c"
  4022 ;; Parameters:    Size  Location     Type
  4023 ;;  dividend        4    0[COMRAM] long 
  4024 ;;  divisor         4    4[COMRAM] long 
  4025 ;; Auto vars:     Size  Location     Type
  4026 ;;  sign            1    9[COMRAM] unsigned char 
  4027 ;;  counter         1    8[COMRAM] unsigned char 
  4028 ;; Return value:  Size  Location     Type
  4029 ;;                  4    0[COMRAM] long 
  4030 ;; Registers used:
  4031 ;;		wreg, status,2, status,0
  4032 ;; Tracked objects:
  4033 ;;		On entry : 0/0
  4034 ;;		On exit  : 0/0
  4035 ;;		Unchanged: 0/0
  4036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4037 ;;      Params:         8       0       0       0       0       0       0       0       0
  4038 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4039 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4040 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4041 ;;Total ram usage:       10 bytes
  4042 ;; Hardware stack levels used:    1
  4043 ;; This function calls:
  4044 ;;		Nothing
  4045 ;; This function is called by:
  4046 ;;		_OledApi_printNum
  4047 ;; This function uses a non-reentrant model
  4048 ;;
  4049                           
  4050                           	psect	text18
  4051  001BB8                     __ptext18:
  4052                           	opt callstack 0
  4053  001BB8                     ___almod:
  4054                           	opt callstack 27
  4055  001BB8  0E00               	movlw	0
  4056  001BBA  6E0A               	movwf	___almod@sign^0,c
  4057  001BBC  BE04               	btfsc	(___almod@dividend+3)^0,7,c
  4058  001BBE  EFE5  F00D         	goto	u2200
  4059  001BC2  EFE3  F00D         	goto	u2201
  4060  001BC6                     u2201:
  4061  001BC6  EFEF  F00D         	goto	l2535
  4062  001BCA                     u2200:
  4063  001BCA  1E04               	comf	(___almod@dividend+3)^0,f,c
  4064  001BCC  1E03               	comf	(___almod@dividend+2)^0,f,c
  4065  001BCE  1E02               	comf	(___almod@dividend+1)^0,f,c
  4066  001BD0  6C01               	negf	___almod@dividend^0,c
  4067  001BD2  0E00               	movlw	0
  4068  001BD4  2202               	addwfc	(___almod@dividend+1)^0,f,c
  4069  001BD6  2203               	addwfc	(___almod@dividend+2)^0,f,c
  4070  001BD8  2204               	addwfc	(___almod@dividend+3)^0,f,c
  4071  001BDA  0E01               	movlw	1
  4072  001BDC  6E0A               	movwf	___almod@sign^0,c
  4073  001BDE                     l2535:
  4074  001BDE  BE08               	btfsc	(___almod@divisor+3)^0,7,c
  4075  001BE0  EFF6  F00D         	goto	u2210
  4076  001BE4  EFF4  F00D         	goto	u2211
  4077  001BE8                     u2211:
  4078  001BE8  EFFE  F00D         	goto	l2539
  4079  001BEC                     u2210:
  4080  001BEC  1E08               	comf	(___almod@divisor+3)^0,f,c
  4081  001BEE  1E07               	comf	(___almod@divisor+2)^0,f,c
  4082  001BF0  1E06               	comf	(___almod@divisor+1)^0,f,c
  4083  001BF2  6C05               	negf	___almod@divisor^0,c
  4084  001BF4  0E00               	movlw	0
  4085  001BF6  2206               	addwfc	(___almod@divisor+1)^0,f,c
  4086  001BF8  2207               	addwfc	(___almod@divisor+2)^0,f,c
  4087  001BFA  2208               	addwfc	(___almod@divisor+3)^0,f,c
  4088  001BFC                     l2539:
  4089  001BFC  5005               	movf	___almod@divisor^0,w,c
  4090  001BFE  1006               	iorwf	(___almod@divisor+1)^0,w,c
  4091  001C00  1007               	iorwf	(___almod@divisor+2)^0,w,c
  4092  001C02  1008               	iorwf	(___almod@divisor+3)^0,w,c
  4093  001C04  B4D8               	btfsc	status,2,c
  4094  001C06  EF07  F00E         	goto	u2221
  4095  001C0A  EF09  F00E         	goto	u2220
  4096  001C0E                     u2221:
  4097  001C0E  EF39  F00E         	goto	l2555
  4098  001C12                     u2220:
  4099  001C12  0E01               	movlw	1
  4100  001C14  6E09               	movwf	___almod@counter^0,c
  4101  001C16  EF13  F00E         	goto	l2545
  4102  001C1A                     l2543:
  4103  001C1A  90D8               	bcf	status,0,c
  4104  001C1C  3605               	rlcf	___almod@divisor^0,f,c
  4105  001C1E  3606               	rlcf	(___almod@divisor+1)^0,f,c
  4106  001C20  3607               	rlcf	(___almod@divisor+2)^0,f,c
  4107  001C22  3608               	rlcf	(___almod@divisor+3)^0,f,c
  4108  001C24  2A09               	incf	___almod@counter^0,f,c
  4109  001C26                     l2545:
  4110  001C26  AE08               	btfss	(___almod@divisor+3)^0,7,c
  4111  001C28  EF18  F00E         	goto	u2231
  4112  001C2C  EF1A  F00E         	goto	u2230
  4113  001C30                     u2231:
  4114  001C30  EF0D  F00E         	goto	l2543
  4115  001C34                     u2230:
  4116  001C34                     l2547:
  4117  001C34  5005               	movf	___almod@divisor^0,w,c
  4118  001C36  5C01               	subwf	___almod@dividend^0,w,c
  4119  001C38  5006               	movf	(___almod@divisor+1)^0,w,c
  4120  001C3A  5802               	subwfb	(___almod@dividend+1)^0,w,c
  4121  001C3C  5007               	movf	(___almod@divisor+2)^0,w,c
  4122  001C3E  5803               	subwfb	(___almod@dividend+2)^0,w,c
  4123  001C40  5008               	movf	(___almod@divisor+3)^0,w,c
  4124  001C42  5804               	subwfb	(___almod@dividend+3)^0,w,c
  4125  001C44  A0D8               	btfss	status,0,c
  4126  001C46  EF27  F00E         	goto	u2241
  4127  001C4A  EF29  F00E         	goto	u2240
  4128  001C4E                     u2241:
  4129  001C4E  EF31  F00E         	goto	l2551
  4130  001C52                     u2240:
  4131  001C52  5005               	movf	___almod@divisor^0,w,c
  4132  001C54  5E01               	subwf	___almod@dividend^0,f,c
  4133  001C56  5006               	movf	(___almod@divisor+1)^0,w,c
  4134  001C58  5A02               	subwfb	(___almod@dividend+1)^0,f,c
  4135  001C5A  5007               	movf	(___almod@divisor+2)^0,w,c
  4136  001C5C  5A03               	subwfb	(___almod@dividend+2)^0,f,c
  4137  001C5E  5008               	movf	(___almod@divisor+3)^0,w,c
  4138  001C60  5A04               	subwfb	(___almod@dividend+3)^0,f,c
  4139  001C62                     l2551:
  4140  001C62  90D8               	bcf	status,0,c
  4141  001C64  3208               	rrcf	(___almod@divisor+3)^0,f,c
  4142  001C66  3207               	rrcf	(___almod@divisor+2)^0,f,c
  4143  001C68  3206               	rrcf	(___almod@divisor+1)^0,f,c
  4144  001C6A  3205               	rrcf	___almod@divisor^0,f,c
  4145  001C6C  2E09               	decfsz	___almod@counter^0,f,c
  4146  001C6E  EF1A  F00E         	goto	l2547
  4147  001C72                     l2555:
  4148  001C72  500A               	movf	___almod@sign^0,w,c
  4149  001C74  B4D8               	btfsc	status,2,c
  4150  001C76  EF3F  F00E         	goto	u2251
  4151  001C7A  EF41  F00E         	goto	u2250
  4152  001C7E                     u2251:
  4153  001C7E  EF49  F00E         	goto	l2559
  4154  001C82                     u2250:
  4155  001C82  1E04               	comf	(___almod@dividend+3)^0,f,c
  4156  001C84  1E03               	comf	(___almod@dividend+2)^0,f,c
  4157  001C86  1E02               	comf	(___almod@dividend+1)^0,f,c
  4158  001C88  6C01               	negf	___almod@dividend^0,c
  4159  001C8A  0E00               	movlw	0
  4160  001C8C  2202               	addwfc	(___almod@dividend+1)^0,f,c
  4161  001C8E  2203               	addwfc	(___almod@dividend+2)^0,f,c
  4162  001C90  2204               	addwfc	(___almod@dividend+3)^0,f,c
  4163  001C92                     l2559:
  4164  001C92  C001  F001         	movff	___almod@dividend,?___almod
  4165  001C96  C002  F002         	movff	___almod@dividend+1,?___almod+1
  4166  001C9A  C003  F003         	movff	___almod@dividend+2,?___almod+2
  4167  001C9E  C004  F004         	movff	___almod@dividend+3,?___almod+3
  4168  001CA2  0012               	return		;funcret
  4169  001CA4                     __end_of___almod:
  4170                           	opt callstack 0
  4171                           
  4172 ;; *************** function ___aldiv *****************
  4173 ;; Defined at:
  4174 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
  4175 ;; Parameters:    Size  Location     Type
  4176 ;;  dividend        4    0[COMRAM] long 
  4177 ;;  divisor         4    4[COMRAM] long 
  4178 ;; Auto vars:     Size  Location     Type
  4179 ;;  quotient        4   10[COMRAM] long 
  4180 ;;  sign            1    9[COMRAM] unsigned char 
  4181 ;;  counter         1    8[COMRAM] unsigned char 
  4182 ;; Return value:  Size  Location     Type
  4183 ;;                  4    0[COMRAM] long 
  4184 ;; Registers used:
  4185 ;;		wreg, status,2, status,0
  4186 ;; Tracked objects:
  4187 ;;		On entry : 0/0
  4188 ;;		On exit  : 0/0
  4189 ;;		Unchanged: 0/0
  4190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4191 ;;      Params:         8       0       0       0       0       0       0       0       0
  4192 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4193 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4194 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4195 ;;Total ram usage:       14 bytes
  4196 ;; Hardware stack levels used:    1
  4197 ;; This function calls:
  4198 ;;		Nothing
  4199 ;; This function is called by:
  4200 ;;		_OledApi_printNum
  4201 ;; This function uses a non-reentrant model
  4202 ;;
  4203                           
  4204                           	psect	text19
  4205  0018A2                     __ptext19:
  4206                           	opt callstack 0
  4207  0018A2                     ___aldiv:
  4208                           	opt callstack 27
  4209  0018A2  0E00               	movlw	0
  4210  0018A4  6E0A               	movwf	___aldiv@sign^0,c
  4211  0018A6  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
  4212  0018A8  EF5A  F00C         	goto	u2140
  4213  0018AC  EF58  F00C         	goto	u2141
  4214  0018B0                     u2141:
  4215  0018B0  EF64  F00C         	goto	l2491
  4216  0018B4                     u2140:
  4217  0018B4  1E08               	comf	(___aldiv@divisor+3)^0,f,c
  4218  0018B6  1E07               	comf	(___aldiv@divisor+2)^0,f,c
  4219  0018B8  1E06               	comf	(___aldiv@divisor+1)^0,f,c
  4220  0018BA  6C05               	negf	___aldiv@divisor^0,c
  4221  0018BC  0E00               	movlw	0
  4222  0018BE  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
  4223  0018C0  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
  4224  0018C2  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
  4225  0018C4  0E01               	movlw	1
  4226  0018C6  6E0A               	movwf	___aldiv@sign^0,c
  4227  0018C8                     l2491:
  4228  0018C8  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
  4229  0018CA  EF6B  F00C         	goto	u2150
  4230  0018CE  EF69  F00C         	goto	u2151
  4231  0018D2                     u2151:
  4232  0018D2  EF75  F00C         	goto	l2497
  4233  0018D6                     u2150:
  4234  0018D6  1E04               	comf	(___aldiv@dividend+3)^0,f,c
  4235  0018D8  1E03               	comf	(___aldiv@dividend+2)^0,f,c
  4236  0018DA  1E02               	comf	(___aldiv@dividend+1)^0,f,c
  4237  0018DC  6C01               	negf	___aldiv@dividend^0,c
  4238  0018DE  0E00               	movlw	0
  4239  0018E0  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
  4240  0018E2  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
  4241  0018E4  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
  4242  0018E6  0E01               	movlw	1
  4243  0018E8  1A0A               	xorwf	___aldiv@sign^0,f,c
  4244  0018EA                     l2497:
  4245  0018EA  0E00               	movlw	0
  4246  0018EC  6E0B               	movwf	___aldiv@quotient^0,c
  4247  0018EE  0E00               	movlw	0
  4248  0018F0  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  4249  0018F2  0E00               	movlw	0
  4250  0018F4  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  4251  0018F6  0E00               	movlw	0
  4252  0018F8  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  4253  0018FA  5005               	movf	___aldiv@divisor^0,w,c
  4254  0018FC  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  4255  0018FE  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  4256  001900  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  4257  001902  B4D8               	btfsc	status,2,c
  4258  001904  EF86  F00C         	goto	u2161
  4259  001908  EF88  F00C         	goto	u2160
  4260  00190C                     u2161:
  4261  00190C  EFBE  F00C         	goto	l2519
  4262  001910                     u2160:
  4263  001910  0E01               	movlw	1
  4264  001912  6E09               	movwf	___aldiv@counter^0,c
  4265  001914  EF92  F00C         	goto	l2505
  4266  001918                     l2503:
  4267  001918  90D8               	bcf	status,0,c
  4268  00191A  3605               	rlcf	___aldiv@divisor^0,f,c
  4269  00191C  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
  4270  00191E  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
  4271  001920  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
  4272  001922  2A09               	incf	___aldiv@counter^0,f,c
  4273  001924                     l2505:
  4274  001924  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
  4275  001926  EF97  F00C         	goto	u2171
  4276  00192A  EF99  F00C         	goto	u2170
  4277  00192E                     u2171:
  4278  00192E  EF8C  F00C         	goto	l2503
  4279  001932                     u2170:
  4280  001932                     l2507:
  4281  001932  90D8               	bcf	status,0,c
  4282  001934  360B               	rlcf	___aldiv@quotient^0,f,c
  4283  001936  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
  4284  001938  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
  4285  00193A  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
  4286  00193C  5005               	movf	___aldiv@divisor^0,w,c
  4287  00193E  5C01               	subwf	___aldiv@dividend^0,w,c
  4288  001940  5006               	movf	(___aldiv@divisor+1)^0,w,c
  4289  001942  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
  4290  001944  5007               	movf	(___aldiv@divisor+2)^0,w,c
  4291  001946  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
  4292  001948  5008               	movf	(___aldiv@divisor+3)^0,w,c
  4293  00194A  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
  4294  00194C  A0D8               	btfss	status,0,c
  4295  00194E  EFAB  F00C         	goto	u2181
  4296  001952  EFAD  F00C         	goto	u2180
  4297  001956                     u2181:
  4298  001956  EFB6  F00C         	goto	l2515
  4299  00195A                     u2180:
  4300  00195A  5005               	movf	___aldiv@divisor^0,w,c
  4301  00195C  5E01               	subwf	___aldiv@dividend^0,f,c
  4302  00195E  5006               	movf	(___aldiv@divisor+1)^0,w,c
  4303  001960  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
  4304  001962  5007               	movf	(___aldiv@divisor+2)^0,w,c
  4305  001964  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
  4306  001966  5008               	movf	(___aldiv@divisor+3)^0,w,c
  4307  001968  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
  4308  00196A  800B               	bsf	___aldiv@quotient^0,0,c
  4309  00196C                     l2515:
  4310  00196C  90D8               	bcf	status,0,c
  4311  00196E  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
  4312  001970  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
  4313  001972  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
  4314  001974  3205               	rrcf	___aldiv@divisor^0,f,c
  4315  001976  2E09               	decfsz	___aldiv@counter^0,f,c
  4316  001978  EF99  F00C         	goto	l2507
  4317  00197C                     l2519:
  4318  00197C  500A               	movf	___aldiv@sign^0,w,c
  4319  00197E  B4D8               	btfsc	status,2,c
  4320  001980  EFC4  F00C         	goto	u2191
  4321  001984  EFC6  F00C         	goto	u2190
  4322  001988                     u2191:
  4323  001988  EFCE  F00C         	goto	l2523
  4324  00198C                     u2190:
  4325  00198C  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
  4326  00198E  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
  4327  001990  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
  4328  001992  6C0B               	negf	___aldiv@quotient^0,c
  4329  001994  0E00               	movlw	0
  4330  001996  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
  4331  001998  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
  4332  00199A  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
  4333  00199C                     l2523:
  4334  00199C  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  4335  0019A0  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  4336  0019A4  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  4337  0019A8  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  4338  0019AC  0012               	return		;funcret
  4339  0019AE                     __end_of___aldiv:
  4340                           	opt callstack 0
  4341                           
  4342 ;; *************** function _OledApi_init *****************
  4343 ;; Defined at:
  4344 ;;		line 14 in file "OledApi.c"
  4345 ;; Parameters:    Size  Location     Type
  4346 ;;  _enable         1    wreg     unsigned char 
  4347 ;; Auto vars:     Size  Location     Type
  4348 ;;  _enable         1   36[COMRAM] unsigned char 
  4349 ;; Return value:  Size  Location     Type
  4350 ;;                  1    wreg      void 
  4351 ;; Registers used:
  4352 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4353 ;; Tracked objects:
  4354 ;;		On entry : 0/0
  4355 ;;		On exit  : 0/0
  4356 ;;		Unchanged: 0/0
  4357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4358 ;;      Params:         0       0       0       0       0       0       0       0       0
  4359 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4360 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4361 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4362 ;;Total ram usage:        1 bytes
  4363 ;; Hardware stack levels used:    1
  4364 ;; Hardware stack levels required when called:    8
  4365 ;; This function calls:
  4366 ;;		_SPI_Api_initialize
  4367 ;;		_begin
  4368 ;; This function is called by:
  4369 ;;		_setup
  4370 ;; This function uses a non-reentrant model
  4371 ;;
  4372                           
  4373                           	psect	text20
  4374  002316                     __ptext20:
  4375                           	opt callstack 0
  4376  002316                     _OledApi_init:
  4377                           	opt callstack 21
  4378                           
  4379                           ;incstack = 0
  4380                           ;OledApi_init@_enable stored from wreg
  4381  002316  6E25               	movwf	OledApi_init@_enable^0,c
  4382  002318                     
  4383                           ;OledApi.c: 14: void OledApi_init(uint8_t _enable);OledApi.c: 15: {;OledApi.c: 19:   _di
      +                          splayfunction = 0x00;
  4384  002318  0E00               	movlw	0
  4385  00231A  0100               	movlb	0	; () banked
  4386  00231C  6F78               	movwf	OledApi@_displayfunction& (0+255),b
  4387  00231E                     
  4388                           ; BSR set to: 0
  4389                           ;OledApi.c: 24:         __SPIconfig.u8EnablePin = _enable;
  4390  00231E  C025  F080         	movff	OledApi_init@_enable,___SPIconfig
  4391  002322                     
  4392                           ; BSR set to: 0
  4393                           ;OledApi.c: 25:         __SPIconfig.u8SPIBits = 10;
  4394  002322  0E0A               	movlw	10
  4395  002324  6F82               	movwf	(___SPIconfig+2)& (0+255),b
  4396  002326                     
  4397                           ; BSR set to: 0
  4398                           ;OledApi.c: 31:     SPI_Api_initialize();
  4399  002326  ECD4  F011         	call	_SPI_Api_initialize	;wreg free
  4400  00232A                     
  4401                           ;OledApi.c: 32:     TRISC &= ~_enable;
  4402  00232A  5025               	movf	OledApi_init@_enable^0,w,c	;volatile
  4403  00232C  0AFF               	xorlw	255
  4404  00232E  1694               	andwf	148,f,c	;volatile
  4405  002330                     
  4406                           ;OledApi.c: 33:  LATC |= _enable;
  4407  002330  5025               	movf	OledApi_init@_enable^0,w,c	;volatile
  4408  002332  128B               	iorwf	139,f,c	;volatile
  4409  002334                     
  4410                           ;OledApi.c: 35:     begin(16,2);
  4411  002334  0E02               	movlw	2
  4412  002336  6E23               	movwf	begin@rows^0,c
  4413  002338  0E10               	movlw	16
  4414  00233A  EC94  F010         	call	_begin
  4415  00233E  0012               	return		;funcret
  4416  002340                     __end_of_OledApi_init:
  4417                           	opt callstack 0
  4418                           
  4419 ;; *************** function _begin *****************
  4420 ;; Defined at:
  4421 ;;		line 40 in file "OledApi.c"
  4422 ;; Parameters:    Size  Location     Type
  4423 ;;  cols            1    wreg     unsigned char 
  4424 ;;  rows            1   34[COMRAM] unsigned char 
  4425 ;; Auto vars:     Size  Location     Type
  4426 ;;  cols            1    0[COMRAM] unsigned char 
  4427 ;; Return value:  Size  Location     Type
  4428 ;;                  1    wreg      void 
  4429 ;; Registers used:
  4430 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4431 ;; Tracked objects:
  4432 ;;		On entry : 0/0
  4433 ;;		On exit  : 0/0
  4434 ;;		Unchanged: 0/0
  4435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4436 ;;      Params:         1       0       0       0       0       0       0       0       0
  4437 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4438 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4439 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4440 ;;Total ram usage:        2 bytes
  4441 ;; Hardware stack levels used:    1
  4442 ;; Hardware stack levels required when called:    7
  4443 ;; This function calls:
  4444 ;;		_OledApi_clear
  4445 ;;		_OledApi_home
  4446 ;;		_command
  4447 ;; This function is called by:
  4448 ;;		_OledApi_init
  4449 ;; This function uses a non-reentrant model
  4450 ;;
  4451                           
  4452                           	psect	text21
  4453  002128                     __ptext21:
  4454                           	opt callstack 0
  4455  002128                     _begin:
  4456                           	opt callstack 21
  4457  002128                     
  4458                           ;OledApi.c: 40: static void begin(uint8_t cols, uint8_t rows);OledApi.c: 41: {;OledApi.c
      +                          : 44:     _delaywdt((unsigned long)((1)*(8000000/4000.0)));
  4459  002128  0E02               	movlw	2
  4460  00212A  6E24               	movwf	??_begin^0,c
  4461  00212C  0EF2               	movlw	242
  4462  00212E                     u3077:
  4463  00212E  0004               	clrwdt	
  4464  002130  2EE8               	decfsz	wreg,f,c
  4465  002132  D7FD               	bra	u3077
  4466  002134  2E24               	decfsz	??_begin^0,f,c
  4467  002136  D7FB               	bra	u3077
  4468  002138  0004               	clrwdt	
  4469  00213A  F000               	nop	
  4470  00213C                     
  4471                           ;OledApi.c: 47:  command(0x28 | _displayfunction | 0x00);
  4472  00213C  0100               	movlb	0	; () banked
  4473  00213E  5178               	movf	OledApi@_displayfunction& (0+255),w,b
  4474  002140  0928               	iorlw	40
  4475  002142  ECF0  F011         	call	_command
  4476  002146                     
  4477                           ;OledApi.c: 50:  command(0x08 | 0x00);
  4478  002146  0E08               	movlw	8
  4479  002148  ECF0  F011         	call	_command
  4480  00214C                     
  4481                           ;OledApi.c: 53:  OledApi_clear();
  4482  00214C  ECC4  F011         	call	_OledApi_clear	;wreg free
  4483  002150                     
  4484                           ;OledApi.c: 56:  _displaymode = 0x02 | 0x00;
  4485  002150  0E02               	movlw	2
  4486  002152  0100               	movlb	0	; () banked
  4487  002154  6F76               	movwf	OledApi@_displaymode& (0+255),b
  4488  002156                     
  4489                           ; BSR set to: 0
  4490                           ;OledApi.c: 57:  command(0x04 | _displaymode);
  4491  002156  5176               	movf	OledApi@_displaymode& (0+255),w,b
  4492  002158  0904               	iorlw	4
  4493  00215A  ECF0  F011         	call	_command
  4494  00215E                     
  4495                           ;OledApi.c: 60:  OledApi_home();
  4496  00215E  EC1A  F012         	call	_OledApi_home	;wreg free
  4497  002162                     
  4498                           ;OledApi.c: 63:  _displaycontrol = 0x04 | 0x00;
  4499  002162  0E04               	movlw	4
  4500  002164  0100               	movlb	0	; () banked
  4501  002166  6F77               	movwf	OledApi@_displaycontrol& (0+255),b
  4502  002168                     
  4503                           ; BSR set to: 0
  4504                           ;OledApi.c: 64:  command(0x08 | _displaycontrol);
  4505  002168  5177               	movf	OledApi@_displaycontrol& (0+255),w,b
  4506  00216A  0908               	iorlw	8
  4507  00216C  ECF0  F011         	call	_command
  4508  002170  0012               	return		;funcret
  4509  002172                     __end_of_begin:
  4510                           	opt callstack 0
  4511                           
  4512 ;; *************** function _OledApi_clear *****************
  4513 ;; Defined at:
  4514 ;;		line 71 in file "OledApi.c"
  4515 ;; Parameters:    Size  Location     Type
  4516 ;;		None
  4517 ;; Auto vars:     Size  Location     Type
  4518 ;;		None
  4519 ;; Return value:  Size  Location     Type
  4520 ;;                  1    wreg      void 
  4521 ;; Registers used:
  4522 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4523 ;; Tracked objects:
  4524 ;;		On entry : 0/0
  4525 ;;		On exit  : 0/0
  4526 ;;		Unchanged: 0/0
  4527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4528 ;;      Params:         0       0       0       0       0       0       0       0       0
  4529 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4530 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4531 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4532 ;;Total ram usage:        1 bytes
  4533 ;; Hardware stack levels used:    1
  4534 ;; Hardware stack levels required when called:    6
  4535 ;; This function calls:
  4536 ;;		_OledApi_home
  4537 ;;		_command
  4538 ;; This function is called by:
  4539 ;;		_main
  4540 ;;		_begin
  4541 ;; This function uses a non-reentrant model
  4542 ;;
  4543                           
  4544                           	psect	text22
  4545  002388                     __ptext22:
  4546                           	opt callstack 0
  4547  002388                     _OledApi_clear:
  4548                           	opt callstack 21
  4549  002388                     
  4550                           ;OledApi.c: 73:  command(0x01);
  4551  002388  0E01               	movlw	1
  4552  00238A  ECF0  F011         	call	_command
  4553  00238E                     
  4554                           ;OledApi.c: 74:  _delaywdt((unsigned long)((1)*(8000000/4000.0)));
  4555  00238E  0E02               	movlw	2
  4556  002390  6E22               	movwf	??_OledApi_clear^0,c
  4557  002392  0EF2               	movlw	242
  4558  002394                     u3087:
  4559  002394  0004               	clrwdt	
  4560  002396  2EE8               	decfsz	wreg,f,c
  4561  002398  D7FD               	bra	u3087
  4562  00239A  2E22               	decfsz	??_OledApi_clear^0,f,c
  4563  00239C  D7FB               	bra	u3087
  4564  00239E  0004               	clrwdt	
  4565  0023A0  F000               	nop	
  4566  0023A2                     
  4567                           ;OledApi.c: 75:  OledApi_home();
  4568  0023A2  EC1A  F012         	call	_OledApi_home	;wreg free
  4569  0023A6  0012               	return		;funcret
  4570  0023A8                     __end_of_OledApi_clear:
  4571                           	opt callstack 0
  4572                           
  4573 ;; *************** function _OledApi_home *****************
  4574 ;; Defined at:
  4575 ;;		line 78 in file "OledApi.c"
  4576 ;; Parameters:    Size  Location     Type
  4577 ;;		None
  4578 ;; Auto vars:     Size  Location     Type
  4579 ;;		None
  4580 ;; Return value:  Size  Location     Type
  4581 ;;                  1    wreg      void 
  4582 ;; Registers used:
  4583 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4584 ;; Tracked objects:
  4585 ;;		On entry : 0/0
  4586 ;;		On exit  : 0/0
  4587 ;;		Unchanged: 0/0
  4588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4589 ;;      Params:         0       0       0       0       0       0       0       0       0
  4590 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4591 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4592 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4593 ;;Total ram usage:        0 bytes
  4594 ;; Hardware stack levels used:    1
  4595 ;; Hardware stack levels required when called:    5
  4596 ;; This function calls:
  4597 ;;		_command
  4598 ;; This function is called by:
  4599 ;;		_begin
  4600 ;;		_OledApi_clear
  4601 ;; This function uses a non-reentrant model
  4602 ;;
  4603                           
  4604                           	psect	text23
  4605  002434                     __ptext23:
  4606                           	opt callstack 0
  4607  002434                     _OledApi_home:
  4608                           	opt callstack 22
  4609  002434                     
  4610                           ;OledApi.c: 80:  command(0x02);
  4611  002434  0E02               	movlw	2
  4612  002436  ECF0  F011         	call	_command
  4613  00243A  0012               	return		;funcret
  4614  00243C                     __end_of_OledApi_home:
  4615                           	opt callstack 0
  4616                           
  4617 ;; *************** function _SPI_Api_initialize *****************
  4618 ;; Defined at:
  4619 ;;		line 15 in file "SPI_Api.c"
  4620 ;; Parameters:    Size  Location     Type
  4621 ;;		None
  4622 ;; Auto vars:     Size  Location     Type
  4623 ;;		None
  4624 ;; Return value:  Size  Location     Type
  4625 ;;                  1    wreg      void 
  4626 ;; Registers used:
  4627 ;;		status,2, status,0
  4628 ;; Tracked objects:
  4629 ;;		On entry : 0/0
  4630 ;;		On exit  : 0/0
  4631 ;;		Unchanged: 0/0
  4632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4633 ;;      Params:         0       0       0       0       0       0       0       0       0
  4634 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4635 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4636 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4637 ;;Total ram usage:        0 bytes
  4638 ;; Hardware stack levels used:    1
  4639 ;; This function calls:
  4640 ;;		Nothing
  4641 ;; This function is called by:
  4642 ;;		_OledApi_init
  4643 ;;		_ADC_Api_init
  4644 ;; This function uses a non-reentrant model
  4645 ;;
  4646                           
  4647                           	psect	text24
  4648  0023A8                     __ptext24:
  4649                           	opt callstack 0
  4650  0023A8                     _SPI_Api_initialize:
  4651                           	opt callstack 28
  4652  0023A8                     
  4653                           ;SPI_Api.c: 18:     if(!(_Bool)(G_SPI_Api_u8Flags & 0x01))
  4654  0023A8  0100               	movlb	0	; () banked
  4655  0023AA  B183               	btfsc	_G_SPI_Api_u8Flags& (0+255),0,b
  4656  0023AC  EFDA  F011         	goto	u2671
  4657  0023B0  EFDC  F011         	goto	u2670
  4658  0023B4                     u2671:
  4659  0023B4  EFDE  F011         	goto	l2815
  4660  0023B8                     u2670:
  4661  0023B8  EFE2  F011         	goto	l321
  4662  0023BC                     l2815:
  4663                           
  4664                           ; BSR set to: 0
  4665                           ;SPI_Api.c: 24:     TRISC &= ~0x01;
  4666  0023BC  9094               	bcf	148,0,c	;volatile
  4667                           
  4668                           ;SPI_Api.c: 25:     TRISC |= 0x02;
  4669  0023BE  8294               	bsf	148,1,c	;volatile
  4670                           
  4671                           ;SPI_Api.c: 26:     TRISC &= ~0x04;
  4672  0023C0  9494               	bcf	148,2,c	;volatile
  4673                           
  4674                           ;SPI_Api.c: 29:     G_SPI_Api_u8Flags &= ~0x01;
  4675  0023C2  9183               	bcf	_G_SPI_Api_u8Flags& (0+255),0,b
  4676  0023C4                     l321:
  4677                           
  4678                           ; BSR set to: 0
  4679  0023C4  0012               	return		;funcret
  4680  0023C6                     __end_of_SPI_Api_initialize:
  4681                           	opt callstack 0
  4682                           
  4683 ;; *************** function _OledApi_createChar *****************
  4684 ;; Defined at:
  4685 ;;		line 163 in file "OledApi.c"
  4686 ;; Parameters:    Size  Location     Type
  4687 ;;  location        1    wreg     unsigned char 
  4688 ;;  charmap         2   33[COMRAM] PTR unsigned char 
  4689 ;;		 -> ac(8), dc(8), 
  4690 ;; Auto vars:     Size  Location     Type
  4691 ;;  location        1   35[COMRAM] unsigned char 
  4692 ;;  i               2   36[COMRAM] int 
  4693 ;; Return value:  Size  Location     Type
  4694 ;;                  1    wreg      void 
  4695 ;; Registers used:
  4696 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4697 ;; Tracked objects:
  4698 ;;		On entry : 0/0
  4699 ;;		On exit  : 0/0
  4700 ;;		Unchanged: 0/0
  4701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4702 ;;      Params:         2       0       0       0       0       0       0       0       0
  4703 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4704 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4705 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4706 ;;Total ram usage:        5 bytes
  4707 ;; Hardware stack levels used:    1
  4708 ;; Hardware stack levels required when called:    5
  4709 ;; This function calls:
  4710 ;;		_command
  4711 ;;		_write
  4712 ;; This function is called by:
  4713 ;;		_setup
  4714 ;; This function uses a non-reentrant model
  4715 ;;
  4716                           
  4717                           	psect	text25
  4718  0020DA                     __ptext25:
  4719                           	opt callstack 0
  4720  0020DA                     _OledApi_createChar:
  4721                           	opt callstack 24
  4722                           
  4723                           ; BSR set to: 0
  4724                           ;incstack = 0
  4725                           ;OledApi_createChar@location stored from wreg
  4726  0020DA  6E24               	movwf	OledApi_createChar@location^0,c
  4727  0020DC                     
  4728                           ;OledApi.c: 164:  location &= 0x7;
  4729  0020DC  0E07               	movlw	7
  4730  0020DE  1624               	andwf	OledApi_createChar@location^0,f,c
  4731  0020E0                     
  4732                           ;OledApi.c: 165:  command(0x40 | (location << 3));
  4733  0020E0  3824               	swapf	OledApi_createChar@location^0,w,c
  4734  0020E2  42E8               	rrncf	wreg,f,c
  4735  0020E4  0BF8               	andlw	248
  4736  0020E6  0940               	iorlw	64
  4737  0020E8  ECF0  F011         	call	_command
  4738  0020EC                     
  4739                           ;OledApi.c: 166:  for (int i=0; i<8; i++) {
  4740  0020EC  0E00               	movlw	0
  4741  0020EE  6E26               	movwf	(OledApi_createChar@i+1)^0,c
  4742  0020F0  0E00               	movlw	0
  4743  0020F2  6E25               	movwf	OledApi_createChar@i^0,c
  4744  0020F4                     l3009:
  4745                           
  4746                           ;OledApi.c: 167:   write(charmap[i]);
  4747  0020F4  5025               	movf	OledApi_createChar@i^0,w,c
  4748  0020F6  2422               	addwf	OledApi_createChar@charmap^0,w,c
  4749  0020F8  6ED9               	movwf	fsr2l,c
  4750  0020FA  5026               	movf	(OledApi_createChar@i+1)^0,w,c
  4751  0020FC  2023               	addwfc	(OledApi_createChar@charmap+1)^0,w,c
  4752  0020FE  6EDA               	movwf	fsr2h,c
  4753  002100  50DF               	movf	indf2,w,c
  4754  002102  ECE3  F011         	call	_write
  4755  002106                     
  4756                           ;OledApi.c: 168:  }
  4757  002106  4A25               	infsnz	OledApi_createChar@i^0,f,c
  4758  002108  2A26               	incf	(OledApi_createChar@i+1)^0,f,c
  4759  00210A  BE26               	btfsc	(OledApi_createChar@i+1)^0,7,c
  4760  00210C  EF91  F010         	goto	u2911
  4761  002110  5026               	movf	(OledApi_createChar@i+1)^0,w,c
  4762  002112  E109               	bnz	u2910
  4763  002114  0E08               	movlw	8
  4764  002116  5C25               	subwf	OledApi_createChar@i^0,w,c
  4765  002118  A0D8               	btfss	status,0,c
  4766  00211A  EF91  F010         	goto	u2911
  4767  00211E  EF93  F010         	goto	u2910
  4768  002122                     u2911:
  4769  002122  EF7A  F010         	goto	l3009
  4770  002126                     u2910:
  4771  002126  0012               	return		;funcret
  4772  002128                     __end_of_OledApi_createChar:
  4773                           	opt callstack 0
  4774                           
  4775 ;; *************** function _write *****************
  4776 ;; Defined at:
  4777 ;;		line 320 in file "OledApi.c"
  4778 ;; Parameters:    Size  Location     Type
  4779 ;;  value           1    wreg     unsigned char 
  4780 ;; Auto vars:     Size  Location     Type
  4781 ;;  value           1   32[COMRAM] unsigned char 
  4782 ;; Return value:  Size  Location     Type
  4783 ;;                  1    wreg      void 
  4784 ;; Registers used:
  4785 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4786 ;; Tracked objects:
  4787 ;;		On entry : 0/0
  4788 ;;		On exit  : 0/0
  4789 ;;		Unchanged: 0/0
  4790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4791 ;;      Params:         0       0       0       0       0       0       0       0       0
  4792 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4793 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4794 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4795 ;;Total ram usage:        1 bytes
  4796 ;; Hardware stack levels used:    1
  4797 ;; Hardware stack levels required when called:    4
  4798 ;; This function calls:
  4799 ;;		_send
  4800 ;; This function is called by:
  4801 ;;		_OledApi_createChar
  4802 ;;		_OledApi_printSpec
  4803 ;;		_OledApi_printf
  4804 ;; This function uses a non-reentrant model
  4805 ;;
  4806                           
  4807                           	psect	text26
  4808  0023C6                     __ptext26:
  4809                           	opt callstack 0
  4810  0023C6                     _write:
  4811                           	opt callstack 24
  4812                           
  4813                           ;incstack = 0
  4814                           ;write@value stored from wreg
  4815  0023C6  6E21               	movwf	write@value^0,c
  4816  0023C8                     
  4817                           ;OledApi.c: 320: static void write(uint8_t value);OledApi.c: 321: {;OledApi.c: 322:  sen
      +                          d(1, &value, 1);
  4818  0023C8  0E21               	movlw	low write@value
  4819  0023CA  6E12               	movwf	send@buf^0,c
  4820  0023CC  0E00               	movlw	high write@value
  4821  0023CE  6E13               	movwf	(send@buf+1)^0,c
  4822  0023D0  0E00               	movlw	0
  4823  0023D2  6E15               	movwf	(send@count+1)^0,c
  4824  0023D4  0E01               	movlw	1
  4825  0023D6  6E14               	movwf	send@count^0,c
  4826  0023D8  0E01               	movlw	1
  4827  0023DA  EC52  F00E         	call	_send
  4828  0023DE  0012               	return		;funcret
  4829  0023E0                     __end_of_write:
  4830                           	opt callstack 0
  4831                           
  4832 ;; *************** function _command *****************
  4833 ;; Defined at:
  4834 ;;		line 315 in file "OledApi.c"
  4835 ;; Parameters:    Size  Location     Type
  4836 ;;  value           1    wreg     unsigned char 
  4837 ;; Auto vars:     Size  Location     Type
  4838 ;;  value           1   32[COMRAM] unsigned char 
  4839 ;; Return value:  Size  Location     Type
  4840 ;;                  1    wreg      void 
  4841 ;; Registers used:
  4842 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4843 ;; Tracked objects:
  4844 ;;		On entry : 0/0
  4845 ;;		On exit  : 0/0
  4846 ;;		Unchanged: 0/0
  4847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4848 ;;      Params:         0       0       0       0       0       0       0       0       0
  4849 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4850 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4851 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4852 ;;Total ram usage:        1 bytes
  4853 ;; Hardware stack levels used:    1
  4854 ;; Hardware stack levels required when called:    4
  4855 ;; This function calls:
  4856 ;;		_send
  4857 ;; This function is called by:
  4858 ;;		_begin
  4859 ;;		_OledApi_clear
  4860 ;;		_OledApi_home
  4861 ;;		_OledApi_setCursor
  4862 ;;		_OledApi_createChar
  4863 ;;		_OledApi_noDisplay
  4864 ;;		_OledApi_display
  4865 ;;		_OledApi_noCursor
  4866 ;;		_OledApi_cursor
  4867 ;;		_OledApi_noBlink
  4868 ;;		_OledApi_blink
  4869 ;;		_OledApi_scrollDisplayLeft
  4870 ;;		_OledApi_scrollDisplayRight
  4871 ;;		_OledApi_leftToRight
  4872 ;;		_OledApi_rightToLeft
  4873 ;;		_OledApi_autoscroll
  4874 ;;		_OledApi_noAutoscroll
  4875 ;; This function uses a non-reentrant model
  4876 ;;
  4877                           
  4878                           	psect	text27
  4879  0023E0                     __ptext27:
  4880                           	opt callstack 0
  4881  0023E0                     _command:
  4882                           	opt callstack 23
  4883                           
  4884                           ;incstack = 0
  4885                           ;command@value stored from wreg
  4886  0023E0  6E21               	movwf	command@value^0,c
  4887  0023E2                     
  4888                           ;OledApi.c: 316:  send(0, &value, 1);
  4889  0023E2  0E21               	movlw	low command@value
  4890  0023E4  6E12               	movwf	send@buf^0,c
  4891  0023E6  0E00               	movlw	high command@value
  4892  0023E8  6E13               	movwf	(send@buf+1)^0,c
  4893  0023EA  0E00               	movlw	0
  4894  0023EC  6E15               	movwf	(send@count+1)^0,c
  4895  0023EE  0E01               	movlw	1
  4896  0023F0  6E14               	movwf	send@count^0,c
  4897  0023F2  0E00               	movlw	0
  4898  0023F4  EC52  F00E         	call	_send
  4899  0023F8  0012               	return		;funcret
  4900  0023FA                     __end_of_command:
  4901                           	opt callstack 0
  4902                           
  4903 ;; *************** function _send *****************
  4904 ;; Defined at:
  4905 ;;		line 339 in file "OledApi.c"
  4906 ;; Parameters:    Size  Location     Type
  4907 ;;  mode            1    wreg     unsigned char 
  4908 ;;  buf             2   17[COMRAM] PTR void 
  4909 ;;		 -> write@value(1), command@value(1), OledApi_printNum@s(17), ?_OledApi_printf(1), 
  4910 ;;		 -> STR_2(5), 
  4911 ;;  count           2   19[COMRAM] unsigned int 
  4912 ;; Auto vars:     Size  Location     Type
  4913 ;;  mode            1   24[COMRAM] unsigned char 
  4914 ;;  word            4   25[COMRAM] unsigned long 
  4915 ;;  p               2   29[COMRAM] PTR unsigned char 
  4916 ;;		 -> write@value(1), command@value(1), OledApi_printNum@s(17), ?_OledApi_printf(1), 
  4917 ;;		 -> STR_2(5), 
  4918 ;;  head_sent       1   31[COMRAM] unsigned char 
  4919 ;; Return value:  Size  Location     Type
  4920 ;;                  1    wreg      void 
  4921 ;; Registers used:
  4922 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4923 ;; Tracked objects:
  4924 ;;		On entry : 0/0
  4925 ;;		On exit  : 0/0
  4926 ;;		Unchanged: 0/0
  4927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4928 ;;      Params:         4       0       0       0       0       0       0       0       0
  4929 ;;      Locals:         8       0       0       0       0       0       0       0       0
  4930 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4931 ;;      Totals:        15       0       0       0       0       0       0       0       0
  4932 ;;Total ram usage:       15 bytes
  4933 ;; Hardware stack levels used:    1
  4934 ;; Hardware stack levels required when called:    3
  4935 ;; This function calls:
  4936 ;;		_SPI_Api_begin
  4937 ;;		_SPI_Api_end
  4938 ;;		_SPI_Api_sendWord
  4939 ;;		_SPI_Api_setSpiDevice
  4940 ;; This function is called by:
  4941 ;;		_command
  4942 ;;		_write
  4943 ;;		_writeStr
  4944 ;; This function uses a non-reentrant model
  4945 ;;
  4946                           
  4947                           	psect	text28
  4948  001CA4                     __ptext28:
  4949                           	opt callstack 0
  4950  001CA4                     _send:
  4951                           	opt callstack 24
  4952                           
  4953                           ;incstack = 0
  4954                           ;send@mode stored from wreg
  4955  001CA4  6E19               	movwf	send@mode^0,c
  4956  001CA6                     
  4957                           ;OledApi.c: 340:  if (count == 0)
  4958  001CA6  5014               	movf	send@count^0,w,c
  4959  001CA8  1015               	iorwf	(send@count+1)^0,w,c
  4960  001CAA  A4D8               	btfss	status,2,c
  4961  001CAC  EF5A  F00E         	goto	u1651
  4962  001CB0  EF5C  F00E         	goto	u1650
  4963  001CB4                     u1651:
  4964  001CB4  EF5E  F00E         	goto	l2215
  4965  001CB8                     u1650:
  4966  001CB8  EFC7  F00E         	goto	l226
  4967  001CBC                     l2215:
  4968                           
  4969                           ;OledApi.c: 343:     uint32_t word;;OledApi.c: 344:  uint8_t head_sent = 0;
  4970  001CBC  0E00               	movlw	0
  4971  001CBE  6E20               	movwf	send@head_sent^0,c
  4972  001CC0                     
  4973                           ;OledApi.c: 348:     SPI_Api_setSpiDevice(__SPIconfig);
  4974  001CC0  C080  F004         	movff	___SPIconfig,SPI_Api_setSpiDevice@_config
  4975  001CC4  C081  F005         	movff	___SPIconfig+1,SPI_Api_setSpiDevice@_config+1
  4976  001CC8  C082  F006         	movff	___SPIconfig+2,SPI_Api_setSpiDevice@_config+2
  4977  001CCC  EC35  F010         	call	_SPI_Api_setSpiDevice	;wreg free
  4978  001CD0                     
  4979                           ;OledApi.c: 349:     SPI_Api_begin();
  4980  001CD0  EC74  F011         	call	_SPI_Api_begin	;wreg free
  4981  001CD4                     
  4982                           ;OledApi.c: 352:  uint8_t *p = (uint8_t *)buf;
  4983  001CD4  C012  F01E         	movff	send@buf,send@p
  4984  001CD8  C013  F01F         	movff	send@buf+1,send@p+1
  4985  001CDC                     l2223:
  4986                           
  4987                           ;OledApi.c: 357:   if (head_sent == 0 && mode == 1)
  4988  001CDC  5020               	movf	send@head_sent^0,w,c
  4989  001CDE  A4D8               	btfss	status,2,c
  4990  001CE0  EF74  F00E         	goto	u1661
  4991  001CE4  EF76  F00E         	goto	u1660
  4992  001CE8                     u1661:
  4993  001CE8  EF9A  F00E         	goto	l2231
  4994  001CEC                     u1660:
  4995  001CEC  0419               	decf	send@mode^0,w,c
  4996  001CEE  A4D8               	btfss	status,2,c
  4997  001CF0  EF7C  F00E         	goto	u1671
  4998  001CF4  EF7E  F00E         	goto	u1670
  4999  001CF8                     u1671:
  5000  001CF8  EF9A  F00E         	goto	l2231
  5001  001CFC                     u1670:
  5002  001CFC                     
  5003                           ;OledApi.c: 358:         {;OledApi.c: 359:             word = 1 << (__SPIconfig.u8SPIBit
      +                          s - 1);
  5004  001CFC  C082  F016         	movff	___SPIconfig+2,??_send
  5005  001D00  0EFF               	movlw	-1
  5006  001D02  2616               	addwf	??_send^0,f,c
  5007  001D04  0E01               	movlw	1
  5008  001D06  6E17               	movwf	(??_send+1)^0,c
  5009  001D08  0E00               	movlw	0
  5010  001D0A  6E18               	movwf	(??_send+2)^0,c
  5011  001D0C  2A16               	incf	??_send^0,f,c
  5012  001D0E  EF8C  F00E         	goto	u1684
  5013  001D12                     u1685:
  5014  001D12  90D8               	bcf	status,0,c
  5015  001D14  3617               	rlcf	(??_send+1)^0,f,c
  5016  001D16  3618               	rlcf	(??_send+2)^0,f,c
  5017  001D18                     u1684:
  5018  001D18  2E16               	decfsz	??_send^0,f,c
  5019  001D1A  EF89  F00E         	goto	u1685
  5020  001D1E  C017  F01A         	movff	??_send+1,send@word
  5021  001D22  C018  F01B         	movff	??_send+2,send@word+1
  5022  001D26  0E00               	movlw	0
  5023  001D28  BE1B               	btfsc	(send@word+1)^0,7,c
  5024  001D2A  0EFF               	movlw	-1
  5025  001D2C  6E1C               	movwf	(send@word+2)^0,c
  5026  001D2E  6E1D               	movwf	(send@word+3)^0,c
  5027  001D30                     
  5028                           ;OledApi.c: 360:             head_sent = 1;
  5029  001D30  0E01               	movlw	1
  5030  001D32  6E20               	movwf	send@head_sent^0,c
  5031  001D34                     l2231:
  5032                           
  5033                           ;OledApi.c: 364:   word |= (uint8_t) *p;
  5034  001D34  C01E  FFF6         	movff	send@p,tblptrl
  5035  001D38  C01F  FFF7         	movff	send@p+1,tblptrh
  5036  001D3C  6AF8               	clrf	tblptru,c
  5037  001D3E  0E07               	movlw	(high __ramtop+-1)
  5038  001D40  64F7               	cpfsgt	tblptrh,c
  5039  001D42  D003               	bra	u1697
  5040  001D44  0008               	tblrd		*
  5041  001D46  50F5               	movf	tablat,w,c
  5042  001D48  D005               	bra	u1690
  5043  001D4A                     u1697:
  5044  001D4A  CFF6 FFE9          	movff	tblptrl,fsr0l
  5045  001D4E  CFF7 FFEA          	movff	tblptrh,fsr0h
  5046  001D52  50EF               	movf	indf0,w,c
  5047  001D54                     u1690:
  5048  001D54  6E16               	movwf	??_send^0,c
  5049  001D56  5016               	movf	??_send^0,w,c
  5050  001D58  121A               	iorwf	send@word^0,f,c
  5051  001D5A                     
  5052                           ;OledApi.c: 367:         SPI_Api_sendWord(word);
  5053  001D5A  C01A  F006         	movff	send@word,SPI_Api_sendWord@word
  5054  001D5E  C01B  F007         	movff	send@word+1,SPI_Api_sendWord@word+1
  5055  001D62  C01C  F008         	movff	send@word+2,SPI_Api_sendWord@word+2
  5056  001D66  C01D  F009         	movff	send@word+3,SPI_Api_sendWord@word+3
  5057  001D6A  EC3A  F00F         	call	_SPI_Api_sendWord	;wreg free
  5058  001D6E                     
  5059                           ;OledApi.c: 370:   p++;
  5060  001D6E  4A1E               	infsnz	send@p^0,f,c
  5061  001D70  2A1F               	incf	(send@p+1)^0,f,c
  5062  001D72                     
  5063                           ;OledApi.c: 371:  } while (--count > 0);
  5064  001D72  0614               	decf	send@count^0,f,c
  5065  001D74  A0D8               	btfss	status,0,c
  5066  001D76  0615               	decf	(send@count+1)^0,f,c
  5067  001D78  5014               	movf	send@count^0,w,c
  5068  001D7A  1015               	iorwf	(send@count+1)^0,w,c
  5069  001D7C  A4D8               	btfss	status,2,c
  5070  001D7E  EFC3  F00E         	goto	u1701
  5071  001D82  EFC5  F00E         	goto	u1700
  5072  001D86                     u1701:
  5073  001D86  EF6E  F00E         	goto	l2223
  5074  001D8A                     u1700:
  5075  001D8A                     
  5076                           ;OledApi.c: 375:     SPI_Api_end();
  5077  001D8A  EC5D  F011         	call	_SPI_Api_end	;wreg free
  5078  001D8E                     l226:
  5079  001D8E  0012               	return		;funcret
  5080  001D90                     __end_of_send:
  5081                           	opt callstack 0
  5082                           
  5083 ;; *************** function _SPI_Api_setSpiDevice *****************
  5084 ;; Defined at:
  5085 ;;		line 32 in file "SPI_Api.c"
  5086 ;; Parameters:    Size  Location     Type
  5087 ;;  _config         3    3[COMRAM] struct .
  5088 ;; Auto vars:     Size  Location     Type
  5089 ;;  mask            1    6[COMRAM] unsigned char 
  5090 ;; Return value:  Size  Location     Type
  5091 ;;                  1    wreg      _Bool 
  5092 ;; Registers used:
  5093 ;;		wreg, status,2, status,0, cstack
  5094 ;; Tracked objects:
  5095 ;;		On entry : 0/0
  5096 ;;		On exit  : 0/0
  5097 ;;		Unchanged: 0/0
  5098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5099 ;;      Params:         3       0       0       0       0       0       0       0       0
  5100 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5101 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5102 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5103 ;;Total ram usage:        4 bytes
  5104 ;; Hardware stack levels used:    1
  5105 ;; Hardware stack levels required when called:    1
  5106 ;; This function calls:
  5107 ;;		_DIGITAL_WRITE
  5108 ;; This function is called by:
  5109 ;;		_send
  5110 ;; This function uses a non-reentrant model
  5111 ;;
  5112                           
  5113                           	psect	text29
  5114  00206A                     __ptext29:
  5115                           	opt callstack 0
  5116  00206A                     _SPI_Api_setSpiDevice:
  5117                           	opt callstack 25
  5118  00206A                     
  5119                           ;SPI_Api.c: 32: _Bool SPI_Api_setSpiDevice(SPI_Api_pConfig _config);SPI_Api.c: 33: {;SPI
      +                          _Api.c: 34:     uint8_t mask;;SPI_Api.c: 35:     for(mask = 1; mask != _config.u8EnableP
      +                          in; mask <<= 1)
  5120  00206A  0E01               	movlw	1
  5121  00206C  6E07               	movwf	SPI_Api_setSpiDevice@mask^0,c
  5122  00206E  EF48  F010         	goto	l324
  5123  002072                     l2157:
  5124                           
  5125                           ;SPI_Api.c: 36:     {;SPI_Api.c: 38:         if(mask == 0x80)
  5126  002072  0E80               	movlw	128
  5127  002074  1807               	xorwf	SPI_Api_setSpiDevice@mask^0,w,c
  5128  002076  A4D8               	btfss	status,2,c
  5129  002078  EF40  F010         	goto	u1551
  5130  00207C  EF42  F010         	goto	u1550
  5131  002080                     u1551:
  5132  002080  EF46  F010         	goto	l2163
  5133  002084                     u1550:
  5134  002084                     
  5135                           ;SPI_Api.c: 39:         {;SPI_Api.c: 40:             G_SPI_Api_u8Flags |= 0x02;
  5136  002084  0100               	movlb	0	; () banked
  5137  002086  8383               	bsf	_G_SPI_Api_u8Flags& (0+255),1,b
  5138  002088  EF6C  F010         	goto	l327
  5139  00208C                     l2163:
  5140                           
  5141                           ;SPI_Api.c: 43:     }
  5142  00208C  90D8               	bcf	status,0,c
  5143  00208E  3607               	rlcf	SPI_Api_setSpiDevice@mask^0,f,c
  5144  002090                     l324:
  5145  002090  5007               	movf	SPI_Api_setSpiDevice@mask^0,w,c
  5146  002092  1804               	xorwf	SPI_Api_setSpiDevice@_config^0,w,c
  5147  002094  A4D8               	btfss	status,2,c
  5148  002096  EF4F  F010         	goto	u1561
  5149  00209A  EF51  F010         	goto	u1560
  5150  00209E                     u1561:
  5151  00209E  EF39  F010         	goto	l2157
  5152  0020A2                     u1560:
  5153  0020A2                     
  5154                           ;SPI_Api.c: 44:     if(!(_Bool)(G_SPI_Api_u8Flags & 0x04))
  5155  0020A2  0100               	movlb	0	; () banked
  5156  0020A4  B583               	btfsc	_G_SPI_Api_u8Flags& (0+255),2,b
  5157  0020A6  EF57  F010         	goto	u1571
  5158  0020AA  EF59  F010         	goto	u1570
  5159  0020AE                     u1571:
  5160  0020AE  EF5D  F010         	goto	l329
  5161  0020B2                     u1570:
  5162  0020B2                     
  5163                           ; BSR set to: 0
  5164                           ;SPI_Api.c: 45:     {;SPI_Api.c: 46:         G_SPI_Api_u8Flags |= 0x02;
  5165  0020B2  8383               	bsf	_G_SPI_Api_u8Flags& (0+255),1,b
  5166                           
  5167                           ;SPI_Api.c: 47:         G_SPI_Api_u8Flags |= 0x08;
  5168  0020B4  8783               	bsf	_G_SPI_Api_u8Flags& (0+255),3,b
  5169  0020B6  EF6C  F010         	goto	l327
  5170  0020BA                     l329:
  5171                           
  5172                           ; BSR set to: 0
  5173                           ;SPI_Api.c: 51:     __config = _config;
  5174  0020BA  C004  F07D         	movff	SPI_Api_setSpiDevice@_config,___config
  5175  0020BE  C005  F07E         	movff	SPI_Api_setSpiDevice@_config+1,___config+1
  5176  0020C2  C006  F07F         	movff	SPI_Api_setSpiDevice@_config+2,___config+2
  5177  0020C6                     
  5178                           ; BSR set to: 0
  5179                           ;SPI_Api.c: 52:     DIGITAL_WRITE(LATC, __config.u8EnablePin, (uint8_t)1);
  5180  0020C6  C07D  F001         	movff	___config,DIGITAL_WRITE@pin
  5181  0020CA  0E01               	movlw	1
  5182  0020CC  6E02               	movwf	DIGITAL_WRITE@val^0,c
  5183  0020CE  508B               	movf	139,w,c	;volatile
  5184  0020D0  ECB3  F011         	call	_DIGITAL_WRITE
  5185  0020D4                     
  5186                           ;SPI_Api.c: 53:     G_SPI_Api_u8Flags &= ~0x02;
  5187  0020D4  0100               	movlb	0	; () banked
  5188  0020D6  9383               	bcf	_G_SPI_Api_u8Flags& (0+255),1,b
  5189  0020D8                     l327:
  5190                           
  5191                           ; BSR set to: 0
  5192  0020D8  0012               	return		;funcret
  5193  0020DA                     __end_of_SPI_Api_setSpiDevice:
  5194                           	opt callstack 0
  5195                           
  5196 ;; *************** function _SPI_Api_sendWord *****************
  5197 ;; Defined at:
  5198 ;;		line 83 in file "SPI_Api.c"
  5199 ;; Parameters:    Size  Location     Type
  5200 ;;  word            4    5[COMRAM] unsigned long 
  5201 ;; Auto vars:     Size  Location     Type
  5202 ;;  mask            4   13[COMRAM] unsigned long 
  5203 ;; Return value:  Size  Location     Type
  5204 ;;                  1    wreg      _Bool 
  5205 ;; Registers used:
  5206 ;;		wreg, status,2, status,0, cstack
  5207 ;; Tracked objects:
  5208 ;;		On entry : 0/0
  5209 ;;		On exit  : 0/0
  5210 ;;		Unchanged: 0/0
  5211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5212 ;;      Params:         4       0       0       0       0       0       0       0       0
  5213 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5214 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5215 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5216 ;;Total ram usage:       12 bytes
  5217 ;; Hardware stack levels used:    1
  5218 ;; Hardware stack levels required when called:    2
  5219 ;; This function calls:
  5220 ;;		_SPI_Api_sendBit
  5221 ;; This function is called by:
  5222 ;;		_send
  5223 ;; This function uses a non-reentrant model
  5224 ;;
  5225                           
  5226                           	psect	text30
  5227  001E74                     __ptext30:
  5228                           	opt callstack 0
  5229  001E74                     _SPI_Api_sendWord:
  5230                           	opt callstack 24
  5231  001E74                     
  5232                           ;SPI_Api.c: 83: _Bool SPI_Api_sendWord(uint32_t word);SPI_Api.c: 84: {;SPI_Api.c: 86:   
      +                            if((word >> (__config.u8SPIBits - 1)) > 0)
  5233  001E74  0100               	movlb	0	; () banked
  5234  001E76  057F               	decf	(___config+2)& (0+255),w,b
  5235  001E78  C006  F00A         	movff	SPI_Api_sendWord@word,??_SPI_Api_sendWord
  5236  001E7C  C007  F00B         	movff	SPI_Api_sendWord@word+1,??_SPI_Api_sendWord+1
  5237  001E80  C008  F00C         	movff	SPI_Api_sendWord@word+2,??_SPI_Api_sendWord+2
  5238  001E84  C009  F00D         	movff	SPI_Api_sendWord@word+3,??_SPI_Api_sendWord+3
  5239  001E88  2AE8               	incf	wreg,f,c
  5240  001E8A  EF4C  F00F         	goto	u1590
  5241  001E8E                     u1595:
  5242  001E8E  90D8               	bcf	status,0,c
  5243  001E90  320D               	rrcf	(??_SPI_Api_sendWord+3)^0,f,c
  5244  001E92  320C               	rrcf	(??_SPI_Api_sendWord+2)^0,f,c
  5245  001E94  320B               	rrcf	(??_SPI_Api_sendWord+1)^0,f,c
  5246  001E96  320A               	rrcf	??_SPI_Api_sendWord^0,f,c
  5247  001E98                     u1590:
  5248  001E98  2EE8               	decfsz	wreg,f,c
  5249  001E9A  EF47  F00F         	goto	u1595
  5250  001E9E  500A               	movf	??_SPI_Api_sendWord^0,w,c
  5251  001EA0  100B               	iorwf	(??_SPI_Api_sendWord+1)^0,w,c
  5252  001EA2  100C               	iorwf	(??_SPI_Api_sendWord+2)^0,w,c
  5253  001EA4  100D               	iorwf	(??_SPI_Api_sendWord+3)^0,w,c
  5254  001EA6  B4D8               	btfsc	status,2,c
  5255  001EA8  EF58  F00F         	goto	u1601
  5256  001EAC  EF5A  F00F         	goto	u1600
  5257  001EB0                     u1601:
  5258  001EB0  EF5C  F00F         	goto	l2189
  5259  001EB4                     u1600:
  5260  001EB4  EFA5  F00F         	goto	l341
  5261  001EB8                     l2189:
  5262                           
  5263                           ; BSR set to: 0
  5264                           ;SPI_Api.c: 90:     uint32_t mask = 1 << (__config.u8SPIBits);
  5265  001EB8  C07F  F00A         	movff	___config+2,??_SPI_Api_sendWord
  5266  001EBC  0E01               	movlw	1
  5267  001EBE  6E0B               	movwf	(??_SPI_Api_sendWord+1)^0,c
  5268  001EC0  0E00               	movlw	0
  5269  001EC2  6E0C               	movwf	(??_SPI_Api_sendWord+2)^0,c
  5270  001EC4  2A0A               	incf	??_SPI_Api_sendWord^0,f,c
  5271  001EC6  EF68  F00F         	goto	u1614
  5272  001ECA                     u1615:
  5273  001ECA  90D8               	bcf	status,0,c
  5274  001ECC  360B               	rlcf	(??_SPI_Api_sendWord+1)^0,f,c
  5275  001ECE  360C               	rlcf	(??_SPI_Api_sendWord+2)^0,f,c
  5276  001ED0                     u1614:
  5277  001ED0  2E0A               	decfsz	??_SPI_Api_sendWord^0,f,c
  5278  001ED2  EF65  F00F         	goto	u1615
  5279  001ED6  C00B  F00E         	movff	??_SPI_Api_sendWord+1,SPI_Api_sendWord@mask
  5280  001EDA  C00C  F00F         	movff	??_SPI_Api_sendWord+2,SPI_Api_sendWord@mask+1
  5281  001EDE  0E00               	movlw	0
  5282  001EE0  BE0F               	btfsc	(SPI_Api_sendWord@mask+1)^0,7,c
  5283  001EE2  0EFF               	movlw	-1
  5284  001EE4  6E10               	movwf	(SPI_Api_sendWord@mask+2)^0,c
  5285  001EE6  6E11               	movwf	(SPI_Api_sendWord@mask+3)^0,c
  5286                           
  5287                           ;SPI_Api.c: 91:     while(mask > 0)
  5288  001EE8  EF9A  F00F         	goto	l2199
  5289  001EEC                     l2191:
  5290                           
  5291                           ;SPI_Api.c: 92:     {;SPI_Api.c: 93:         mask >>= 1;
  5292  001EEC  90D8               	bcf	status,0,c
  5293  001EEE  3211               	rrcf	(SPI_Api_sendWord@mask+3)^0,f,c
  5294  001EF0  3210               	rrcf	(SPI_Api_sendWord@mask+2)^0,f,c
  5295  001EF2  320F               	rrcf	(SPI_Api_sendWord@mask+1)^0,f,c
  5296  001EF4  320E               	rrcf	SPI_Api_sendWord@mask^0,f,c
  5297  001EF6                     
  5298                           ;SPI_Api.c: 94:         if((word & mask) > 0)
  5299  001EF6  500E               	movf	SPI_Api_sendWord@mask^0,w,c
  5300  001EF8  1406               	andwf	SPI_Api_sendWord@word^0,w,c
  5301  001EFA  6E0A               	movwf	??_SPI_Api_sendWord^0,c
  5302  001EFC  500F               	movf	(SPI_Api_sendWord@mask+1)^0,w,c
  5303  001EFE  1407               	andwf	(SPI_Api_sendWord@word+1)^0,w,c
  5304  001F00  6E0B               	movwf	(??_SPI_Api_sendWord+1)^0,c
  5305  001F02  5010               	movf	(SPI_Api_sendWord@mask+2)^0,w,c
  5306  001F04  1408               	andwf	(SPI_Api_sendWord@word+2)^0,w,c
  5307  001F06  6E0C               	movwf	(??_SPI_Api_sendWord+2)^0,c
  5308  001F08  5011               	movf	(SPI_Api_sendWord@mask+3)^0,w,c
  5309  001F0A  1409               	andwf	(SPI_Api_sendWord@word+3)^0,w,c
  5310  001F0C  6E0D               	movwf	(??_SPI_Api_sendWord+3)^0,c
  5311  001F0E  500A               	movf	??_SPI_Api_sendWord^0,w,c
  5312  001F10  100B               	iorwf	(??_SPI_Api_sendWord+1)^0,w,c
  5313  001F12  100C               	iorwf	(??_SPI_Api_sendWord+2)^0,w,c
  5314  001F14  100D               	iorwf	(??_SPI_Api_sendWord+3)^0,w,c
  5315  001F16  B4D8               	btfsc	status,2,c
  5316  001F18  EF90  F00F         	goto	u1621
  5317  001F1C  EF92  F00F         	goto	u1620
  5318  001F20                     u1621:
  5319  001F20  EF97  F00F         	goto	l2197
  5320  001F24                     u1620:
  5321  001F24                     
  5322                           ;SPI_Api.c: 95:         {;SPI_Api.c: 96:             SPI_Api_sendBit((uint8_t)1);
  5323  001F24  0E01               	movlw	1
  5324  001F26  ECB9  F010         	call	_SPI_Api_sendBit
  5325                           
  5326                           ;SPI_Api.c: 97:         }
  5327  001F2A  EF9A  F00F         	goto	l2199
  5328  001F2E                     l2197:
  5329                           
  5330                           ;SPI_Api.c: 99:         {;SPI_Api.c: 100:             SPI_Api_sendBit((uint8_t)0);
  5331  001F2E  0E00               	movlw	0
  5332  001F30  ECB9  F010         	call	_SPI_Api_sendBit
  5333  001F34                     l2199:
  5334                           
  5335                           ;SPI_Api.c: 91:     while(mask > 0)
  5336  001F34  500E               	movf	SPI_Api_sendWord@mask^0,w,c
  5337  001F36  100F               	iorwf	(SPI_Api_sendWord@mask+1)^0,w,c
  5338  001F38  1010               	iorwf	(SPI_Api_sendWord@mask+2)^0,w,c
  5339  001F3A  1011               	iorwf	(SPI_Api_sendWord@mask+3)^0,w,c
  5340  001F3C  A4D8               	btfss	status,2,c
  5341  001F3E  EFA3  F00F         	goto	u1631
  5342  001F42  EFA5  F00F         	goto	u1630
  5343  001F46                     u1631:
  5344  001F46  EF76  F00F         	goto	l2191
  5345  001F4A                     u1630:
  5346  001F4A                     l341:
  5347  001F4A  0012               	return		;funcret
  5348  001F4C                     __end_of_SPI_Api_sendWord:
  5349                           	opt callstack 0
  5350                           
  5351 ;; *************** function _SPI_Api_sendBit *****************
  5352 ;; Defined at:
  5353 ;;		line 121 in file "SPI_Api.c"
  5354 ;; Parameters:    Size  Location     Type
  5355 ;;  val             1    wreg     unsigned char 
  5356 ;; Auto vars:     Size  Location     Type
  5357 ;;  val             1    4[COMRAM] unsigned char 
  5358 ;; Return value:  Size  Location     Type
  5359 ;;                  1    wreg      _Bool 
  5360 ;; Registers used:
  5361 ;;		wreg, status,2, status,0, cstack
  5362 ;; Tracked objects:
  5363 ;;		On entry : 0/0
  5364 ;;		On exit  : 0/0
  5365 ;;		Unchanged: 0/0
  5366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5367 ;;      Params:         0       0       0       0       0       0       0       0       0
  5368 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5369 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5370 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5371 ;;Total ram usage:        2 bytes
  5372 ;; Hardware stack levels used:    1
  5373 ;; Hardware stack levels required when called:    1
  5374 ;; This function calls:
  5375 ;;		_DIGITAL_WRITE
  5376 ;; This function is called by:
  5377 ;;		_SPI_Api_sendWord
  5378 ;; This function uses a non-reentrant model
  5379 ;;
  5380                           
  5381                           	psect	text31
  5382  002172                     __ptext31:
  5383                           	opt callstack 0
  5384  002172                     _SPI_Api_sendBit:
  5385                           	opt callstack 24
  5386                           
  5387                           ;incstack = 0
  5388                           ;SPI_Api_sendBit@val stored from wreg
  5389  002172  6E05               	movwf	SPI_Api_sendBit@val^0,c
  5390  002174                     
  5391                           ;SPI_Api.c: 121: _Bool SPI_Api_sendBit(uint8_t val);SPI_Api.c: 122: {;SPI_Api.c: 124:   
      +                            if((_Bool)((G_SPI_Api_u8Flags & (0x01 | 0x01 | 0x04 | 0x08)) == 0))
  5392  002174  C083  F004         	movff	_G_SPI_Api_u8Flags,??_SPI_Api_sendBit
  5393  002178  0E0D               	movlw	13
  5394  00217A  1604               	andwf	??_SPI_Api_sendBit^0,f,c
  5395  00217C  A4D8               	btfss	status,2,c
  5396  00217E  EFC3  F010         	goto	u1541
  5397  002182  EFC5  F010         	goto	u1540
  5398  002186                     u1541:
  5399  002186  EFC7  F010         	goto	l2151
  5400  00218A                     u1540:
  5401  00218A  EFDC  F010         	goto	l357
  5402  00218E                     l2151:
  5403                           
  5404                           ;SPI_Api.c: 129:     DIGITAL_WRITE(LATC, 0x01, (uint8_t)0);
  5405  00218E  0E01               	movlw	1
  5406  002190  6E01               	movwf	DIGITAL_WRITE@pin^0,c
  5407  002192  0E00               	movlw	0
  5408  002194  6E02               	movwf	DIGITAL_WRITE@val^0,c
  5409  002196  508B               	movf	139,w,c	;volatile
  5410  002198  ECB3  F011         	call	_DIGITAL_WRITE
  5411                           
  5412                           ;SPI_Api.c: 130:     DIGITAL_WRITE(LATC, 0x04, val);
  5413  00219C  0E04               	movlw	4
  5414  00219E  6E01               	movwf	DIGITAL_WRITE@pin^0,c
  5415  0021A0  C005  F002         	movff	SPI_Api_sendBit@val,DIGITAL_WRITE@val
  5416  0021A4  508B               	movf	139,w,c	;volatile
  5417  0021A6  ECB3  F011         	call	_DIGITAL_WRITE
  5418                           
  5419                           ;SPI_Api.c: 131:     DIGITAL_WRITE(LATC, 0x01, (uint8_t)1);
  5420  0021AA  0E01               	movlw	1
  5421  0021AC  6E01               	movwf	DIGITAL_WRITE@pin^0,c
  5422  0021AE  0E01               	movlw	1
  5423  0021B0  6E02               	movwf	DIGITAL_WRITE@val^0,c
  5424  0021B2  508B               	movf	139,w,c	;volatile
  5425  0021B4  ECB3  F011         	call	_DIGITAL_WRITE
  5426  0021B8                     l357:
  5427  0021B8  0012               	return		;funcret
  5428  0021BA                     __end_of_SPI_Api_sendBit:
  5429                           	opt callstack 0
  5430                           
  5431 ;; *************** function _SPI_Api_end *****************
  5432 ;; Defined at:
  5433 ;;		line 70 in file "SPI_Api.c"
  5434 ;; Parameters:    Size  Location     Type
  5435 ;;		None
  5436 ;; Auto vars:     Size  Location     Type
  5437 ;;		None
  5438 ;; Return value:  Size  Location     Type
  5439 ;;                  1    wreg      _Bool 
  5440 ;; Registers used:
  5441 ;;		wreg, status,2, status,0, cstack
  5442 ;; Tracked objects:
  5443 ;;		On entry : 0/0
  5444 ;;		On exit  : 0/0
  5445 ;;		Unchanged: 0/0
  5446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5447 ;;      Params:         0       0       0       0       0       0       0       0       0
  5448 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5449 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5450 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5451 ;;Total ram usage:        1 bytes
  5452 ;; Hardware stack levels used:    1
  5453 ;; Hardware stack levels required when called:    1
  5454 ;; This function calls:
  5455 ;;		_DIGITAL_WRITE
  5456 ;; This function is called by:
  5457 ;;		_send
  5458 ;; This function uses a non-reentrant model
  5459 ;;
  5460                           
  5461                           	psect	text32
  5462  0022BA                     __ptext32:
  5463                           	opt callstack 0
  5464  0022BA                     _SPI_Api_end:
  5465                           	opt callstack 25
  5466  0022BA                     
  5467                           ;SPI_Api.c: 72:     if((_Bool)((G_SPI_Api_u8Flags & (0x01 | 0x01 | 0x08)) == 0))
  5468  0022BA  C083  F004         	movff	_G_SPI_Api_u8Flags,??_SPI_Api_end
  5469  0022BE  0E09               	movlw	9
  5470  0022C0  1604               	andwf	??_SPI_Api_end^0,f,c
  5471  0022C2  A4D8               	btfss	status,2,c
  5472  0022C4  EF66  F011         	goto	u1641
  5473  0022C8  EF68  F011         	goto	u1640
  5474  0022CC                     u1641:
  5475  0022CC  EF6A  F011         	goto	l2205
  5476  0022D0                     u1640:
  5477  0022D0  EF73  F011         	goto	l337
  5478  0022D4                     l2205:
  5479                           
  5480                           ;SPI_Api.c: 77:     DIGITAL_WRITE(LATC, __config.u8EnablePin, (uint8_t)1);
  5481  0022D4  C07D  F001         	movff	___config,DIGITAL_WRITE@pin
  5482  0022D8  0E01               	movlw	1
  5483  0022DA  6E02               	movwf	DIGITAL_WRITE@val^0,c
  5484  0022DC  508B               	movf	139,w,c	;volatile
  5485  0022DE  ECB3  F011         	call	_DIGITAL_WRITE
  5486  0022E2                     
  5487                           ;SPI_Api.c: 78:     G_SPI_Api_u8Flags |= 0x04;
  5488  0022E2  0100               	movlb	0	; () banked
  5489  0022E4  8583               	bsf	_G_SPI_Api_u8Flags& (0+255),2,b
  5490  0022E6                     l337:
  5491  0022E6  0012               	return		;funcret
  5492  0022E8                     __end_of_SPI_Api_end:
  5493                           	opt callstack 0
  5494                           
  5495 ;; *************** function _SPI_Api_begin *****************
  5496 ;; Defined at:
  5497 ;;		line 57 in file "SPI_Api.c"
  5498 ;; Parameters:    Size  Location     Type
  5499 ;;		None
  5500 ;; Auto vars:     Size  Location     Type
  5501 ;;		None
  5502 ;; Return value:  Size  Location     Type
  5503 ;;                  1    wreg      _Bool 
  5504 ;; Registers used:
  5505 ;;		wreg, status,2, status,0, cstack
  5506 ;; Tracked objects:
  5507 ;;		On entry : 0/0
  5508 ;;		On exit  : 0/0
  5509 ;;		Unchanged: 0/0
  5510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5511 ;;      Params:         0       0       0       0       0       0       0       0       0
  5512 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5513 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5514 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5515 ;;Total ram usage:        1 bytes
  5516 ;; Hardware stack levels used:    1
  5517 ;; Hardware stack levels required when called:    1
  5518 ;; This function calls:
  5519 ;;		_DIGITAL_WRITE
  5520 ;; This function is called by:
  5521 ;;		_send
  5522 ;; This function uses a non-reentrant model
  5523 ;;
  5524                           
  5525                           	psect	text33
  5526  0022E8                     __ptext33:
  5527                           	opt callstack 0
  5528  0022E8                     _SPI_Api_begin:
  5529                           	opt callstack 25
  5530  0022E8                     
  5531                           ;SPI_Api.c: 59:     if((_Bool)((G_SPI_Api_u8Flags & (0x01 | 0x01 | 0x08)) == 0))
  5532  0022E8  C083  F004         	movff	_G_SPI_Api_u8Flags,??_SPI_Api_begin
  5533  0022EC  0E09               	movlw	9
  5534  0022EE  1604               	andwf	??_SPI_Api_begin^0,f,c
  5535  0022F0  A4D8               	btfss	status,2,c
  5536  0022F2  EF7D  F011         	goto	u1581
  5537  0022F6  EF7F  F011         	goto	u1580
  5538  0022FA                     u1581:
  5539  0022FA  EF81  F011         	goto	l2179
  5540  0022FE                     u1580:
  5541  0022FE  EF8A  F011         	goto	l333
  5542  002302                     l2179:
  5543                           
  5544                           ;SPI_Api.c: 64:     DIGITAL_WRITE(LATC, __config.u8EnablePin, (uint8_t)0);
  5545  002302  C07D  F001         	movff	___config,DIGITAL_WRITE@pin
  5546  002306  0E00               	movlw	0
  5547  002308  6E02               	movwf	DIGITAL_WRITE@val^0,c
  5548  00230A  508B               	movf	139,w,c	;volatile
  5549  00230C  ECB3  F011         	call	_DIGITAL_WRITE
  5550  002310                     
  5551                           ;SPI_Api.c: 65:     G_SPI_Api_u8Flags &= ~0x04;
  5552  002310  0100               	movlb	0	; () banked
  5553  002312  9583               	bcf	_G_SPI_Api_u8Flags& (0+255),2,b
  5554  002314                     l333:
  5555  002314  0012               	return		;funcret
  5556  002316                     __end_of_SPI_Api_begin:
  5557                           	opt callstack 0
  5558                           
  5559 ;; *************** function _DIGITAL_WRITE *****************
  5560 ;; Defined at:
  5561 ;;		line 33 in file "main.c"
  5562 ;; Parameters:    Size  Location     Type
  5563 ;;  port            1    wreg     unsigned char 
  5564 ;;  pin             1    0[COMRAM] unsigned char 
  5565 ;;  val             1    1[COMRAM] unsigned char 
  5566 ;; Auto vars:     Size  Location     Type
  5567 ;;  port            1    2[COMRAM] unsigned char 
  5568 ;; Return value:  Size  Location     Type
  5569 ;;                  1    wreg      void 
  5570 ;; Registers used:
  5571 ;;		wreg, status,2, status,0
  5572 ;; Tracked objects:
  5573 ;;		On entry : 0/0
  5574 ;;		On exit  : 0/0
  5575 ;;		Unchanged: 0/0
  5576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5577 ;;      Params:         2       0       0       0       0       0       0       0       0
  5578 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5579 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5580 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5581 ;;Total ram usage:        3 bytes
  5582 ;; Hardware stack levels used:    1
  5583 ;; This function calls:
  5584 ;;		Nothing
  5585 ;; This function is called by:
  5586 ;;		_SPI_Api_setSpiDevice
  5587 ;;		_SPI_Api_begin
  5588 ;;		_SPI_Api_end
  5589 ;;		_SPI_Api_sendBit
  5590 ;;		_SPI_Api_receiveBit
  5591 ;; This function uses a non-reentrant model
  5592 ;;
  5593                           
  5594                           	psect	text34
  5595  002366                     __ptext34:
  5596                           	opt callstack 0
  5597  002366                     _DIGITAL_WRITE:
  5598                           	opt callstack 25
  5599                           
  5600                           ;incstack = 0
  5601                           ;DIGITAL_WRITE@port stored from wreg
  5602  002366  6E03               	movwf	DIGITAL_WRITE@port^0,c
  5603  002368                     
  5604                           ;main.c: 33: void DIGITAL_WRITE(uint8_t port, uint8_t pin, uint8_t val);main.c: 34: {;ma
      +                          in.c: 35:     if(val == (uint8_t)1)
  5605  002368  0402               	decf	DIGITAL_WRITE@val^0,w,c
  5606  00236A  A4D8               	btfss	status,2,c
  5607  00236C  EFBA  F011         	goto	u1531
  5608  002370  EFBC  F011         	goto	u1530
  5609  002374                     u1531:
  5610  002374  EFC0  F011         	goto	l2145
  5611  002378                     u1530:
  5612  002378                     
  5613                           ;main.c: 36:     {;main.c: 37:         port |= pin;
  5614  002378  5001               	movf	DIGITAL_WRITE@pin^0,w,c
  5615  00237A  1203               	iorwf	DIGITAL_WRITE@port^0,f,c
  5616                           
  5617                           ;main.c: 38:     }
  5618  00237C  EFC3  F011         	goto	l35
  5619  002380                     l2145:
  5620                           
  5621                           ;main.c: 40:     {;main.c: 41:         port &= ~pin;
  5622  002380  5001               	movf	DIGITAL_WRITE@pin^0,w,c
  5623  002382  0AFF               	xorlw	255
  5624  002384  1603               	andwf	DIGITAL_WRITE@port^0,f,c
  5625  002386                     l35:
  5626  002386  0012               	return		;funcret
  5627  002388                     __end_of_DIGITAL_WRITE:
  5628                           	opt callstack 0
  5629                           
  5630                           	psect	text35
  5631  000000                     __ptext35:
  5632                           	opt callstack 0
  5633  000000                     
  5634                           	psect	rparam
  5635  0000                     tosu	equ	0xFFF
  5636                           tosh	equ	0xFFE
  5637                           tosl	equ	0xFFD
  5638                           stkptr	equ	0xFFC
  5639                           pclatu	equ	0xFFB
  5640                           pclath	equ	0xFFA
  5641                           pcl	equ	0xFF9
  5642                           tblptru	equ	0xFF8
  5643                           tblptrh	equ	0xFF7
  5644                           tblptrl	equ	0xFF6
  5645                           tablat	equ	0xFF5
  5646                           prodh	equ	0xFF4
  5647                           prodl	equ	0xFF3
  5648                           indf0	equ	0xFEF
  5649                           postinc0	equ	0xFEE
  5650                           postdec0	equ	0xFED
  5651                           preinc0	equ	0xFEC
  5652                           plusw0	equ	0xFEB
  5653                           fsr0h	equ	0xFEA
  5654                           fsr0l	equ	0xFE9
  5655                           wreg	equ	0xFE8
  5656                           indf1	equ	0xFE7
  5657                           postinc1	equ	0xFE6
  5658                           postdec1	equ	0xFE5
  5659                           preinc1	equ	0xFE4
  5660                           plusw1	equ	0xFE3
  5661                           fsr1h	equ	0xFE2
  5662                           fsr1l	equ	0xFE1
  5663                           bsr	equ	0xFE0
  5664                           indf2	equ	0xFDF
  5665                           postinc2	equ	0xFDE
  5666                           postdec2	equ	0xFDD
  5667                           preinc2	equ	0xFDC
  5668                           plusw2	equ	0xFDB
  5669                           fsr2h	equ	0xFDA
  5670                           fsr2l	equ	0xFD9
  5671                           status	equ	0xFD8


Data Sizes:
    Strings     37
    Constant    0
    Data        17
    BSS         165
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160      4      56
    BANK1           256      0     130
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    S1084$1$0	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    func$0	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    func$0	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    call@p	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    __funcs_on_exit@arg	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    head.a	PTR void [32] size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    head.f	PTR FTN(PTR void ,)void [32] size(2) Largest target is 1
		 -> call(), 

    head.next	PTR struct fl size(2) Largest target is 0

    head	PTR struct fl size(2) Largest target is 163
		 -> builtin(BANK1[130]), NULL(NULL[0]), 

    __funcs_on_exit@func	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> call(), 

    S1084fl$a	PTR void [32] size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    builtin.a	PTR void [32] size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    S1084fl$f	PTR FTN(PTR void ,)void [32] size(2) Largest target is 1
		 -> call(), 

    builtin.f	PTR FTN(PTR void ,)void [32] size(2) Largest target is 1
		 -> call(), 

    S1084fl$next	PTR struct fl size(2) Largest target is 0

    builtin.next	PTR struct fl size(2) Largest target is 0

    send@buf	PTR void  size(2) Largest target is 17
		 -> write@value(COMRAM[1]), command@value(COMRAM[1]), OledApi_printNum@s(COMRAM[17]), ?_OledApi_printf(COMRAM[1]), 
		 -> STR_2(CODE[5]), 

    send@p	PTR unsigned char  size(2) Largest target is 17
		 -> write@value(COMRAM[1]), command@value(COMRAM[1]), OledApi_printNum@s(COMRAM[17]), ?_OledApi_printf(COMRAM[1]), 
		 -> STR_2(CODE[5]), 

    writeStr@value	PTR const unsigned char  size(2) Largest target is 17
		 -> OledApi_printNum@s(COMRAM[17]), ?_OledApi_printf(COMRAM[1]), STR_2(CODE[5]), 

    OledApi_printStr@s	PTR const unsigned char  size(2) Largest target is 5
		 -> ?_OledApi_printf(COMRAM[1]), STR_2(CODE[5]), 

    OledApi_printf@s	PTR unsigned char  size(2) Largest target is 20
		 -> STR_3(CODE[12]), STR_1(CODE[20]), 

    OledApi_printf@list	PTR void [1] size(2) Largest target is 1
		 -> ?_OledApi_printf(COMRAM[1]), 

    OledApi_createChar@charmap	PTR unsigned char  size(2) Largest target is 8
		 -> ac(BANK0[8]), dc(BANK0[8]), 


Critical Paths under _main in COMRAM

    _main->_OledApi_printf
    _setup->_OledApi_printf
    _OledApi_printf->_OledApi_printNum
    _OledApi_printStr->_OledApi_setCursor
    _OledApi_setCursor->_command
    _OledApi_printSpec->_write
    _OledApi_printNum->___flge
    _writeStr->_send
    _exit->___funcs_on_exit
    ___funcs_on_exit->_call
    ___flsub->___fladd
    ___flge->___flsub
    _OledApi_init->_begin
    _begin->_OledApi_clear
    _OledApi_clear->_command
    _OledApi_home->_command
    _OledApi_createChar->_command
    _OledApi_createChar->_write
    _write->_send
    _command->_send
    _send->_SPI_Api_sendWord
    _SPI_Api_setSpiDevice->_DIGITAL_WRITE
    _SPI_Api_sendWord->_SPI_Api_sendBit
    _SPI_Api_sendBit->_DIGITAL_WRITE
    _SPI_Api_end->_DIGITAL_WRITE
    _SPI_Api_begin->_DIGITAL_WRITE

Critical Paths under _main in BANK0

    _main->_setup

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  149673
                                              2 BANK0      2     2      0
                      _OledApi_clear
                     _OledApi_printf
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                2     2      0   87298
                                              0 BANK0      2     2      0
                 _OledApi_createChar
                       _OledApi_init
                     _OledApi_printf
 ---------------------------------------------------------------------------------
 (2) _OledApi_printf                                      22    11     11   50117
                                             73 COMRAM    22    11     11
                   _OledApi_printNum
                  _OledApi_printSpec
                   _OledApi_printStr
                  _OledApi_setCursor
                           ___xxtofl
                               _exit
                              _write
 ---------------------------------------------------------------------------------
 (3) _OledApi_printStr                                     5     3      2   13361
                                             37 COMRAM     5     3      2
                  _OledApi_setCursor
                           _writeStr
 ---------------------------------------------------------------------------------
 (3) _OledApi_setCursor                                    4     3      1    6349
                                             33 COMRAM     4     3      1
                            _command
 ---------------------------------------------------------------------------------
 (3) _OledApi_printSpec                                    1     1      0    6826
                                             33 COMRAM     1     1      0
                               _exit
                              _write
 ---------------------------------------------------------------------------------
 (3) _OledApi_printNum                                    37    32      5   15560
                                             36 COMRAM    37    32      5
                            ___aldiv
                            ___almod
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                               _exit
                           _writeStr
 ---------------------------------------------------------------------------------
 (4) _writeStr                                             3     0      3    6758
                                             32 COMRAM     3     0      3
                               _send
 ---------------------------------------------------------------------------------
 (3) _exit                                                 2     0      2     653
                                             10 COMRAM     2     0      2
                              __Exit
                    ___funcs_on_exit
 ---------------------------------------------------------------------------------
 (4) ___funcs_on_exit                                      8     8      0      99
                                              2 COMRAM     8     8      0
                               _call *
 ---------------------------------------------------------------------------------
 (5) _call                                                 2     0      2      53
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) __Exit                                                2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     523
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    2737
                                             16 COMRAM     8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             16     8      8    2262
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    1744
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8     486
                                             24 COMRAM    12     4      8
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___almod                                             10     2      8     600
                                              0 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     604
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (2) _OledApi_init                                         1     1      0   24658
                                             36 COMRAM     1     1      0
                 _SPI_Api_initialize
                              _begin
 ---------------------------------------------------------------------------------
 (3) _begin                                                3     2      1   24592
                                             34 COMRAM     2     1      1
                      _OledApi_clear
                       _OledApi_home
                            _command
 ---------------------------------------------------------------------------------
 (4) _OledApi_clear                                        1     1      0   12258
                                             33 COMRAM     1     1      0
                       _OledApi_home
                            _command
 ---------------------------------------------------------------------------------
 (4) _OledApi_home                                         0     0      0    6129
                            _command
 ---------------------------------------------------------------------------------
 (3) _SPI_Api_initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OledApi_createChar                                   5     3      2   12523
                                             33 COMRAM     5     3      2
                            _command
                              _write
 ---------------------------------------------------------------------------------
 (3) _write                                                1     1      0    6129
                                             32 COMRAM     1     1      0
                               _send
 ---------------------------------------------------------------------------------
 (4) _command                                              1     1      0    6129
                                             32 COMRAM     1     1      0
                               _send
 ---------------------------------------------------------------------------------
 (4) _send                                                15    11      4    6106
                                             17 COMRAM    15    11      4
                      _SPI_Api_begin
                        _SPI_Api_end
                   _SPI_Api_sendWord
               _SPI_Api_setSpiDevice
 ---------------------------------------------------------------------------------
 (5) _SPI_Api_setSpiDevice                                 4     1      3    1450
                                              3 COMRAM     4     1      3
                      _DIGITAL_WRITE
 ---------------------------------------------------------------------------------
 (5) _SPI_Api_sendWord                                    12     8      4    1472
                                              5 COMRAM    12     8      4
                    _SPI_Api_sendBit
 ---------------------------------------------------------------------------------
 (6) _SPI_Api_sendBit                                      2     2      0    1306
                                              3 COMRAM     2     2      0
                      _DIGITAL_WRITE
 ---------------------------------------------------------------------------------
 (5) _SPI_Api_end                                          1     1      0    1284
                                              3 COMRAM     1     1      0
                      _DIGITAL_WRITE
 ---------------------------------------------------------------------------------
 (5) _SPI_Api_begin                                        1     1      0    1284
                                              3 COMRAM     1     1      0
                      _DIGITAL_WRITE
 ---------------------------------------------------------------------------------
 (6) _DIGITAL_WRITE                                        3     1      2    1284
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OledApi_clear
     _OledApi_home
       _command
         _send
           _SPI_Api_begin
             _DIGITAL_WRITE
           _SPI_Api_end
             _DIGITAL_WRITE
           _SPI_Api_sendWord
             _SPI_Api_sendBit
               _DIGITAL_WRITE
           _SPI_Api_setSpiDevice
             _DIGITAL_WRITE
     _command
       _send
         _SPI_Api_begin
           _DIGITAL_WRITE
         _SPI_Api_end
           _DIGITAL_WRITE
         _SPI_Api_sendWord
           _SPI_Api_sendBit
             _DIGITAL_WRITE
         _SPI_Api_setSpiDevice
           _DIGITAL_WRITE
   _OledApi_printf
     _OledApi_printNum
       ___aldiv
       ___almod
       ___flge
         ___flsub (ARG)
           ___fladd
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
       ___flsub
         ___fladd
         ___xxtofl (ARG)
       ___fltol
       ___xxtofl
       _exit
         __Exit
         ___funcs_on_exit
           _call *
       _writeStr
         _send
           _SPI_Api_begin
             _DIGITAL_WRITE
           _SPI_Api_end
             _DIGITAL_WRITE
           _SPI_Api_sendWord
             _SPI_Api_sendBit
               _DIGITAL_WRITE
           _SPI_Api_setSpiDevice
             _DIGITAL_WRITE
     _OledApi_printSpec
       _exit
         __Exit
         ___funcs_on_exit
           _call *
       _write
         _send
           _SPI_Api_begin
             _DIGITAL_WRITE
           _SPI_Api_end
             _DIGITAL_WRITE
           _SPI_Api_sendWord
             _SPI_Api_sendBit
               _DIGITAL_WRITE
           _SPI_Api_setSpiDevice
             _DIGITAL_WRITE
     _OledApi_printStr
       _OledApi_setCursor
         _command
           _send
             _SPI_Api_begin
               _DIGITAL_WRITE
             _SPI_Api_end
               _DIGITAL_WRITE
             _SPI_Api_sendWord
               _SPI_Api_sendBit
                 _DIGITAL_WRITE
             _SPI_Api_setSpiDevice
               _DIGITAL_WRITE
       _writeStr
         _send
           _SPI_Api_begin
             _DIGITAL_WRITE
           _SPI_Api_end
             _DIGITAL_WRITE
           _SPI_Api_sendWord
             _SPI_Api_sendBit
               _DIGITAL_WRITE
           _SPI_Api_setSpiDevice
             _DIGITAL_WRITE
     _OledApi_setCursor
       _command
         _send
           _SPI_Api_begin
             _DIGITAL_WRITE
           _SPI_Api_end
             _DIGITAL_WRITE
           _SPI_Api_sendWord
             _SPI_Api_sendBit
               _DIGITAL_WRITE
           _SPI_Api_setSpiDevice
             _DIGITAL_WRITE
     ___xxtofl
     _exit
       __Exit
       ___funcs_on_exit
         _call *
     _write
       _send
         _SPI_Api_begin
           _DIGITAL_WRITE
         _SPI_Api_end
           _DIGITAL_WRITE
         _SPI_Api_sendWord
           _SPI_Api_sendBit
             _DIGITAL_WRITE
         _SPI_Api_setSpiDevice
           _DIGITAL_WRITE
   _setup
     _OledApi_createChar
       _command
         _send
           _SPI_Api_begin
             _DIGITAL_WRITE
           _SPI_Api_end
             _DIGITAL_WRITE
           _SPI_Api_sendWord
             _SPI_Api_sendBit
               _DIGITAL_WRITE
           _SPI_Api_setSpiDevice
             _DIGITAL_WRITE
       _write
         _send
           _SPI_Api_begin
             _DIGITAL_WRITE
           _SPI_Api_end
             _DIGITAL_WRITE
           _SPI_Api_sendWord
             _SPI_Api_sendBit
               _DIGITAL_WRITE
           _SPI_Api_setSpiDevice
             _DIGITAL_WRITE
     _OledApi_init
       _SPI_Api_initialize
       _begin
         _OledApi_clear
           _OledApi_home
             _command
               _send
                 _SPI_Api_begin
                   _DIGITAL_WRITE
                 _SPI_Api_end
                   _DIGITAL_WRITE
                 _SPI_Api_sendWord
                   _SPI_Api_sendBit
                     _DIGITAL_WRITE
                 _SPI_Api_setSpiDevice
                   _DIGITAL_WRITE
           _command
             _send
               _SPI_Api_begin
                 _DIGITAL_WRITE
               _SPI_Api_end
                 _DIGITAL_WRITE
               _SPI_Api_sendWord
                 _SPI_Api_sendBit
                   _DIGITAL_WRITE
               _SPI_Api_setSpiDevice
                 _DIGITAL_WRITE
         _OledApi_home
           _command
             _send
               _SPI_Api_begin
                 _DIGITAL_WRITE
               _SPI_Api_end
                 _DIGITAL_WRITE
               _SPI_Api_sendWord
                 _SPI_Api_sendBit
                   _DIGITAL_WRITE
               _SPI_Api_setSpiDevice
                 _DIGITAL_WRITE
         _command
           _send
             _SPI_Api_begin
               _DIGITAL_WRITE
             _SPI_Api_end
               _DIGITAL_WRITE
             _SPI_Api_sendWord
               _SPI_Api_sendBit
                 _DIGITAL_WRITE
             _SPI_Api_setSpiDevice
               _DIGITAL_WRITE
     _OledApi_printf
       _OledApi_printNum
         ___aldiv
         ___almod
         ___flge
           ___flsub (ARG)
             ___fladd
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
         ___flsub
           ___fladd
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
         _exit
           __Exit
           ___funcs_on_exit
             _call *
         _writeStr
           _send
             _SPI_Api_begin
               _DIGITAL_WRITE
             _SPI_Api_end
               _DIGITAL_WRITE
             _SPI_Api_sendWord
               _SPI_Api_sendBit
                 _DIGITAL_WRITE
             _SPI_Api_setSpiDevice
               _DIGITAL_WRITE
       _OledApi_printSpec
         _exit
           __Exit
           ___funcs_on_exit
             _call *
         _write
           _send
             _SPI_Api_begin
               _DIGITAL_WRITE
             _SPI_Api_end
               _DIGITAL_WRITE
             _SPI_Api_sendWord
               _SPI_Api_sendBit
                 _DIGITAL_WRITE
             _SPI_Api_setSpiDevice
               _DIGITAL_WRITE
       _OledApi_printStr
         _OledApi_setCursor
           _command
             _send
               _SPI_Api_begin
                 _DIGITAL_WRITE
               _SPI_Api_end
                 _DIGITAL_WRITE
               _SPI_Api_sendWord
                 _SPI_Api_sendBit
                   _DIGITAL_WRITE
               _SPI_Api_setSpiDevice
                 _DIGITAL_WRITE
         _writeStr
           _send
             _SPI_Api_begin
               _DIGITAL_WRITE
             _SPI_Api_end
               _DIGITAL_WRITE
             _SPI_Api_sendWord
               _SPI_Api_sendBit
                 _DIGITAL_WRITE
             _SPI_Api_setSpiDevice
               _DIGITAL_WRITE
       _OledApi_setCursor
         _command
           _send
             _SPI_Api_begin
               _DIGITAL_WRITE
             _SPI_Api_end
               _DIGITAL_WRITE
             _SPI_Api_sendWord
               _SPI_Api_sendBit
                 _DIGITAL_WRITE
             _SPI_Api_setSpiDevice
               _DIGITAL_WRITE
       ___xxtofl
       _exit
         __Exit
         ___funcs_on_exit
           _call *
       _write
         _send
           _SPI_Api_begin
             _DIGITAL_WRITE
           _SPI_Api_end
             _DIGITAL_WRITE
           _SPI_Api_sendWord
             _SPI_Api_sendBit
               _DIGITAL_WRITE
           _SPI_Api_setSpiDevice
             _DIGITAL_WRITE

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      82       7       50.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      4      38       5       35.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     119      20        0.0%
DATA                 0      0     119       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Mar 26 02:24:12 2020

             DIGITAL_WRITE@pin 0001               DIGITAL_WRITE@val 0002                    _SSPSTATbits 000FC7  
                           l35 2386                             l45 2204                             l38 2068  
                           _ac 0084                             _dc 008C                    __CFG_BOR$ON 000000  
                  __CFG_BORV$3 000000                  writeStr@value 0021                   __CFG_CP0$OFF 000000  
                 __CFG_CP1$OFF 000000                   __CFG_CP2$OFF 000000                   __CFG_CP3$OFF 000000  
                  __CFG_LVP$ON 000000              DIGITAL_WRITE@port 0003                            l101 233E  
                          l110 243A                            l104 2170                            l107 23A6  
                          l205 14E0                            l117 22B8                            l213 1FE6  
                          l222 240E                            l216 23F8                            l321 23C4  
                          l226 1D8E                            l162 2364                            l219 23DE  
                          l324 2090                            l333 2314                            l341 1F4A  
                          l158 2126                            l182 16EC                            l327 20D8  
                          l328 20A2                            l337 22E6                            l329 20BA  
                          l443 19AC                            l357 21B8                            l456 1CA2  
                          l634 1BB6                            l629 1B70                            l901 0CE6  
                          l661 1AB2                            l909 0B30                            l918 0C00  
                          l934 21FE                            l919 0BEE                            l892 0A16  
                          l893 0A04                            l982 1110                            l894 09CA  
                          l985 0FA2                            l978 0DAC                            l995 10D2  
                          l987 101A                            l988 1008                 ?_SPI_Api_begin 0001  
                 __CFG_CPB$OFF 000000                   __CFG_CPD$OFF 000000                            tosl 000FFD  
                          wreg 000FE8                   ___flmul@aexp 0012                   ___flmul@bexp 0013  
                 ___flmul@sign 000D                   ___flmul@temp 0018                   ___flmul@prod 0014  
                 ___fltol@exp1 000A                   __CFG_WDT$OFF 000000                           l1022 18A0  
                         l1033 1838                           l1026 17DC                           l1042 2420  
                         l1019 1744                           l1045 243C                           l1070 2442  
                         l1062 1E72                           l2201 22BA                           l3001 20E0  
                         l2211 1CA6                           l3011 2106                           l3003 20EC  
                         l2141 2368                           l2205 22D4                           l2221 1CD4  
                         l3013 210A                           l2301 093C                           l3021 2000  
                         l2143 2378                           l2207 22E2                           l2151 218E  
                         l2231 1D34                           l2223 1CDC                           l2215 1CBC  
                         l2311 0950                           l2303 0940                           l3023 2030  
                         l3015 1FE8                           l2145 2380                           l2233 1D5A  
                         l2225 1CEC                           l2217 1CC0                           l2241 23E2  
                         l3009 20F4                           l2401 0BAE                           l2321 0964  
                         l2313 0954                           l2305 0944                           l3025 204C  
                         l3017 1FF0                           l2147 2174                           l2171 20D4  
                         l2163 208C                           l2155 206A                           l2235 1D6E  
                         l2227 1CFC                           l2219 1CD0                           l2243 2434  
                         l2411 0BE6                           l2403 0BB0                           l2331 09C2  
                         l2315 0958                           l2307 0948                           l2323 0968  
                         l2251 0844                           l3027 205A                           l3019 1FFA  
                         l3051 2200                           l2181 2310                           l2165 20B2  
                         l2157 2072                           l2237 1D72                           l2229 1D30  
                         l2501 1910                           l2421 0C64                           l2405 0BBE  
                         l2341 09F8                           l2333 09D8                           l2325 096C  
                         l2317 095C                           l2309 094C                           l2253 0854  
                         l2261 087E                           l2245 0828                           l3053 221A  
                         l2175 22E8                           l2191 1EEC                           l2159 2084  
                         l2239 1D8A                           l2511 195A                           l2503 1918  
                         l2431 0CAA                           l2415 0C10                           l2423 0C66  
                         l2407 0BC2                           l2351 0A48                           l2343 0A02  
                         l2335 09E4                           l2327 0996                           l2319 0960  
                         l2271 08AE                           l2263 088E                           l2255 0864  
                         l2247 0834                           l3223 167A                           l3055 221E  
                         l2193 1EF6                           l2185 1E74                           l2169 20C6  
                         l2521 198C                           l2513 196A                           l2505 1924  
                         l2441 0CD4                           l2433 0CB8                           l2425 0C76  
                         l2417 0C1C                           l2409 0BD0                           l2361 0A84  
                         l2353 0A58                           l2345 0A24                           l2337 09E8  
                         l2329 09B2                           l2281 08EE                           l2273 08BC  
                         l2265 0894                           l2257 0874                           l2249 0842  
                         l3057 2238                           l2179 2302                           l2195 1F24  
                         l2523 199C                           l2515 196C                           l2507 1932  
                         l2531 1BCA                           l2611 0E18                           l2603 0DE0  
                         l2443 0CD6                           l2435 0CBE                           l2427 0C86  
                         l2419 0C2A                           l2371 0ACA                           l2363 0A92  
                         l2355 0A66                           l2347 0A34                           l2339 09F6  
                         l2291 0928                           l2283 08F0                           l2275 08BE  
                         l2267 08A6                           l2259 0876                           l2451 1DF8  
                         l2197 1F2E                           l2189 1EB8                           l2461 2388  
                         l2517 1976                           l2509 193C                           l2541 1C12  
                         l2533 1BDA                           l2701 1AE2                           l2621 0E62  
                         l2613 0E30                           l2605 0DEC                           l2437 0CC0  
                         l2429 0CA6                           l2381 0B46                           l2373 0AFE  
                         l2365 0A94                           l2357 0A74                           l2293 092C  
                         l2277 08CE                           l2285 08F8                           l2269 08A8  
                         l2453 1E1A                           l2199 1F34                           l2463 238E  
                         l2519 197C                           l2551 1C62                           l2543 1C1A  
                         l2535 1BDE                           l2527 1BB8                           l2711 1B50  
                         l2703 1AF2                           l2631 0EB8                           l2623 0E72  
                         l2615 0E3C                           l2607 0DF6                           l2439 0CC6  
                         l2391 0B82                           l2383 0B56                           l2375 0B00  
                         l2367 0A9E                           l2359 0A80                           l2295 0930  
                         l2287 0908                           l2279 08DE                           l2455 1E46  
                         l2447 1D90                           l2471 22A4                           l2465 23A2  
                         l2553 1C6C                           l2545 1C26                           l2537 1BEC  
                         l2529 1BBC                           l2713 1B5E                           l2705 1B20  
                         l2641 0F5C                           l2633 0ED4                           l2625 0E7E  
                         l2617 0E48                           l2609 0E0C                           l2393 0B84  
                         l2377 0B10                           l2369 0AA4                           l2297 0934  
                         l2289 091A                           l2721 19AE                           l2801 1870  
                         l2457 1E56                           l2449 1D94                           l2481 23FA  
                         l2473 22AC                           l2475 23C8                           l2811 23A8  
                         l2491 18C8                           l2483 18A2                           l2547 1C34  
                         l2555 1C72                           l2539 1BFC                           l2715 1BAE  
                         l2707 1B30                           l2651 0FB2                           l2643 0F6A  
                         l2635 0EE0                           l2627 0E8E                           l2619 0E56  
                         l2571 0D14                           l2563 0CE8                           l2395 0B92  
                         l2387 0B6A                           l2379 0B20                           l2299 0938  
                         l2731 1A04                           l2723 19C4                           l2803 1880  
                         l2459 1E5E                           l2467 2288                           l2821 2146  
                         l2493 18D6                           l2485 18A6                           l2557 1C82  
                         l2549 1C52                           l2717 1BB4                           l2709 1B3E  
                         l2653 0FC0                           l2645 0F88                           l2637 0EFC  
                         l2629 0EA8                           l2581 0D50                           l2573 0D24  
                         l2565 0CF4                           l2397 0B9A                           l2389 0B74  
                         l2733 1A14                           l2805 188E                           l2477 2410  
                         l2901 1496                           l2469 2298                           l2815 23BC  
                         l2831 2162                           l2823 214C                           l2495 18E6  
                         l2487 18B4                           l2559 1C92                           l2663 102A  
                         l2671 1072                           l2655 0FC4                           l2647 0F92  
                         l2639 0F26                           l2591 0D86                           l2583 0D56  
                         l2575 0D34                           l2567 0D02                           l2399 0B9E  
                         l2743 1A3E                           l2735 1A18                           l2727 19D8  
                         l2807 1890                           l2479 2414                           l2903 14A8  
                         l2911 1F54                           l2833 2168                           l2825 2150  
                         l2817 2128                           l2921 2318                           l2497 18EA  
                         l2489 18C4                           l2681 10E6                           l2673 108C  
                         l2665 1036                           l2657 0FD2                           l2649 0FA0  
                         l2593 0D96                           l2585 0D64                           l2577 0D3A  
                         l2569 0D04                           l2761 1AA2                           l2753 1A66  
                         l2745 1A48                           l2737 1A26                           l2729 1A02  
                         l2905 14B4                           l2841 1112                           l2913 1F56  
                         l2827 2156                           l2819 213C                           l2931 2330  
                         l2923 231E                           l2499 18FA                           l2683 10F4  
                         l2675 10A0                           l2667 1044                           l2659 1000  
                         l2595 0D9C                           l2587 0D66                           l2579 0D4A  
                         l2755 1A72                           l2747 1A52                           l2771 1754  
                         l2907 14CA                           l2851 11A0                           l2843 111E  
                         l2835 2342                           l2915 1F92                           l2829 215E  
                         l2933 2334                           l2925 2322                           l2685 10F6  
                         l2677 10BA                           l2669 106E                           l2597 0DBC  
                         l2589 0D76                           l2693 21BA                           l2757 1A82  
                         l2781 1792                           l2773 176A                           l2765 16F0  
                         l2861 1234                           l2853 11D4                           l2845 1126  
                         l2837 2352                           l2917 1FA2                           l2909 1F4C  
                         l2941 150E                           l2927 2326                           l2679 10D6  
                         l2687 10FC                           l2599 0DCC                           l2695 21CA  
                         l2759 1A92                           l2791 181A                           l2783 17C4  
                         l2767 1700                           l2871 12F4                           l2863 1266  
                         l2855 11D8                           l2847 114A                           l2839 235E  
                         l2919 1FD6                           l2951 1568                           l2943 1520  
                         l2935 14E2                           l2929 232A                           l2689 1100  
                         l2793 1828                           l2785 17C6                           l2777 177E  
                         l2769 170E                           l2881 1398                           l2873 1306  
                         l2865 1272                           l2857 1200                           l2849 1194  
                         l2953 1580                           l2945 152C                           l2937 14E6  
                         l2699 1AB4                           l2795 1846                           l2787 17D2  
                         l2779 1786                           l2891 13EE                           l2883 13A8  
                         l2875 1312                           l2867 1278                           l2859 1224  
                         l2971 15E8                           l2963 15BA                           l2955 1588  
                         l2947 1530                           l2939 14F2                           l2797 1848  
                         l2789 180E                           l2893 13FA                           l2885 13BA  
                         l2877 134E                           l2869 12E4                           l2981 1636  
                         l2973 15F6                           l2965 15C8                           l2957 158E  
                         l2949 1538                           l2799 184C                           l2895 1436  
                         l2887 13C6                           l2879 1382                           l2991 16CC  
                         l2983 163A                           l2967 15DC                           l2959 15AE  
                         l2897 146A                           l2889 13DC                           l2977 1602  
                         l2985 1658                           l2993 16D0                           l2899 1488  
                         l2979 161C                           l2987 16A8                           l2989 16BC  
                         l2999 20DC                           STR_1 0801                           STR_2 0821  
                         STR_3 0815                           u2000 0BE6                           u2001 0BE2  
                         u2010 0BFC                           u2011 0BF8                           u2020 0C10  
                         u2021 0C0C                           u2030 0C2A                           u2110 1E46  
                         u2031 0C26                           u2111 1E42                           u2200 1BCA  
                         u2040 0C64                           u2120 1E72                           u2201 1BC6  
                         u2041 0C60                           u2121 1E6E                           u2210 1BEC  
                         u2050 0C76                           u2130 2298                           u2211 1BE8  
                         u2051 0C72                           u2131 2294                           u2140 18B4  
                         u2220 1C12                           u2300 0D76                           u2060 0C86  
                         u2108 1E06                           u2141 18B0                           u2221 1C0E  
                         u2301 0D72                           u2061 0C82                           u2109 1E1A  
                         u2150 18D6                           u2230 1C34                           u2310 0D86  
                         u2070 0CA6                           _LATB 000F8A                           u2151 18D2  
                         u2231 1C30                           u2311 0D82                           u2071 0CA2  
                         _LATC 000F8B                           u1600 1EB4                           u2160 1910  
                         u2240 1C52                           u2400 102A                           u2320 0DBC  
                         u2080 0CB8                           u1601 1EB0                           u2161 190C  
                         u2241 1C4E                           u2401 1026                           u2321 0DB8  
                         u2081 0CB4                           u1530 2378                           u2170 1932  
                         u2250 1C82                           u2410 1044                           u2330 0DCC  
                         u2090 0CD4                           u1531 2374                           u2171 192E  
                         u2251 1C7E                           u2411 1040                           u2331 0DC8  
                         u2091 0CD0                           u1540 218A                           u1620 1F24  
                         u1700 1D8A                           u2180 195A                           u2420 108C  
                         u2340 0F46                           u2260 0D02                           u2500 19C4  
                         u1541 2186                           u1621 1F20                           u1701 1D86  
                         u2181 1956                           u2421 1088                           u2261 0CFE  
                         u2501 19C0                           u1630 1F4A                           u1614 1ED0  
                         u1550 2084                           u2190 198C                           u2430 10BA  
                         u2350 0FA0                           u2270 0D14                           u1710 0842  
                         u2510 19F8                           u1631 1F46                           u1615 1ECA  
                         u1551 2080                           u2191 1988                           u2431 10B6  
                         u2351 0F9C                           u2271 0D10                           u1711 083E  
                         u1640 22D0                           u1560 20A2                           u2440 10F4  
                         u2360 0FC0                           u2280 0D24                           u1800 0996  
                         u1720 0854                           u2520 1A26                           u2600 17C0  
                         u1641 22CC                           u1561 209E                           u2441 10F0  
                         u2361 0FBC                           u2345 0F3C                           u2281 0D20  
                         u1801 0992                           u1721 0850                           u2521 1A22  
                         u2601 17BC                           u3057 222A                           u1570 20B2  
                         u1650 1CB8                           u2450 1AE2                           u2370 0FD2  
                         u2290 0D64                           u1810 09AE                           u1730 0864  
                         u2530 1A3A                           u2610 180A                           u1571 20AE  
                         u1651 1CB4                           u2451 1ADE                           u2371 0FCE  
                         u2291 0D60                           u1811 09A8                           u1731 0860  
                         u2531 1A36                           u2515 19EE                           u2611 1806  
                         u3067 203C                           u1580 22FE                           u1660 1CEC  
                         u2460 1B20                           u2380 1000                           u1900 0A92  
                         u1820 09B0                           u1740 08A6                           u2540 1A62  
                         u2620 1828                           u2700 1200                           u1581 22FA  
                         u1661 1CE8                           u3077 212E                           u2461 1B1C  
                         u2381 0FFC                           u1901 0A8E                           u1741 08A2  
                         u2541 1A5E                           u2621 1824                           u2701 11FC  
                         u1590 1E98                           u1670 1CFC                           u2470 1B3E  
                         u2390 1016                           u1910 0ACA                           u1830 09D8  
                         u1750 08BC                           u2550 1A82                           u2630 1838  
                         u2710 1234                           u1671 1CF8                           u3087 2394  
                         u2471 1B3A                           u2391 1012                           u1911 0AC6  
                         u1831 09D4                           u1751 08B8                           u2551 1A7E  
                         u2631 1834                           u2711 1230                           u2480 1B5E  
                         u1920 0B10                           u1840 09F6                           u1760 08CE  
                         u2560 1A92                           u2640 1846                           u2800 1496  
                         u2720 1266                           u2481 1B5A                           u1921 0B0C  
                         u1841 09F2                           u1761 08CA                           u2561 1A8E  
                         u2641 1842                           u2801 1492                           u2721 1262  
                         u1690 1D54                           u2490 1BAE                           u1930 0B46  
                         u1850 0A16                           u1770 08DE                           u2650 1880  
                         u2570 1700                           u2810 14A8                           u2730 12E4  
                         u1595 1E8E                           u2491 1BAA                           u1931 0B42  
                         u1851 0A12                           u1771 08DA                           u2651 187C  
                         u2571 16FC                           u2811 14A4                           u2731 12E0  
                         u1684 1D18                           u1940 0B56                           u1860 0A24  
                         u1780 091A                           u2660 188E                           u2580 170E  
                         u2740 1306                           u2820 1F82                           u2900 16EC  
                         u1685 1D12                           u1941 0B52                           u1861 0A20  
                         u1781 0916                           u2661 188A                           u2581 170A  
                         u2741 1302                           u2901 16E8                           u2910 2126  
                         u2670 23B8                           u1950 0B82                           u1870 0A34  
                         u1790 0928                           u2590 176A                           u2750 1398  
                         u2830 1F92                           u2911 2122                           u2671 23B4  
                         u1951 0B7E                           u1871 0A30                           u1791 0924  
                         u2591 1766                           u2751 1394                           u2831 1F8E  
                         u1960 0B92                           u1880 0A66                           u2760 13A8  
                         u2680 2352                           u2840 1FA2                           u1697 1D4A  
                         u1961 0B8E                           u1881 0A62                           u2761 13A4  
                         u2681 234E                           u2841 1F9E                           u1970 0BAE  
                         u1890 0A74                           u2770 13BA                           u2850 150E  
                         u1971 0BAA                           u1891 0A70                           u2771 13B6  
                         u2691 1118                           u2827 1F78                           u2851 150A  
                         u1980 0BBE                           u2780 13EE                           u2860 1520  
                         u1981 0BBA                           u2781 13EA                           u2861 151C  
                         u1990 0BD0                           u2790 1488                           u2870 161C  
                         u1991 0BCC                           u2791 1484                           u2871 1618  
                         u2880 1636                           u2881 1632                           u2890 16B8  
                         u2891 16B4                           _call 2442                           _head 0073  
                         _main 2200                           _exit 2410                           _send 1CA4  
                         fsr0h 000FEA                           _slot 0071                           indf0 000FEF  
                         fsr2h 000FDA                           fsr0l 000FE9                           indf2 000FDF  
                         fsr1l 000FE1                           fsr2l 000FD9         __size_of_OledApi_clear 0020  
                         prodh 000FF4                           prodl 000FF3                           start 0000  
          OledApi_createChar@i 0025                  __CFG_IESO$OFF 000000                  __CFG_MCLRE$ON 000000  
                 ___param_bank 000000      __size_of_OledApi_printNum 03D0                   command@value 0021  
    __size_of_OledApi_printStr 009C                  __CFG_PLLDIV$1 000000                 __CFG_CCP2MX$ON 000000  
                        ?_call 0001                  ___fltol@sign1 0009                __end_of___aldiv 19AE  
              __end_of___almod 1CA4                __end_of___fladd 0CE8                          ?_main 0001  
                        ?_exit 000B                          ?_send 0012                __end_of___flmul 1112  
              __end_of___flsub 2200                __end_of___fltol 1AB4                          _PORTC 000F82  
                __CFG_USBDIV$1 000000                          _TRISB 000F93                          _TRISC 000F94  
                __CFG_PWRT$OFF 000000                  __CFG_WRT0$OFF 000000                  __CFG_WRT1$OFF 000000  
                __CFG_WRT2$OFF 000000                  __CFG_WRT3$OFF 000000                 __CFG_EBTR0$OFF 000000  
               __CFG_FCMEN$OFF 000000                 __CFG_EBTR1$OFF 000000                 __CFG_EBTR2$OFF 000000  
                        __Exit 243C                 __CFG_EBTR3$OFF 000000                __end_of_command 23FA  
                __CFG_WRTB$OFF 000000                  __CFG_WRTC$OFF 000000                  __CFG_WRTD$OFF 000000  
                        _begin 2128                 __CFG_EBTRB$OFF 000000                          call@p 0001  
             ?_SPI_Api_sendBit 0001                          _setup 1FE8                  ?_OledApi_home 0001  
                ?_OledApi_init 0001                          _write 23C6                          pclath 000FFA  
                        tablat 000FF5                          send@p 001E                          status 000FD8  
      __size_of_OledApi_printf 020C                 __CFG_PBADEN$ON 000000            _OledApi_printf$1366 0057  
              __initialization 2244                   __end_of_call 2444                   __end_of_main 2244  
                 __end_of_exit 2422                   __end_of_send 1D90       __size_of___funcs_on_exit 00E4  
              ??_SPI_Api_begin 0004                         ??_call 0003                         ??_main 0096  
                       ??_exit 000D                  _OledApi_clear 2388                         ??_send 0016  
                __activetblptr 000002                         ?__Exit 0001                         ?_begin 0023  
               ??_OledApi_home 0022                 ??_OledApi_init 0025                         ?_setup 0001  
                       ?_write 0001       SPI_Api_setSpiDevice@mask 0007                   __displaymode 007A  
                       _SSPBUF 000FC9               __end_of___xxtofl 18A2                 __CFG_XINST$OFF 000000  
  __size_of_SPI_Api_initialize 001E                         ___flge 1AB4                      ??___aldiv 0009  
                    ??___almod 0009                      ??___fladd 0009                 __CFG_STVREN$ON 000000  
                    ??___flmul 0009                      ??___flsub 0019                      ??___fltol 0005  
          OledApi_init@_enable 0025                         clear_0 226A                         clear_1 2276  
            ?_SPI_Api_sendWord 0006                 ?_OledApi_clear 0001                      ??_command 0021  
           ??_SPI_Api_sendWord 000A                   __mediumconst 0000                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8                  send@head_sent 0020  
 __end_of_SPI_Api_setSpiDevice 20DA           ___funcs_on_exit@func 0007                     ___flge@ff1 0019  
                   ___flge@ff2 001D               __end_of_writeStr 2410                   ___xxtofl@arg 000B  
                 ___xxtofl@exp 000A                   ___xxtofl@val 0001                     __accesstop 0060  
      __end_of__initialization 227C                   ?_SPI_Api_end 0001                  ___rparam_used 000001  
                   ___fltol@f1 0001                 __pcstackCOMRAM 0001               _OledApi_printNum 1112  
        _OledApi_setCursor$290 0024                  __end_of__Exit 2442               _OledApi_printStr 1F4C  
                 __pidataBANK0 2422                  __end_of_begin 2172                  __end_of_setup 206A  
                __end_of_write 23E0              ??___funcs_on_exit 0003                        ??__Exit 0003  
                      ??_begin 0024                        ??_setup 0094                        ??_write 0021  
                   __pbssBANK0 0060                     __pbssBANK1 0100             SPI_Api_sendBit@val 0005  
               _OledApi_printf 14E2    __size_of_OledApi_createChar 004E         __size_of_DIGITAL_WRITE 0022  
    OledApi_printf@findingSpec 005B          OledApi_printNum@F2936 0060                    ___SPIconfig 0080  
                      ?___flge 0019           __end_of_OledApi_home 243C           __end_of_OledApi_init 2340  
              ??_OledApi_clear 0022                OledApi_printf@s 004A          OledApi_printNum@fract 0040  
        OledApi_printNum@whole 0044                      ?___xxtofl 0001           SPI_Api_sendWord@mask 000E  
  SPI_Api_setSpiDevice@_config 0004           SPI_Api_sendWord@word 0006                        _SSPCON1 000FC6  
       __end_of_OledApi_printf 16EE          OledApi_printStr@count 002A                __CFG_VREGEN$OFF 000000  
                      __Hparam 0000              OledApi_printf@dec 005D              OledApi_printNum@c 0048  
            OledApi_printNum@i 003E              OledApi_printNum@s 002D                        __Lparam 0000  
            OledApi_printStr@s 0026                        ___aldiv 18A2                __size_of___flge 0104  
                      ___almod 1BB8                        ___fladd 0828                        ___flmul 0CE8  
                      ___flsub 21BA                        ___fltol 19AE           _SPI_Api_setSpiDevice 206A  
    OledApi_createChar@charmap 0022                   __psmallconst 0800                        __pcinit 2244  
                      __ramtop 0800                        __ptext0 2200                        __ptext1 1FE8  
                      __ptext2 14E2                        __ptext3 1F4C                        __ptext4 2286  
                      __ptext5 2340                        __ptext6 1112                        __ptext7 23FA  
                      __ptext8 2410                        __ptext9 1D90                      ?_writeStr 0021  
                      _command 23E0                        _builtin 0100                     ??___xxtofl 0005  
                _DIGITAL_WRITE 2366               ___aldiv@dividend 0001                __displaycontrol 007B  
                      fp__call 0000                ?_OledApi_printf 004A           end_of_initialization 227C  
                __Lmediumconst 0000                        send@buf 0012       __size_of_SPI_Api_sendBit 0048  
         __size_of_SPI_Api_end 002E               ___aldiv@quotient 000B                        postdec1 000FE5  
                      postdec2 000FDD          ?_SPI_Api_setSpiDevice 0004                        postinc0 000FEE  
                      postinc2 000FDE                     ??_writeStr 0024          __end_of_SPI_Api_begin 2316  
               ?_DIGITAL_WRITE 0001                    ___fladd@grs 0010                  ___xxtofl@sign 0009  
     __end_of_OledApi_printNum 14E2       __end_of_OledApi_printStr 1FE8      __size_of_SPI_Api_sendWord 00D8  
                  ___flmul@grs 000E              _OledApi_setCursor 2286        OledApi@_displayfunction 0078  
   __end_of_SPI_Api_initialize 23C6             ?_OledApi_setCursor 0022          __size_of_OledApi_home 0008  
        __size_of_OledApi_init 002A              _OledApi_printSpec 2340                ___funcs_on_exit 1D90  
          ??_OledApi_setCursor 0023                 __end_of___flge 1BB8             ?_OledApi_printSpec 0001  
          ??_OledApi_printSpec 0022            start_initialization 2244      __end_of_OledApi_setCursor 22BA  
                 _OledApi_home 2434                   _OledApi_init 2316              _G_SPI_Api_u8Flags 0083  
          OledApi_printNum@dec 0029            OledApi_printNum@num 0025            OledApi_printf@count 005C  
    __end_of_OledApi_printSpec 2366         ??_SPI_Api_setSpiDevice 0007                       ??___flge 0021  
            ??_SPI_Api_sendBit 0004                    __pdataBANK0 0083               __CFG_LPT1OSC$OFF 000000  
              ??_DIGITAL_WRITE 0003            ___funcs_on_exit@arg 0009                      ___fladd@a 0005  
                    ___fladd@b 0001                      ___flmul@a 0005                      ___flmul@b 0001  
                    ___flsub@a 0015                      ___flsub@b 0011                  __pcstackBANK0 0094  
            __size_of___xxtofl 01B4     __end_of_OledApi_createChar 2128        __end_of___funcs_on_exit 1E74  
                     ?___aldiv 0001                       ?___almod 0001                       ?___fladd 0001  
                     ?___flmul 0001                       ?___flsub 0011                       ?___fltol 0001  
        __end_of_OledApi_clear 23A8               ___almod@dividend 0001                       ?_command 0001  
                    begin@cols 0001                      begin@rows 0023                    __smallconst 0800  
             ??_OledApi_printf 0055              __size_of_writeStr 0016                 __size_of__Exit 0006  
               __size_of_begin 004A     __size_of_OledApi_setCursor 0034                 __size_of_setup 0082  
               __size_of_write 001A               _SPI_Api_sendWord 1E74                ___aldiv@divisor 0005  
              ___aldiv@counter 0009            OledApi@_displaymode 0076         OledApi_printSpec@schar 0022  
   __size_of_OledApi_printSpec 0026                       _PIR1bits 000F9E               __CFG_WDTPS$32768 000000  
                   _ADCON1bits 000FC1                    writeStr@len 0023         OledApi@_displaycontrol 0077  
                    main@count 0079              ?_OledApi_printNum 0025              ?_OledApi_printStr 0026  
                    copy_data0 2258             ??_OledApi_printNum 002A             ??_OledApi_printStr 0028  
                ??_SPI_Api_end 0004               ?___funcs_on_exit 0001                       __Exit@ec 0001  
           OledApi_printf@args 004C             OledApi_printf@list 005E                       __Hrparam 0000  
                     __Lrparam 0000               __size_of___aldiv 010C               __size_of___almod 00EC  
             __size_of___fladd 04C0               __size_of___flmul 042A               __size_of___flsub 0046  
             __size_of___fltol 0106                       ___en_pin 0075                       ___config 007D  
           _SPI_Api_initialize 23A8               __size_of_command 001A                       ___xxtofl 16EE  
                    send@count 0014            ?_SPI_Api_initialize 0001                       __ptext10 2442  
                     __ptext11 243C                       __ptext20 2316                       __ptext12 16EE  
                     __ptext21 2128                       __ptext13 19AE                       __ptext30 1E74  
                     __ptext22 2388                       __ptext14 21BA                       __ptext31 2172  
                     __ptext23 2434                       __ptext15 0828                       __ptext32 22BA  
                     __ptext24 23A8                       __ptext16 0CE8                       __ptext33 22E8  
                     __ptext25 20DA                       __ptext17 1AB4                       __ptext34 2366  
                     __ptext26 23C6                       __ptext18 1BB8                       __ptext35 0000  
                     __ptext27 23E0                       __ptext19 18A2                       __ptext28 1CA4  
                     __ptext29 206A     OledApi_createChar@location 0024                ___almod@divisor 0005  
              ___almod@counter 0009           OledApi_setCursor@col 0023           OledApi_setCursor@row 0022  
                __size_of_call 0002                  __size_of_main 0044                  __size_of_exit 0012  
                __size_of_send 00EC                _SPI_Api_sendBit 2172         __size_of_SPI_Api_begin 002E  
         ??_SPI_Api_initialize 0001                     write@value 0021            __end_of_SPI_Api_end 22E8  
             __displayfunction 007C                       _writeStr 23FA          __CFG_CPUDIV$OSC1_PLL2 000000  
                     exit@code 000B                       send@mode 0019                       send@word 001A  
                   _OSCCONbits 000FD3  __size_of_SPI_Api_setSpiDevice 0070             _OledApi_createChar 20DA  
     __end_of_SPI_Api_sendWord 1F4C            __CFG_FOSC$INTOSC_EC 000000          __end_of_DIGITAL_WRITE 2388  
                _SPI_Api_begin 22E8            ?_OledApi_createChar 0022                   ___aldiv@sign 000A  
                  _SSPCON1bits 000FC6        __end_of_SPI_Api_sendBit 21BA                  ___fladd@signs 000D  
                 ___almod@sign 000A                   ___fladd@aexp 000E                   ___fladd@bexp 000F  
                  _SPI_Api_end 22BA           ??_OledApi_createChar 0024  
