

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Mar 22 01:47:31 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    53  0000                     
    54                           ; Version 2.10
    55                           ; Generated 31/07/2019 GMT
    56                           ; 
    57                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC18F2550 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88  0000                     
    89                           	psect	idataBANK0
    90  0023AE                     __pidataBANK0:
    91                           	opt callstack 0
    92                           
    93                           ;initializer for _ac
    94  0023AE  00                 	db	0
    95  0023AF  00                 	db	0
    96  0023B0  00                 	db	0
    97  0023B1  0A                 	db	10
    98  0023B2  15                 	db	21
    99  0023B3  00                 	db	0
   100  0023B4  00                 	db	0
   101  0023B5  00                 	db	0
   102                           
   103                           ;initializer for _dc
   104  0023B6  00                 	db	0
   105  0023B7  00                 	db	0
   106  0023B8  1F                 	db	31
   107  0023B9  00                 	db	0
   108  0023BA  00                 	db	0
   109  0023BB  1B                 	db	27
   110  0023BC  00                 	db	0
   111  0023BD  00                 	db	0
   112                           
   113                           	psect	nvBANK0
   114  000092                     __pnvBANK0:
   115                           	opt callstack 0
   116  000092                     OledApi@_enable_pin:
   117                           	opt callstack 0
   118  000092                     	ds	1
   119  0000                     _LATB	set	3978
   120  0000                     _TRISB	set	3987
   121  0000                     _LATC	set	3979
   122  0000                     _TRISC	set	3988
   123  0000                     _SSPSTATbits	set	4039
   124  0000                     _PIR1bits	set	3998
   125  0000                     _SSPBUF	set	4041
   126  0000                     _SSPCON1	set	4038
   127  0000                     _SSPCON1bits	set	4038
   128  0000                     _ADCON1bits	set	4033
   129  0000                     _OSCCONbits	set	4051
   130                           
   131                           	psect	smallconst
   132  000800                     __psmallconst:
   133                           	opt callstack 0
   134  000800  00                 	db	0
   135  000801                     STR_1:
   136  000801  48                 	db	72	;'H'
   137  000802  69                 	db	105	;'i'
   138  000803  21                 	db	33
   139  000804  20                 	db	32
   140  000805  49                 	db	73	;'I'
   141  000806  6E                 	db	110	;'n'
   142  000807  74                 	db	116	;'t'
   143  000808  3A                 	db	58	;':'
   144  000809  25                 	db	37
   145  00080A  6E                 	db	110	;'n'
   146  00080B  25                 	db	37
   147  00080C  32                 	db	50	;'2'
   148  00080D  66                 	db	102	;'f'
   149  00080E  20                 	db	32
   150  00080F  25                 	db	37
   151  000810  73                 	db	115	;'s'
   152  000811  20                 	db	32
   153  000812  25                 	db	37
   154  000813  63                 	db	99	;'c'
   155  000814  00                 	db	0
   156  000815                     STR_3:
   157  000815  53                 	db	83	;'S'
   158  000816  65                 	db	101	;'e'
   159  000817  63                 	db	99	;'c'
   160  000818  6F                 	db	111	;'o'
   161  000819  6E                 	db	110	;'n'
   162  00081A  64                 	db	100	;'d'
   163  00081B  73                 	db	115	;'s'
   164  00081C  3A                 	db	58	;':'
   165  00081D  20                 	db	32
   166  00081E  25                 	db	37
   167  00081F  64                 	db	100	;'d'
   168  000820  00                 	db	0
   169  000821                     STR_2:
   170  000821  50                 	db	80	;'P'
   171  000822  65                 	db	101	;'e'
   172  000823  77                 	db	119	;'w'
   173  000824  21                 	db	33
   174  000825  00                 	db	0
   175                           
   176                           ; #config settings
   177  000826  00                 	db	0	; dummy byte at the end
   178  0000                     
   179                           	psect	cinit
   180  00219A                     __pcinit:
   181                           	opt callstack 0
   182  00219A                     start_initialization:
   183                           	opt callstack 0
   184  00219A                     __initialization:
   185                           	opt callstack 0
   186                           
   187                           ; Initialize objects allocated to BANK0 (16 bytes)
   188                           ; load TBLPTR registers with __pidataBANK0
   189  00219A  0EAE               	movlw	low __pidataBANK0
   190  00219C  6EF6               	movwf	tblptrl,c
   191  00219E  0E23               	movlw	high __pidataBANK0
   192  0021A0  6EF7               	movwf	tblptrh,c
   193  0021A2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   194  0021A4  6EF8               	movwf	tblptru,c
   195  0021A6  EE00  F07E         	lfsr	0,__pdataBANK0
   196  0021AA  EE10 F010          	lfsr	1,16
   197  0021AE                     copy_data0:
   198  0021AE  0009               	tblrd		*+
   199  0021B0  CFF5 FFEE          	movff	tablat,postinc0
   200  0021B4  50E5               	movf	postdec1,w,c
   201  0021B6  50E1               	movf	fsr1l,w,c
   202  0021B8  E1FA               	bnz	copy_data0
   203                           
   204                           ; Clear objects allocated to BANK1 (130 bytes)
   205  0021BA  EE01  F000         	lfsr	0,__pbssBANK1
   206  0021BE  0E82               	movlw	130
   207  0021C0                     clear_0:
   208  0021C0  6AEE               	clrf	postinc0,c
   209  0021C2  06E8               	decf	wreg,f,c
   210  0021C4  E1FD               	bnz	clear_0
   211                           
   212                           ; Clear objects allocated to BANK0 (30 bytes)
   213  0021C6  EE00  F060         	lfsr	0,__pbssBANK0
   214  0021CA  0E1E               	movlw	30
   215  0021CC                     clear_1:
   216  0021CC  6AEE               	clrf	postinc0,c
   217  0021CE  06E8               	decf	wreg,f,c
   218  0021D0  E1FD               	bnz	clear_1
   219  0021D2                     end_of_initialization:
   220                           	opt callstack 0
   221  0021D2                     __end_of__initialization:
   222                           	opt callstack 0
   223  0021D2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   224  0021D4  6EF8               	movwf	tblptru,c
   225  0021D6  0100               	movlb	0
   226  0021D8  EFAB  F010         	goto	_main	;jump to C main() function
   227                           
   228                           	psect	bssBANK0
   229  000060                     __pbssBANK0:
   230                           	opt callstack 0
   231  000060                     	ds	17
   232  000071                     _slot:
   233                           	opt callstack 0
   234  000071                     	ds	2
   235  000073                     _head:
   236                           	opt callstack 0
   237  000073                     	ds	2
   238  000075                     ___en_pin:
   239                           	opt callstack 0
   240  000075                     	ds	1
   241  000076                     OledApi@_displaymode:
   242                           	opt callstack 0
   243  000076                     	ds	1
   244  000077                     OledApi@_displaycontrol:
   245                           	opt callstack 0
   246  000077                     	ds	1
   247  000078                     OledApi@_displayfunction:
   248                           	opt callstack 0
   249  000078                     	ds	1
   250  000079                     main@count:
   251                           	opt callstack 0
   252  000079                     	ds	1
   253  00007A                     	ds	1
   254  00007B                     	ds	1
   255  00007C                     	ds	1
   256  00007D                     	ds	1
   257                           
   258                           	psect	dataBANK0
   259  00007E                     __pdataBANK0:
   260                           	opt callstack 0
   261  00007E                     _ac:
   262                           	opt callstack 0
   263  00007E                     	ds	8
   264  000086                     _dc:
   265                           	opt callstack 0
   266  000086                     	ds	8
   267                           
   268                           	psect	bssBANK1
   269  000100                     __pbssBANK1:
   270                           	opt callstack 0
   271  000100                     _builtin:
   272                           	opt callstack 0
   273  000100                     	ds	130
   274                           
   275                           	psect	cstackBANK0
   276  00008E                     __pcstackBANK0:
   277                           	opt callstack 0
   278  00008E                     ??_setup:
   279                           
   280                           ; 1 bytes @ 0x0
   281  00008E                     	ds	2
   282  000090                     ??_main:
   283                           
   284                           ; 1 bytes @ 0x2
   285  000090                     	ds	2
   286                           
   287                           	psect	cstackCOMRAM
   288  000001                     __pcstackCOMRAM:
   289                           	opt callstack 0
   290  000001                     ?___fladd:
   291                           	opt callstack 0
   292  000001                     ?___flmul:
   293                           	opt callstack 0
   294  000001                     ?___aldiv:
   295                           	opt callstack 0
   296  000001                     ?___almod:
   297                           	opt callstack 0
   298  000001                     ?___fltol:
   299                           	opt callstack 0
   300  000001                     ?___xxtofl:
   301                           	opt callstack 0
   302  000001                     sendBit@b:
   303                           	opt callstack 0
   304  000001                     __Exit@ec:
   305                           	opt callstack 0
   306  000001                     call@p:
   307                           	opt callstack 0
   308  000001                     ___aldiv@dividend:
   309                           	opt callstack 0
   310  000001                     ___almod@dividend:
   311                           	opt callstack 0
   312  000001                     ___fltol@f1:
   313                           	opt callstack 0
   314  000001                     ___fladd@b:
   315                           	opt callstack 0
   316  000001                     ___flmul@b:
   317                           	opt callstack 0
   318  000001                     ___xxtofl@val:
   319                           	opt callstack 0
   320                           
   321                           ; 4 bytes @ 0x0
   322  000001                     	ds	1
   323  000002                     ?_recieve24:
   324                           	opt callstack 0
   325  000002                     ADC_Api@command@_code:
   326                           	opt callstack 0
   327  000002                     send@buf:
   328                           	opt callstack 0
   329                           
   330                           ; 2 bytes @ 0x1
   331  000002                     	ds	1
   332  000003                     ??___funcs_on_exit:
   333  000003                     command8@_code:
   334                           	opt callstack 0
   335  000003                     command24@_code:
   336                           	opt callstack 0
   337                           
   338                           ; 3 bytes @ 0x2
   339  000003                     	ds	1
   340  000004                     send@count:
   341                           	opt callstack 0
   342                           
   343                           ; 2 bytes @ 0x3
   344  000004                     	ds	1
   345  000005                     ??_recieve24:
   346  000005                     ??___fltol:
   347  000005                     ??___xxtofl:
   348  000005                     ___aldiv@divisor:
   349                           	opt callstack 0
   350  000005                     ___almod@divisor:
   351                           	opt callstack 0
   352  000005                     ___fladd@a:
   353                           	opt callstack 0
   354  000005                     ___flmul@a:
   355                           	opt callstack 0
   356                           
   357                           ; 4 bytes @ 0x4
   358  000005                     	ds	1
   359  000006                     send@mode:
   360                           	opt callstack 0
   361  000006                     command24@i:
   362                           	opt callstack 0
   363                           
   364                           ; 2 bytes @ 0x5
   365  000006                     	ds	1
   366  000007                     send@p:
   367                           	opt callstack 0
   368  000007                     ___funcs_on_exit@func:
   369                           	opt callstack 0
   370                           
   371                           ; 2 bytes @ 0x6
   372  000007                     	ds	1
   373  000008                     recieve24@code:
   374                           	opt callstack 0
   375                           
   376                           ; 3 bytes @ 0x7
   377  000008                     	ds	1
   378  000009                     ??___fladd:
   379  000009                     ??___flmul:
   380  000009                     send@head_sent:
   381                           	opt callstack 0
   382  000009                     ___aldiv@counter:
   383                           	opt callstack 0
   384  000009                     ___almod@counter:
   385                           	opt callstack 0
   386  000009                     ___fltol@sign1:
   387                           	opt callstack 0
   388  000009                     ___xxtofl@sign:
   389                           	opt callstack 0
   390  000009                     ___funcs_on_exit@arg:
   391                           	opt callstack 0
   392                           
   393                           ; 2 bytes @ 0x8
   394  000009                     	ds	1
   395  00000A                     send@mask:
   396                           	opt callstack 0
   397  00000A                     ___aldiv@sign:
   398                           	opt callstack 0
   399  00000A                     ___almod@sign:
   400                           	opt callstack 0
   401  00000A                     ___fltol@exp1:
   402                           	opt callstack 0
   403  00000A                     ___xxtofl@exp:
   404                           	opt callstack 0
   405                           
   406                           ; 1 bytes @ 0x9
   407  00000A                     	ds	1
   408  00000B                     command@value:
   409                           	opt callstack 0
   410  00000B                     write@value:
   411                           	opt callstack 0
   412  00000B                     writeStr@value:
   413                           	opt callstack 0
   414  00000B                     recieve24@i:
   415                           	opt callstack 0
   416  00000B                     exit@code:
   417                           	opt callstack 0
   418  00000B                     ___aldiv@quotient:
   419                           	opt callstack 0
   420  00000B                     ___xxtofl@arg:
   421                           	opt callstack 0
   422                           
   423                           ; 4 bytes @ 0xA
   424  00000B                     	ds	1
   425  00000C                     ??_OledApi_clear:
   426  00000C                     OledApi_setCursor@row:
   427                           	opt callstack 0
   428  00000C                     OledApi_createChar@charmap:
   429                           	opt callstack 0
   430                           
   431                           ; 2 bytes @ 0xB
   432  00000C                     	ds	1
   433  00000D                     ??_ADC_Api_init:
   434  00000D                     begin@rows:
   435                           	opt callstack 0
   436  00000D                     OledApi_setCursor@col:
   437                           	opt callstack 0
   438  00000D                     OledApi_printSpec@schar:
   439                           	opt callstack 0
   440  00000D                     writeStr@len:
   441                           	opt callstack 0
   442  00000D                     ___fladd@signs:
   443                           	opt callstack 0
   444  00000D                     ___flmul@sign:
   445                           	opt callstack 0
   446                           
   447                           ; 1 bytes @ 0xC
   448  00000D                     	ds	1
   449  00000E                     ??_begin:
   450  00000E                     OledApi_createChar@location:
   451                           	opt callstack 0
   452  00000E                     ___fladd@aexp:
   453                           	opt callstack 0
   454  00000E                     _OledApi_setCursor$266:
   455                           	opt callstack 0
   456  00000E                     ___flmul@grs:
   457                           	opt callstack 0
   458                           
   459                           ; 4 bytes @ 0xD
   460  00000E                     	ds	1
   461  00000F                     ___fladd@bexp:
   462                           	opt callstack 0
   463  00000F                     OledApi_init@enable:
   464                           	opt callstack 0
   465  00000F                     OledApi_createChar@i:
   466                           	opt callstack 0
   467                           
   468                           ; 2 bytes @ 0xE
   469  00000F                     	ds	1
   470  000010                     ___fladd@grs:
   471                           	opt callstack 0
   472  000010                     OledApi_printStr@s:
   473                           	opt callstack 0
   474                           
   475                           ; 2 bytes @ 0xF
   476  000010                     	ds	1
   477  000011                     ?___flsub:
   478                           	opt callstack 0
   479  000011                     ___flsub@b:
   480                           	opt callstack 0
   481                           
   482                           ; 4 bytes @ 0x10
   483  000011                     	ds	1
   484  000012                     ??_OledApi_printStr:
   485  000012                     ADC_Api_init@_en_pin:
   486                           	opt callstack 0
   487  000012                     ___flmul@aexp:
   488                           	opt callstack 0
   489                           
   490                           ; 1 bytes @ 0x11
   491  000012                     	ds	1
   492  000013                     ___flmul@bexp:
   493                           	opt callstack 0
   494  000013                     ADC_Api_init@i:
   495                           	opt callstack 0
   496                           
   497                           ; 2 bytes @ 0x12
   498  000013                     	ds	1
   499  000014                     OledApi_printStr@count:
   500                           	opt callstack 0
   501  000014                     ___flmul@prod:
   502                           	opt callstack 0
   503                           
   504                           ; 4 bytes @ 0x13
   505  000014                     	ds	1
   506  000015                     ___flsub@a:
   507                           	opt callstack 0
   508                           
   509                           ; 4 bytes @ 0x14
   510  000015                     	ds	3
   511  000018                     ___flmul@temp:
   512                           	opt callstack 0
   513                           
   514                           ; 2 bytes @ 0x17
   515  000018                     	ds	1
   516  000019                     ___flge@ff1:
   517                           	opt callstack 0
   518                           
   519                           ; 4 bytes @ 0x18
   520  000019                     	ds	4
   521  00001D                     ___flge@ff2:
   522                           	opt callstack 0
   523                           
   524                           ; 4 bytes @ 0x1C
   525  00001D                     	ds	4
   526  000021                     ??___flge:
   527                           
   528                           ; 1 bytes @ 0x20
   529  000021                     	ds	4
   530  000025                     OledApi_printNum@num:
   531                           	opt callstack 0
   532                           
   533                           ; 4 bytes @ 0x24
   534  000025                     	ds	4
   535  000029                     OledApi_printNum@dec:
   536                           	opt callstack 0
   537                           
   538                           ; 1 bytes @ 0x28
   539  000029                     	ds	1
   540  00002A                     ??_OledApi_printNum:
   541                           
   542                           ; 1 bytes @ 0x29
   543  00002A                     	ds	3
   544  00002D                     OledApi_printNum@s:
   545                           	opt callstack 0
   546                           
   547                           ; 17 bytes @ 0x2C
   548  00002D                     	ds	17
   549  00003E                     OledApi_printNum@i:
   550                           	opt callstack 0
   551                           
   552                           ; 2 bytes @ 0x3D
   553  00003E                     	ds	2
   554  000040                     OledApi_printNum@fract:
   555                           	opt callstack 0
   556                           
   557                           ; 4 bytes @ 0x3F
   558  000040                     	ds	4
   559  000044                     OledApi_printNum@whole:
   560                           	opt callstack 0
   561                           
   562                           ; 4 bytes @ 0x43
   563  000044                     	ds	4
   564  000048                     OledApi_printNum@c:
   565                           	opt callstack 0
   566                           
   567                           ; 2 bytes @ 0x47
   568  000048                     	ds	2
   569  00004A                     ?_OledApi_printf:
   570                           	opt callstack 0
   571  00004A                     OledApi_printf@s:
   572                           	opt callstack 0
   573                           
   574                           ; 2 bytes @ 0x49
   575  00004A                     	ds	2
   576  00004C                     OledApi_printf@args:
   577                           	opt callstack 0
   578                           
   579                           ; 1 bytes @ 0x4B
   580  00004C                     	ds	9
   581  000055                     ??_OledApi_printf:
   582                           
   583                           ; 1 bytes @ 0x54
   584  000055                     	ds	2
   585  000057                     _OledApi_printf$1292:
   586                           	opt callstack 0
   587                           
   588                           ; 4 bytes @ 0x56
   589  000057                     	ds	4
   590  00005B                     OledApi_printf@findingSpec:
   591                           	opt callstack 0
   592                           
   593                           ; 1 bytes @ 0x5A
   594  00005B                     	ds	1
   595  00005C                     OledApi_printf@count:
   596                           	opt callstack 0
   597                           
   598                           ; 1 bytes @ 0x5B
   599  00005C                     	ds	1
   600  00005D                     OledApi_printf@dec:
   601                           	opt callstack 0
   602                           
   603                           ; 1 bytes @ 0x5C
   604  00005D                     	ds	1
   605  00005E                     OledApi_printf@list:
   606                           	opt callstack 0
   607                           
   608                           ; 2 bytes @ 0x5D
   609  00005E                     	ds	2
   610                           
   611 ;;
   612 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   613 ;;
   614 ;; *************** function _main *****************
   615 ;; Defined at:
   616 ;;		line 48 in file "main.c"
   617 ;; Parameters:    Size  Location     Type
   618 ;;		None
   619 ;; Auto vars:     Size  Location     Type
   620 ;;		None
   621 ;; Return value:  Size  Location     Type
   622 ;;                  1    wreg      void 
   623 ;; Registers used:
   624 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   625 ;; Tracked objects:
   626 ;;		On entry : 0/0
   627 ;;		On exit  : 0/0
   628 ;;		Unchanged: 0/0
   629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   630 ;;      Params:         0       0       0       0       0       0       0       0       0
   631 ;;      Locals:         0       0       0       0       0       0       0       0       0
   632 ;;      Temps:          0       2       0       0       0       0       0       0       0
   633 ;;      Totals:         0       2       0       0       0       0       0       0       0
   634 ;;Total ram usage:        2 bytes
   635 ;; Hardware stack levels required when called:    8
   636 ;; This function calls:
   637 ;;		_OledApi_clear
   638 ;;		_OledApi_printf
   639 ;;		_setup
   640 ;; This function is called by:
   641 ;;		Startup code after reset
   642 ;; This function uses a non-reentrant model
   643 ;;
   644                           
   645                           	psect	text0
   646  002156                     __ptext0:
   647                           	opt callstack 0
   648  002156                     _main:
   649                           	opt callstack 23
   650  002156                     
   651                           ;main.c: 50:     setup();
   652  002156  ECC9  F00F         	call	_setup	;wreg free
   653  00215A                     l42:
   654                           
   655                           ;main.c: 54:         OledApi_printf("Seconds: %d", 1, (int)count++);
   656  00215A  0E15               	movlw	low STR_3
   657  00215C  6E4A               	movwf	OledApi_printf@s^0,c
   658  00215E  0E08               	movlw	high STR_3
   659  002160  6E4B               	movwf	(OledApi_printf@s+1)^0,c
   660  002162  0E01               	movlw	1
   661  002164  6E4C               	movwf	OledApi_printf@args^0,c
   662  002166  C079  F04D         	movff	main@count,?_OledApi_printf+3
   663  00216A  6A4E               	clrf	(?_OledApi_printf+4)^0,c
   664  00216C  EC71  F00A         	call	_OledApi_printf	;wreg free
   665  002170  0100               	movlb	0	; () banked
   666  002172  2B79               	incf	main@count& (0+255),f,b
   667  002174                     
   668                           ; BSR set to: 0
   669                           ;main.c: 55:         _delay((unsigned long)((1000)*(8000000/4000.0)));
   670  002174  0E0B               	movlw	11
   671  002176  0100               	movlb	0	; () banked
   672  002178  6F91               	movwf	(??_main+1)& (0+255),b
   673  00217A  0E26               	movlw	38
   674  00217C  6F90               	movwf	??_main& (0+255),b
   675  00217E  0E5D               	movlw	93
   676  002180                     u2717:
   677  002180  2EE8               	decfsz	wreg,f,c
   678  002182  D7FE               	bra	u2717
   679  002184  2F90               	decfsz	??_main& (0+255),f,b
   680  002186  D7FC               	bra	u2717
   681  002188  2F91               	decfsz	(??_main+1)& (0+255),f,b
   682  00218A  D7FA               	bra	u2717
   683  00218C  D000               	nop2	
   684  00218E                     
   685                           ;main.c: 56:         OledApi_clear();
   686  00218E  EC71  F011         	call	_OledApi_clear	;wreg free
   687  002192  EFAD  F010         	goto	l42
   688  002196  EF00  F000         	goto	start
   689  00219A                     __end_of_main:
   690                           	opt callstack 0
   691                           
   692 ;; *************** function _setup *****************
   693 ;; Defined at:
   694 ;;		line 33 in file "main.c"
   695 ;; Parameters:    Size  Location     Type
   696 ;;		None
   697 ;; Auto vars:     Size  Location     Type
   698 ;;		None
   699 ;; Return value:  Size  Location     Type
   700 ;;                  1    wreg      void 
   701 ;; Registers used:
   702 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   703 ;; Tracked objects:
   704 ;;		On entry : 0/0
   705 ;;		On exit  : 0/0
   706 ;;		Unchanged: 0/0
   707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   708 ;;      Params:         0       0       0       0       0       0       0       0       0
   709 ;;      Locals:         0       0       0       0       0       0       0       0       0
   710 ;;      Temps:          0       2       0       0       0       0       0       0       0
   711 ;;      Totals:         0       2       0       0       0       0       0       0       0
   712 ;;Total ram usage:        2 bytes
   713 ;; Hardware stack levels used:    1
   714 ;; Hardware stack levels required when called:    7
   715 ;; This function calls:
   716 ;;		_ADC_Api_init
   717 ;;		_OledApi_createChar
   718 ;;		_OledApi_init
   719 ;;		_OledApi_printf
   720 ;; This function is called by:
   721 ;;		_main
   722 ;; This function uses a non-reentrant model
   723 ;;
   724                           
   725                           	psect	text1
   726  001F92                     __ptext1:
   727                           	opt callstack 0
   728  001F92                     _setup:
   729                           	opt callstack 23
   730  001F92                     
   731                           ;main.c: 35:     OSCCONbits.IRCF = 111;
   732  001F92  0E70               	movlw	112
   733  001F94  12D3               	iorwf	211,f,c	;volatile
   734                           
   735                           ;main.c: 37:     ADCON1bits.PCFG = 0b1111;
   736  001F96  0E0F               	movlw	15
   737  001F98  12C1               	iorwf	193,f,c	;volatile
   738  001F9A                     
   739                           ;main.c: 38:     SSPCON1bits.SSPEN = 1;
   740  001F9A  8AC6               	bsf	198,5,c	;volatile
   741                           
   742                           ;main.c: 39:     SSPCON1bits.SSPM = 0b0010;
   743  001F9C  50C6               	movf	198,w,c	;volatile
   744  001F9E  0BF0               	andlw	-16
   745  001FA0  0902               	iorlw	2
   746  001FA2  6EC6               	movwf	198,c	;volatile
   747  001FA4                     
   748                           ;main.c: 40:     OledApi_init(0b1000000);
   749  001FA4  0E00               	movlw	0
   750  001FA6  6E10               	movwf	(OledApi_init@enable+1)^0,c
   751  001FA8  0E40               	movlw	64
   752  001FAA  6E0F               	movwf	OledApi_init@enable^0,c
   753  001FAC  EC5E  F011         	call	_OledApi_init	;wreg free
   754  001FB0                     
   755                           ;main.c: 41:     ADC_Api_init(0b100);
   756  001FB0  0E04               	movlw	4
   757  001FB2  EC2A  F00F         	call	_ADC_Api_init
   758  001FB6                     
   759                           ;main.c: 42:     OledApi_printf("Hi! Int:%n%2f %s %c", 3, 12.6, "Pew!", 0);
   760  001FB6  0E01               	movlw	low STR_1
   761  001FB8  6E4A               	movwf	OledApi_printf@s^0,c
   762  001FBA  0E08               	movlw	high STR_1
   763  001FBC  6E4B               	movwf	(OledApi_printf@s+1)^0,c
   764  001FBE  0E03               	movlw	3
   765  001FC0  6E4C               	movwf	OledApi_printf@args^0,c
   766  001FC2  0E9A               	movlw	154
   767  001FC4  6E4D               	movwf	(?_OledApi_printf+3)^0,c
   768  001FC6  0E99               	movlw	153
   769  001FC8  6E4E               	movwf	(?_OledApi_printf+4)^0,c
   770  001FCA  0E49               	movlw	73
   771  001FCC  6E4F               	movwf	(?_OledApi_printf+5)^0,c
   772  001FCE  0E41               	movlw	65
   773  001FD0  6E50               	movwf	(?_OledApi_printf+6)^0,c
   774  001FD2  0E21               	movlw	low STR_2
   775  001FD4  6E51               	movwf	(?_OledApi_printf+7)^0,c
   776  001FD6  0E08               	movlw	high STR_2
   777  001FD8  6E52               	movwf	(?_OledApi_printf+8)^0,c
   778  001FDA  0E00               	movlw	0
   779  001FDC  6E54               	movwf	(?_OledApi_printf+10)^0,c
   780  001FDE  0E00               	movlw	0
   781  001FE0  6E53               	movwf	(?_OledApi_printf+9)^0,c
   782  001FE2  EC71  F00A         	call	_OledApi_printf	;wreg free
   783  001FE6                     
   784                           ;main.c: 43:     _delaywdt((unsigned long)((2000)*(8000000/4000.0)));
   785  001FE6  0E10               	movlw	16
   786  001FE8  0100               	movlb	0	; () banked
   787  001FEA  6F8F               	movwf	(??_setup+1)& (0+255),b
   788  001FEC  0E3B               	movlw	59
   789  001FEE  6F8E               	movwf	??_setup& (0+255),b
   790  001FF0  0E99               	movlw	153
   791  001FF2                     u2727:
   792  001FF2  0004               	clrwdt	
   793  001FF4  2EE8               	decfsz	wreg,f,c
   794  001FF6  D7FD               	bra	u2727
   795  001FF8  2F8E               	decfsz	??_setup& (0+255),f,b
   796  001FFA  D7FB               	bra	u2727
   797  001FFC  2F8F               	decfsz	(??_setup+1)& (0+255),f,b
   798  001FFE  D7F9               	bra	u2727
   799  002000  0004               	clrwdt	
   800  002002                     
   801                           ;main.c: 44:     OledApi_createChar(0, dc);
   802  002002  0E86               	movlw	low _dc
   803  002004  6E0C               	movwf	OledApi_createChar@charmap^0,c
   804  002006  0E00               	movlw	high _dc
   805  002008  6E0D               	movwf	(OledApi_createChar@charmap+1)^0,c
   806  00200A  0E00               	movlw	0
   807  00200C  EC3C  F010         	call	_OledApi_createChar
   808  002010                     
   809                           ;main.c: 45:     OledApi_createChar(1, ac);
   810  002010  0E7E               	movlw	low _ac
   811  002012  6E0C               	movwf	OledApi_createChar@charmap^0,c
   812  002014  0E00               	movlw	high _ac
   813  002016  6E0D               	movwf	(OledApi_createChar@charmap+1)^0,c
   814  002018  0E01               	movlw	1
   815  00201A  EC3C  F010         	call	_OledApi_createChar
   816  00201E  0012               	return		;funcret
   817  002020                     __end_of_setup:
   818                           	opt callstack 0
   819                           
   820 ;; *************** function _OledApi_printf *****************
   821 ;; Defined at:
   822 ;;		line 175 in file "OledApi.c"
   823 ;; Parameters:    Size  Location     Type
   824 ;;  s               2   73[COMRAM] PTR unsigned char 
   825 ;;		 -> STR_3(12), STR_1(20), 
   826 ;;  args            1   75[COMRAM] unsigned char 
   827 ;; Auto vars:     Size  Location     Type
   828 ;;  dec             1   92[COMRAM] unsigned char 
   829 ;;  findingSpec     1   90[COMRAM] unsigned char 
   830 ;;  list            2   93[COMRAM] PTR void [1]
   831 ;;		 -> ?_OledApi_printf(1), 
   832 ;;  count           1   91[COMRAM] unsigned char 
   833 ;; Return value:  Size  Location     Type
   834 ;;                  1    wreg      void 
   835 ;; Registers used:
   836 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   837 ;; Tracked objects:
   838 ;;		On entry : 0/0
   839 ;;		On exit  : 0/0
   840 ;;		Unchanged: 0/0
   841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   842 ;;      Params:        11       0       0       0       0       0       0       0       0
   843 ;;      Locals:         9       0       0       0       0       0       0       0       0
   844 ;;      Temps:          2       0       0       0       0       0       0       0       0
   845 ;;      Totals:        22       0       0       0       0       0       0       0       0
   846 ;;Total ram usage:       22 bytes
   847 ;; Hardware stack levels used:    1
   848 ;; Hardware stack levels required when called:    5
   849 ;; This function calls:
   850 ;;		_OledApi_printNum
   851 ;;		_OledApi_printSpec
   852 ;;		_OledApi_printStr
   853 ;;		_OledApi_setCursor
   854 ;;		___xxtofl
   855 ;;		_exit
   856 ;;		_write
   857 ;; This function is called by:
   858 ;;		_setup
   859 ;;		_main
   860 ;; This function uses a non-reentrant model
   861 ;;
   862                           
   863                           	psect	text2
   864  0014E2                     __ptext2:
   865                           	opt callstack 0
   866  0014E2                     _OledApi_printf:
   867                           	opt callstack 24
   868  0014E2                     
   869                           ;OledApi.c: 175: void OledApi_printf(char* s, uint8_t args, ...);OledApi.c: 176: {;OledA
      +                          pi.c: 177:     uint8_t count = 0;
   870  0014E2  0E00               	movlw	0
   871  0014E4  6E5C               	movwf	OledApi_printf@count^0,c
   872  0014E6                     
   873                           ;OledApi.c: 178:     va_list list;;OledApi.c: 179:     *list = __va_start();
   874  0014E6  0E4D               	movlw	low (?_OledApi_printf+3)
   875  0014E8  6E5E               	movwf	OledApi_printf@list^0,c
   876  0014EA  0E00               	movlw	high (?_OledApi_printf+3)
   877  0014EC  6E5F               	movwf	(OledApi_printf@list+1)^0,c
   878                           
   879                           ;OledApi.c: 181:     while(*s)
   880  0014EE  EF68  F00B         	goto	l2878
   881  0014F2                     l2824:
   882                           
   883                           ;OledApi.c: 182:     {;OledApi.c: 183:         if(*s == '%')
   884  0014F2  C04A  FFF6         	movff	OledApi_printf@s,tblptrl
   885  0014F6  C04B  FFF7         	movff	OledApi_printf@s+1,tblptrh
   886  0014FA                     	if	0	;tblptru may be non-zero
   887  0014FA                     	endif
   888  0014FA                     	if	0	;tblptru may be non-zero
   889  0014FA                     	endif
   890  0014FA  0008               	tblrd		*
   891  0014FC  50F5               	movf	tablat,w,c
   892  0014FE  0A25               	xorlw	37
   893  001500  A4D8               	btfss	status,2,c
   894  001502  EF85  F00A         	goto	u2641
   895  001506  EF87  F00A         	goto	u2640
   896  00150A                     u2641:
   897  00150A  EF5E  F00B         	goto	l2874
   898  00150E                     u2640:
   899  00150E                     
   900                           ;OledApi.c: 184:         {;OledApi.c: 186:             if(count == args)
   901  00150E  504C               	movf	OledApi_printf@args^0,w,c
   902  001510  185C               	xorwf	OledApi_printf@count^0,w,c
   903  001512  A4D8               	btfss	status,2,c
   904  001514  EF8E  F00A         	goto	u2651
   905  001518  EF90  F00A         	goto	u2650
   906  00151C                     u2651:
   907  00151C  EF96  F00A         	goto	l2830
   908  001520                     u2650:
   909  001520                     
   910                           ;OledApi.c: 187:             {;OledApi.c: 188:                 exit(1);
   911  001520  0E00               	movlw	0
   912  001522  6E0C               	movwf	(exit@code+1)^0,c
   913  001524  0E01               	movlw	1
   914  001526  6E0B               	movwf	exit@code^0,c
   915  001528  ECCE  F011         	call	_exit	;wreg free
   916  00152C                     l2830:
   917                           
   918                           ;OledApi.c: 190:             uint8_t dec = 0, findingSpec;
   919  00152C  0E00               	movlw	0
   920  00152E  6E5D               	movwf	OledApi_printf@dec^0,c
   921  001530                     l2832:
   922                           
   923                           ;OledApi.c: 192:             {;OledApi.c: 193:                 findingSpec = 0;
   924  001530  0E00               	movlw	0
   925  001532  6E5B               	movwf	OledApi_printf@findingSpec^0,c
   926                           
   927                           ;OledApi.c: 194:                 switch(*(++s))
   928  001534  EF2C  F00B         	goto	l2870
   929  001538                     l2834:
   930                           
   931                           ;OledApi.c: 197:                         OledApi_printNum((*(int *)__va_arg(*(int **)lis
      +                          t, (int)0)), dec);
   932  001538  C05E  FFD9         	movff	OledApi_printf@list,fsr2l
   933  00153C  C05F  FFDA         	movff	OledApi_printf@list+1,fsr2h
   934  001540  CFDE F001          	movff	postinc2,___xxtofl@val
   935  001544  CFDD F002          	movff	postdec2,___xxtofl@val+1
   936  001548  0E00               	movlw	0
   937  00154A  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
   938  00154C  0EFF               	movlw	-1
   939  00154E  6E03               	movwf	(___xxtofl@val+2)^0,c
   940  001550  6E04               	movwf	(___xxtofl@val+3)^0,c
   941  001552  0E01               	movlw	1
   942  001554  EC77  F00B         	call	___xxtofl
   943  001558  C001  F057         	movff	?___xxtofl,_OledApi_printf$1292
   944  00155C  C002  F058         	movff	?___xxtofl+1,_OledApi_printf$1292+1
   945  001560  C003  F059         	movff	?___xxtofl+2,_OledApi_printf$1292+2
   946  001564  C004  F05A         	movff	?___xxtofl+3,_OledApi_printf$1292+3
   947  001568                     
   948                           ;OledApi.c: 197:                         OledApi_printNum((*(int *)__va_arg(*(int **)lis
      +                          t, (int)0)), dec);
   949  001568  C057  F025         	movff	_OledApi_printf$1292,OledApi_printNum@num
   950  00156C  C058  F026         	movff	_OledApi_printf$1292+1,OledApi_printNum@num+1
   951  001570  C059  F027         	movff	_OledApi_printf$1292+2,OledApi_printNum@num+2
   952  001574  C05A  F028         	movff	_OledApi_printf$1292+3,OledApi_printNum@num+3
   953  001578  C05D  F029         	movff	OledApi_printf@dec,OledApi_printNum@dec
   954  00157C  EC89  F008         	call	_OledApi_printNum	;wreg free
   955  001580  0E02               	movlw	2
   956  001582  265E               	addwf	OledApi_printf@list^0,f,c
   957  001584  0E00               	movlw	0
   958  001586  225F               	addwfc	(OledApi_printf@list+1)^0,f,c
   959  001588                     l2840:
   960                           
   961                           ;OledApi.c: 198:                         count++;
   962  001588  2A5C               	incf	OledApi_printf@count^0,f,c
   963                           
   964                           ;OledApi.c: 199:                         break;
   965  00158A  EF54  F00B         	goto	l2872
   966  00158E                     l2842:
   967                           
   968                           ;OledApi.c: 201:                         OledApi_printNum((*(double *)__va_arg(*(double 
      +                          **)list, (double)0)), dec);
   969  00158E  C05E  FFD9         	movff	OledApi_printf@list,fsr2l
   970  001592  C05F  FFDA         	movff	OledApi_printf@list+1,fsr2h
   971  001596  CFDE F025          	movff	postinc2,OledApi_printNum@num
   972  00159A  CFDE F026          	movff	postinc2,OledApi_printNum@num+1
   973  00159E  CFDE F027          	movff	postinc2,OledApi_printNum@num+2
   974  0015A2  CFDE F028          	movff	postinc2,OledApi_printNum@num+3
   975  0015A6  C05D  F029         	movff	OledApi_printf@dec,OledApi_printNum@dec
   976  0015AA  EC89  F008         	call	_OledApi_printNum	;wreg free
   977  0015AE  0E04               	movlw	4
   978  0015B0  265E               	addwf	OledApi_printf@list^0,f,c
   979  0015B2  0E00               	movlw	0
   980  0015B4  225F               	addwfc	(OledApi_printf@list+1)^0,f,c
   981  0015B6  EFC4  F00A         	goto	l2840
   982  0015BA                     l2848:
   983                           
   984                           ;OledApi.c: 205:                         OledApi_setCursor(0,1);
   985  0015BA  0E01               	movlw	1
   986  0015BC  6E0C               	movwf	OledApi_setCursor@row^0,c
   987  0015BE  0E00               	movlw	0
   988  0015C0  ECEE  F010         	call	_OledApi_setCursor
   989                           
   990                           ;OledApi.c: 206:                         break;
   991  0015C4  EF54  F00B         	goto	l2872
   992  0015C8                     l2850:
   993                           
   994                           ;OledApi.c: 208:                         OledApi_printStr((*(uint8_t* *)__va_arg(*(uint8
      +                          _t* **)list, (uint8_t*)0)));
   995  0015C8  C05E  FFD9         	movff	OledApi_printf@list,fsr2l
   996  0015CC  C05F  FFDA         	movff	OledApi_printf@list+1,fsr2h
   997  0015D0  CFDE F010          	movff	postinc2,OledApi_printStr@s
   998  0015D4  CFDD F011          	movff	postdec2,OledApi_printStr@s+1
   999  0015D8  EC7B  F00F         	call	_OledApi_printStr	;wreg free
  1000  0015DC  0E02               	movlw	2
  1001  0015DE  265E               	addwf	OledApi_printf@list^0,f,c
  1002  0015E0  0E00               	movlw	0
  1003  0015E2  225F               	addwfc	(OledApi_printf@list+1)^0,f,c
  1004  0015E4  EFC4  F00A         	goto	l2840
  1005  0015E8                     l2856:
  1006                           
  1007                           ;OledApi.c: 212:                         OledApi_printSpec((*(int *)__va_arg(*(int **)li
      +                          st, (int)0)));
  1008  0015E8  C05E  FFD9         	movff	OledApi_printf@list,fsr2l
  1009  0015EC  C05F  FFDA         	movff	OledApi_printf@list+1,fsr2h
  1010  0015F0  50DF               	movf	indf2,w,c
  1011  0015F2  EC4B  F011         	call	_OledApi_printSpec
  1012  0015F6  0E02               	movlw	2
  1013  0015F8  265E               	addwf	OledApi_printf@list^0,f,c
  1014  0015FA  0E00               	movlw	0
  1015  0015FC  225F               	addwfc	(OledApi_printf@list+1)^0,f,c
  1016  0015FE  EFC4  F00A         	goto	l2840
  1017  001602                     l2862:
  1018                           
  1019                           ;OledApi.c: 216:                         if(*s >= '0' && *s <= '9')
  1020  001602  C04A  FFF6         	movff	OledApi_printf@s,tblptrl
  1021  001606  C04B  FFF7         	movff	OledApi_printf@s+1,tblptrh
  1022  00160A                     	if	0	;tblptru may be non-zero
  1023  00160A                     	endif
  1024  00160A                     	if	0	;tblptru may be non-zero
  1025  00160A                     	endif
  1026  00160A  0E2F               	movlw	47
  1027  00160C  0008               	tblrd		*
  1028  00160E  64F5               	cpfsgt	tablat,c
  1029  001610  EF0C  F00B         	goto	u2661
  1030  001614  EF0E  F00B         	goto	u2660
  1031  001618                     u2661:
  1032  001618  EF54  F00B         	goto	l2872
  1033  00161C                     u2660:
  1034  00161C  C04A  FFF6         	movff	OledApi_printf@s,tblptrl
  1035  001620  C04B  FFF7         	movff	OledApi_printf@s+1,tblptrh
  1036  001624                     	if	0	;tblptru may be non-zero
  1037  001624                     	endif
  1038  001624                     	if	0	;tblptru may be non-zero
  1039  001624                     	endif
  1040  001624  0E3A               	movlw	58
  1041  001626  0008               	tblrd		*
  1042  001628  60F5               	cpfslt	tablat,c
  1043  00162A  EF19  F00B         	goto	u2671
  1044  00162E  EF1B  F00B         	goto	u2670
  1045  001632                     u2671:
  1046  001632  EF54  F00B         	goto	l2872
  1047  001636                     u2670:
  1048  001636                     
  1049                           ;OledApi.c: 217:                         {;OledApi.c: 218:                             f
      +                          indingSpec = 1;
  1050  001636  0E01               	movlw	1
  1051  001638  6E5B               	movwf	OledApi_printf@findingSpec^0,c
  1052  00163A                     
  1053                           ;OledApi.c: 219:                             dec = dec*10 + (*s-'0');
  1054  00163A  C04A  FFF6         	movff	OledApi_printf@s,tblptrl
  1055  00163E  C04B  FFF7         	movff	OledApi_printf@s+1,tblptrh
  1056  001642                     	if	0	;tblptru may be non-zero
  1057  001642                     	endif
  1058  001642                     	if	0	;tblptru may be non-zero
  1059  001642                     	endif
  1060  001642  0008               	tblrd		*
  1061  001644  CFF5 F055          	movff	tablat,??_OledApi_printf
  1062  001648  505D               	movf	OledApi_printf@dec^0,w,c
  1063  00164A  0D0A               	mullw	10
  1064  00164C  50F3               	movf	243,w,c
  1065  00164E  2455               	addwf	??_OledApi_printf^0,w,c
  1066  001650  0FD0               	addlw	208
  1067  001652  6E5D               	movwf	OledApi_printf@dec^0,c
  1068  001654  EF54  F00B         	goto	l2872
  1069  001658                     l2870:
  1070  001658  4A4A               	infsnz	OledApi_printf@s^0,f,c
  1071  00165A  2A4B               	incf	(OledApi_printf@s+1)^0,f,c
  1072  00165C  C04A  FFF6         	movff	OledApi_printf@s,tblptrl
  1073  001660  C04B  FFF7         	movff	OledApi_printf@s+1,tblptrh
  1074  001664                     	if	0	;tblptru may be non-zero
  1075  001664                     	endif
  1076  001664                     	if	0	;tblptru may be non-zero
  1077  001664                     	endif
  1078  001664  0008               	tblrd		*
  1079  001666  50F5               	movf	tablat,w,c
  1080  001668  6E55               	movwf	??_OledApi_printf^0,c
  1081  00166A  6A56               	clrf	(??_OledApi_printf+1)^0,c
  1082                           
  1083                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1084                           ; Switch size 1, requested type "simple"
  1085                           ; Number of cases is 1, Range of values is 0 to 0
  1086                           ; switch strategies available:
  1087                           ; Name         Instructions Cycles
  1088                           ; simple_byte            4     3 (average)
  1089                           ;	Chosen strategy is simple_byte
  1090  00166C  5056               	movf	(??_OledApi_printf+1)^0,w,c
  1091  00166E  0A00               	xorlw	0	; case 0
  1092  001670  B4D8               	btfsc	status,2,c
  1093  001672  EF3D  F00B         	goto	l2988
  1094  001676  EF01  F00B         	goto	l2862
  1095  00167A                     l2988:
  1096                           
  1097                           ; Switch size 1, requested type "simple"
  1098                           ; Number of cases is 5, Range of values is 99 to 115
  1099                           ; switch strategies available:
  1100                           ; Name         Instructions Cycles
  1101                           ; simple_byte           16     9 (average)
  1102                           ;	Chosen strategy is simple_byte
  1103  00167A  5055               	movf	??_OledApi_printf^0,w,c
  1104  00167C  0A63               	xorlw	99	; case 99
  1105  00167E  B4D8               	btfsc	status,2,c
  1106  001680  EFF4  F00A         	goto	l2856
  1107  001684  0A07               	xorlw	7	; case 100
  1108  001686  B4D8               	btfsc	status,2,c
  1109  001688  EF9C  F00A         	goto	l2834
  1110  00168C  0A02               	xorlw	2	; case 102
  1111  00168E  B4D8               	btfsc	status,2,c
  1112  001690  EFC7  F00A         	goto	l2842
  1113  001694  0A08               	xorlw	8	; case 110
  1114  001696  B4D8               	btfsc	status,2,c
  1115  001698  EFDD  F00A         	goto	l2848
  1116  00169C  0A1D               	xorlw	29	; case 115
  1117  00169E  B4D8               	btfsc	status,2,c
  1118  0016A0  EFE4  F00A         	goto	l2850
  1119  0016A4  EF01  F00B         	goto	l2862
  1120  0016A8                     l2872:
  1121                           
  1122                           ;OledApi.c: 222:             }while(findingSpec);
  1123  0016A8  505B               	movf	OledApi_printf@findingSpec^0,w,c
  1124  0016AA  A4D8               	btfss	status,2,c
  1125  0016AC  EF5A  F00B         	goto	u2681
  1126  0016B0  EF5C  F00B         	goto	u2680
  1127  0016B4                     u2681:
  1128  0016B4  EF98  F00A         	goto	l2832
  1129  0016B8                     u2680:
  1130  0016B8  EF66  F00B         	goto	l2876
  1131  0016BC                     l2874:
  1132                           
  1133                           ;OledApi.c: 225:         {;OledApi.c: 226:             write(*s);
  1134  0016BC  C04A  FFF6         	movff	OledApi_printf@s,tblptrl
  1135  0016C0  C04B  FFF7         	movff	OledApi_printf@s+1,tblptrh
  1136  0016C4                     	if	0	;tblptru may be non-zero
  1137  0016C4                     	endif
  1138  0016C4                     	if	0	;tblptru may be non-zero
  1139  0016C4                     	endif
  1140  0016C4  0008               	tblrd		*
  1141  0016C6  50F5               	movf	tablat,w,c
  1142  0016C8  EC91  F011         	call	_write
  1143  0016CC                     l2876:
  1144                           
  1145                           ;OledApi.c: 228:         s++;
  1146  0016CC  4A4A               	infsnz	OledApi_printf@s^0,f,c
  1147  0016CE  2A4B               	incf	(OledApi_printf@s+1)^0,f,c
  1148  0016D0                     l2878:
  1149                           
  1150                           ;OledApi.c: 181:     while(*s)
  1151  0016D0  C04A  FFF6         	movff	OledApi_printf@s,tblptrl
  1152  0016D4  C04B  FFF7         	movff	OledApi_printf@s+1,tblptrh
  1153  0016D8                     	if	0	;tblptru may be non-zero
  1154  0016D8                     	endif
  1155  0016D8                     	if	0	;tblptru may be non-zero
  1156  0016D8                     	endif
  1157  0016D8  0008               	tblrd		*
  1158  0016DA  50F5               	movf	tablat,w,c
  1159  0016DC  0900               	iorlw	0
  1160  0016DE  A4D8               	btfss	status,2,c
  1161  0016E0  EF74  F00B         	goto	u2691
  1162  0016E4  EF76  F00B         	goto	u2690
  1163  0016E8                     u2691:
  1164  0016E8  EF79  F00A         	goto	l2824
  1165  0016EC                     u2690:
  1166  0016EC  0012               	return		;funcret
  1167  0016EE                     __end_of_OledApi_printf:
  1168                           	opt callstack 0
  1169                           
  1170 ;; *************** function _OledApi_printStr *****************
  1171 ;; Defined at:
  1172 ;;		line 290 in file "OledApi.c"
  1173 ;; Parameters:    Size  Location     Type
  1174 ;;  s               2   15[COMRAM] PTR const unsigned char 
  1175 ;;		 -> ?_OledApi_printf(1), STR_2(5), 
  1176 ;; Auto vars:     Size  Location     Type
  1177 ;;  count           1   19[COMRAM] unsigned char 
  1178 ;; Return value:  Size  Location     Type
  1179 ;;                  1    wreg      void 
  1180 ;; Registers used:
  1181 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1182 ;; Tracked objects:
  1183 ;;		On entry : 0/0
  1184 ;;		On exit  : 0/0
  1185 ;;		Unchanged: 0/0
  1186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1187 ;;      Params:         2       0       0       0       0       0       0       0       0
  1188 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1189 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1190 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1191 ;;Total ram usage:        5 bytes
  1192 ;; Hardware stack levels used:    1
  1193 ;; Hardware stack levels required when called:    4
  1194 ;; This function calls:
  1195 ;;		_OledApi_setCursor
  1196 ;;		_writeStr
  1197 ;; This function is called by:
  1198 ;;		_OledApi_printf
  1199 ;; This function uses a non-reentrant model
  1200 ;;
  1201                           
  1202                           	psect	text3
  1203  001EF6                     __ptext3:
  1204                           	opt callstack 0
  1205  001EF6                     _OledApi_printStr:
  1206                           	opt callstack 24
  1207  001EF6                     
  1208                           ;OledApi.c: 290: void OledApi_printStr(const char* s);OledApi.c: 291: {;OledApi.c: 292: 
      +                              uint8_t count = 0;
  1209  001EF6  0E00               	movlw	0
  1210  001EF8  6E14               	movwf	OledApi_printStr@count^0,c
  1211                           
  1212                           ;OledApi.c: 293:     while(s[count])
  1213  001EFA  EF80  F00F         	goto	l2718
  1214  001EFE                     l2716:
  1215                           
  1216                           ;OledApi.c: 294:     {;OledApi.c: 295:         count++;
  1217  001EFE  2A14               	incf	OledApi_printStr@count^0,f,c
  1218  001F00                     l2718:
  1219                           
  1220                           ;OledApi.c: 293:     while(s[count])
  1221  001F00  5014               	movf	OledApi_printStr@count^0,w,c
  1222  001F02  2410               	addwf	OledApi_printStr@s^0,w,c
  1223  001F04  6E12               	movwf	??_OledApi_printStr^0,c
  1224  001F06  0E00               	movlw	0
  1225  001F08  2011               	addwfc	(OledApi_printStr@s+1)^0,w,c
  1226  001F0A  6E13               	movwf	(??_OledApi_printStr+1)^0,c
  1227  001F0C  C012  FFF6         	movff	??_OledApi_printStr,tblptrl
  1228  001F10  C013  FFF7         	movff	??_OledApi_printStr+1,tblptrh
  1229  001F14  6AF8               	clrf	tblptru,c
  1230  001F16  0E07               	movlw	(high __ramtop+-1)
  1231  001F18  64F7               	cpfsgt	tblptrh,c
  1232  001F1A  D003               	bra	u2567
  1233  001F1C  0008               	tblrd		*
  1234  001F1E  50F5               	movf	tablat,w,c
  1235  001F20  D005               	bra	u2560
  1236  001F22                     u2567:
  1237  001F22  CFF6 FFE9          	movff	tblptrl,fsr0l
  1238  001F26  CFF7 FFEA          	movff	tblptrh,fsr0h
  1239  001F2A  50EF               	movf	indf0,w,c
  1240  001F2C                     u2560:
  1241  001F2C  0900               	iorlw	0
  1242  001F2E  A4D8               	btfss	status,2,c
  1243  001F30  EF9C  F00F         	goto	u2571
  1244  001F34  EF9E  F00F         	goto	u2570
  1245  001F38                     u2571:
  1246  001F38  EF7F  F00F         	goto	l2716
  1247  001F3C                     u2570:
  1248  001F3C                     
  1249                           ;OledApi.c: 297:     if(count > 16)
  1250  001F3C  0E10               	movlw	16
  1251  001F3E  6414               	cpfsgt	OledApi_printStr@count^0,c
  1252  001F40  EFA4  F00F         	goto	u2581
  1253  001F44  EFA6  F00F         	goto	u2580
  1254  001F48                     u2581:
  1255  001F48  EFC0  F00F         	goto	l2724
  1256  001F4C                     u2580:
  1257  001F4C                     
  1258                           ;OledApi.c: 298:     {;OledApi.c: 299:         writeStr(s, 16);
  1259  001F4C  C010  F00B         	movff	OledApi_printStr@s,writeStr@value
  1260  001F50  C011  F00C         	movff	OledApi_printStr@s+1,writeStr@value+1
  1261  001F54  0E10               	movlw	16
  1262  001F56  6E0D               	movwf	writeStr@len^0,c
  1263  001F58  ECC3  F011         	call	_writeStr	;wreg free
  1264                           
  1265                           ;OledApi.c: 300:         OledApi_setCursor(0,1);
  1266  001F5C  0E01               	movlw	1
  1267  001F5E  6E0C               	movwf	OledApi_setCursor@row^0,c
  1268  001F60  0E00               	movlw	0
  1269  001F62  ECEE  F010         	call	_OledApi_setCursor
  1270                           
  1271                           ;OledApi.c: 301:         writeStr(s+16, count - 16);
  1272  001F66  0E10               	movlw	16
  1273  001F68  2410               	addwf	OledApi_printStr@s^0,w,c
  1274  001F6A  6E0B               	movwf	writeStr@value^0,c
  1275  001F6C  0E00               	movlw	0
  1276  001F6E  2011               	addwfc	(OledApi_printStr@s+1)^0,w,c
  1277  001F70  6E0C               	movwf	(writeStr@value+1)^0,c
  1278  001F72  5014               	movf	OledApi_printStr@count^0,w,c
  1279  001F74  0FF0               	addlw	240
  1280  001F76  6E0D               	movwf	writeStr@len^0,c
  1281  001F78  ECC3  F011         	call	_writeStr	;wreg free
  1282                           
  1283                           ;OledApi.c: 302:     }
  1284  001F7C  EFC8  F00F         	goto	l200
  1285  001F80                     l2724:
  1286                           
  1287                           ;OledApi.c: 304:     {;OledApi.c: 305:         writeStr(s, count);
  1288  001F80  C010  F00B         	movff	OledApi_printStr@s,writeStr@value
  1289  001F84  C011  F00C         	movff	OledApi_printStr@s+1,writeStr@value+1
  1290  001F88  C014  F00D         	movff	OledApi_printStr@count,writeStr@len
  1291  001F8C  ECC3  F011         	call	_writeStr	;wreg free
  1292  001F90                     l200:
  1293  001F90  0012               	return		;funcret
  1294  001F92                     __end_of_OledApi_printStr:
  1295                           	opt callstack 0
  1296                           
  1297 ;; *************** function _OledApi_setCursor *****************
  1298 ;; Defined at:
  1299 ;;		line 79 in file "OledApi.c"
  1300 ;; Parameters:    Size  Location     Type
  1301 ;;  col             1    wreg     unsigned char 
  1302 ;;  row             1   11[COMRAM] unsigned char 
  1303 ;; Auto vars:     Size  Location     Type
  1304 ;;  col             1   12[COMRAM] unsigned char 
  1305 ;; Return value:  Size  Location     Type
  1306 ;;                  1    wreg      void 
  1307 ;; Registers used:
  1308 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1309 ;; Tracked objects:
  1310 ;;		On entry : 0/0
  1311 ;;		On exit  : 0/0
  1312 ;;		Unchanged: 0/0
  1313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1314 ;;      Params:         1       0       0       0       0       0       0       0       0
  1315 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1316 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1317 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1318 ;;Total ram usage:        4 bytes
  1319 ;; Hardware stack levels used:    1
  1320 ;; Hardware stack levels required when called:    3
  1321 ;; This function calls:
  1322 ;;		_command
  1323 ;; This function is called by:
  1324 ;;		_OledApi_printf
  1325 ;;		_OledApi_printStr
  1326 ;; This function uses a non-reentrant model
  1327 ;;
  1328                           
  1329                           	psect	text4
  1330  0021DC                     __ptext4:
  1331                           	opt callstack 0
  1332  0021DC                     _OledApi_setCursor:
  1333                           	opt callstack 25
  1334                           
  1335                           ;incstack = 0
  1336                           ;OledApi_setCursor@col stored from wreg
  1337  0021DC  6E0D               	movwf	OledApi_setCursor@col^0,c
  1338  0021DE                     
  1339                           ;OledApi.c: 79: void OledApi_setCursor(uint8_t col, uint8_t row);OledApi.c: 80: {;OledAp
      +                          i.c: 83:  command(0x80 | (row ? 0x40 : 0x00) | (col & 0x3F));
  1340  0021DE  500C               	movf	OledApi_setCursor@row^0,w,c
  1341  0021E0  A4D8               	btfss	status,2,c
  1342  0021E2  EFF5  F010         	goto	u1851
  1343  0021E6  EFF7  F010         	goto	u1850
  1344  0021EA                     u1851:
  1345  0021EA  EFFD  F010         	goto	l2260
  1346  0021EE                     u1850:
  1347  0021EE  0E00               	movlw	0
  1348  0021F0  6E0F               	movwf	(_OledApi_setCursor$266+1)^0,c
  1349  0021F2  0E00               	movlw	0
  1350  0021F4  6E0E               	movwf	_OledApi_setCursor$266^0,c
  1351  0021F6  EF01  F011         	goto	l2262
  1352  0021FA                     l2260:
  1353  0021FA  0E00               	movlw	0
  1354  0021FC  6E0F               	movwf	(_OledApi_setCursor$266+1)^0,c
  1355  0021FE  0E40               	movlw	64
  1356  002200  6E0E               	movwf	_OledApi_setCursor$266^0,c
  1357  002202                     l2262:
  1358  002202  500D               	movf	OledApi_setCursor@col^0,w,c
  1359  002204  0B3F               	andlw	63
  1360  002206  100E               	iorwf	_OledApi_setCursor$266^0,w,c
  1361  002208  0980               	iorlw	128
  1362  00220A  EC9E  F011         	call	_command
  1363  00220E  0012               	return		;funcret
  1364  002210                     __end_of_OledApi_setCursor:
  1365                           	opt callstack 0
  1366                           
  1367 ;; *************** function _OledApi_printSpec *****************
  1368 ;; Defined at:
  1369 ;;		line 167 in file "OledApi.c"
  1370 ;; Parameters:    Size  Location     Type
  1371 ;;  schar           1    wreg     unsigned char 
  1372 ;; Auto vars:     Size  Location     Type
  1373 ;;  schar           1   12[COMRAM] unsigned char 
  1374 ;; Return value:  Size  Location     Type
  1375 ;;                  1    wreg      void 
  1376 ;; Registers used:
  1377 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
  1378 ;; Tracked objects:
  1379 ;;		On entry : 0/0
  1380 ;;		On exit  : 0/0
  1381 ;;		Unchanged: 0/0
  1382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1383 ;;      Params:         0       0       0       0       0       0       0       0       0
  1384 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1385 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1386 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1387 ;;Total ram usage:        1 bytes
  1388 ;; Hardware stack levels used:    1
  1389 ;; Hardware stack levels required when called:    3
  1390 ;; This function calls:
  1391 ;;		_exit
  1392 ;;		_write
  1393 ;; This function is called by:
  1394 ;;		_OledApi_printf
  1395 ;; This function uses a non-reentrant model
  1396 ;;
  1397                           
  1398                           	psect	text5
  1399  002296                     __ptext5:
  1400                           	opt callstack 0
  1401  002296                     _OledApi_printSpec:
  1402                           	opt callstack 25
  1403                           
  1404                           ;incstack = 0
  1405                           ;OledApi_printSpec@schar stored from wreg
  1406  002296  6E0D               	movwf	OledApi_printSpec@schar^0,c
  1407  002298                     
  1408                           ;OledApi.c: 167: void OledApi_printSpec(uint8_t schar);OledApi.c: 168: {;OledApi.c: 169:
      +                               if(schar > 7){
  1409  002298  0E07               	movlw	7
  1410  00229A  640D               	cpfsgt	OledApi_printSpec@schar^0,c
  1411  00229C  EF52  F011         	goto	u2421
  1412  0022A0  EF54  F011         	goto	u2420
  1413  0022A4                     u2421:
  1414  0022A4  EF5A  F011         	goto	l2644
  1415  0022A8                     u2420:
  1416  0022A8                     
  1417                           ;OledApi.c: 170:         exit(1);
  1418  0022A8  0E00               	movlw	0
  1419  0022AA  6E0C               	movwf	(exit@code+1)^0,c
  1420  0022AC  0E01               	movlw	1
  1421  0022AE  6E0B               	movwf	exit@code^0,c
  1422  0022B0  ECCE  F011         	call	_exit	;wreg free
  1423  0022B4                     l2644:
  1424                           
  1425                           ;OledApi.c: 172:     write(schar);
  1426  0022B4  500D               	movf	OledApi_printSpec@schar^0,w,c
  1427  0022B6  EC91  F011         	call	_write
  1428  0022BA  0012               	return		;funcret
  1429  0022BC                     __end_of_OledApi_printSpec:
  1430                           	opt callstack 0
  1431                           
  1432 ;; *************** function _OledApi_printNum *****************
  1433 ;; Defined at:
  1434 ;;		line 234 in file "OledApi.c"
  1435 ;; Parameters:    Size  Location     Type
  1436 ;;  num             4   36[COMRAM] float 
  1437 ;;  dec             1   40[COMRAM] char 
  1438 ;; Auto vars:     Size  Location     Type
  1439 ;;  i               2   61[COMRAM] int 
  1440 ;;  s              17   44[COMRAM] unsigned char [17]
  1441 ;;  whole           4   67[COMRAM] long 
  1442 ;;  fract           4   63[COMRAM] long 
  1443 ;;  c               2   71[COMRAM] int 
  1444 ;; Return value:  Size  Location     Type
  1445 ;;                  1    wreg      void 
  1446 ;; Registers used:
  1447 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1448 ;; Tracked objects:
  1449 ;;		On entry : 0/0
  1450 ;;		On exit  : 0/0
  1451 ;;		Unchanged: 0/0
  1452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1453 ;;      Params:         5       0       0       0       0       0       0       0       0
  1454 ;;      Locals:        29       0       0       0       0       0       0       0       0
  1455 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1456 ;;      Totals:        37       0       0       0       0       0       0       0       0
  1457 ;;Total ram usage:       37 bytes
  1458 ;; Hardware stack levels used:    1
  1459 ;; Hardware stack levels required when called:    3
  1460 ;; This function calls:
  1461 ;;		___aldiv
  1462 ;;		___almod
  1463 ;;		___flge
  1464 ;;		___flmul
  1465 ;;		___flsub
  1466 ;;		___fltol
  1467 ;;		___xxtofl
  1468 ;;		_exit
  1469 ;;		_writeStr
  1470 ;; This function is called by:
  1471 ;;		_OledApi_printf
  1472 ;; This function uses a non-reentrant model
  1473 ;;
  1474                           
  1475                           	psect	text6
  1476  001112                     __ptext6:
  1477                           	opt callstack 0
  1478  001112                     _OledApi_printNum:
  1479                           	opt callstack 25
  1480  001112                     
  1481                           ;OledApi.c: 234: void OledApi_printNum(float num, int8_t dec);OledApi.c: 235: {;OledApi.
      +                          c: 236:     int32_t whole, fract;;OledApi.c: 237:     uint8_t s[17] = {};
  1482  001112  EE20  F02D         	lfsr	2,OledApi_printNum@s
  1483  001116  0E10               	movlw	16
  1484  001118                     u2431:
  1485  001118  6ADE               	clrf	postinc2,c
  1486  00111A  06E8               	decf	wreg,f,c
  1487  00111C  E2FD               	bc	u2431
  1488  00111E                     
  1489                           ;OledApi.c: 238:     int c = 16;
  1490  00111E  0E00               	movlw	0
  1491  001120  6E49               	movwf	(OledApi_printNum@c+1)^0,c
  1492  001122  0E10               	movlw	16
  1493  001124  6E48               	movwf	OledApi_printNum@c^0,c
  1494  001126                     
  1495                           ;OledApi.c: 240:     whole = (int32_t) num;
  1496  001126  C025  F001         	movff	OledApi_printNum@num,___fltol@f1
  1497  00112A  C026  F002         	movff	OledApi_printNum@num+1,___fltol@f1+1
  1498  00112E  C027  F003         	movff	OledApi_printNum@num+2,___fltol@f1+2
  1499  001132  C028  F004         	movff	OledApi_printNum@num+3,___fltol@f1+3
  1500  001136  ECD7  F00C         	call	___fltol	;wreg free
  1501  00113A  C001  F044         	movff	?___fltol,OledApi_printNum@whole
  1502  00113E  C002  F045         	movff	?___fltol+1,OledApi_printNum@whole+1
  1503  001142  C003  F046         	movff	?___fltol+2,OledApi_printNum@whole+2
  1504  001146  C004  F047         	movff	?___fltol+3,OledApi_printNum@whole+3
  1505  00114A                     
  1506                           ;OledApi.c: 241:     num -= whole;
  1507  00114A  C025  F011         	movff	OledApi_printNum@num,___flsub@b
  1508  00114E  C026  F012         	movff	OledApi_printNum@num+1,___flsub@b+1
  1509  001152  C027  F013         	movff	OledApi_printNum@num+2,___flsub@b+2
  1510  001156  C028  F014         	movff	OledApi_printNum@num+3,___flsub@b+3
  1511  00115A  C044  F001         	movff	OledApi_printNum@whole,___xxtofl@val
  1512  00115E  C045  F002         	movff	OledApi_printNum@whole+1,___xxtofl@val+1
  1513  001162  C046  F003         	movff	OledApi_printNum@whole+2,___xxtofl@val+2
  1514  001166  C047  F004         	movff	OledApi_printNum@whole+3,___xxtofl@val+3
  1515  00116A  0E01               	movlw	1
  1516  00116C  EC77  F00B         	call	___xxtofl
  1517  001170  C001  F015         	movff	?___xxtofl,___flsub@a
  1518  001174  C002  F016         	movff	?___xxtofl+1,___flsub@a+1
  1519  001178  C003  F017         	movff	?___xxtofl+2,___flsub@a+2
  1520  00117C  C004  F018         	movff	?___xxtofl+3,___flsub@a+3
  1521  001180  EC88  F010         	call	___flsub	;wreg free
  1522  001184  C011  F025         	movff	?___flsub,OledApi_printNum@num
  1523  001188  C012  F026         	movff	?___flsub+1,OledApi_printNum@num+1
  1524  00118C  C013  F027         	movff	?___flsub+2,OledApi_printNum@num+2
  1525  001190  C014  F028         	movff	?___flsub+3,OledApi_printNum@num+3
  1526  001194                     
  1527                           ;OledApi.c: 243:     for(int i = 0; i < dec; i++)
  1528  001194  0E00               	movlw	0
  1529  001196  6E3F               	movwf	(OledApi_printNum@i+1)^0,c
  1530  001198  0E00               	movlw	0
  1531  00119A  6E3E               	movwf	OledApi_printNum@i^0,c
  1532  00119C  EFEC  F008         	goto	l2660
  1533  0011A0                     l2656:
  1534                           
  1535                           ;OledApi.c: 244:     {;OledApi.c: 245:         num *= 10;
  1536  0011A0  C025  F001         	movff	OledApi_printNum@num,___flmul@b
  1537  0011A4  C026  F002         	movff	OledApi_printNum@num+1,___flmul@b+1
  1538  0011A8  C027  F003         	movff	OledApi_printNum@num+2,___flmul@b+2
  1539  0011AC  C028  F004         	movff	OledApi_printNum@num+3,___flmul@b+3
  1540  0011B0  0E00               	movlw	0
  1541  0011B2  6E05               	movwf	___flmul@a^0,c
  1542  0011B4  0E00               	movlw	0
  1543  0011B6  6E06               	movwf	(___flmul@a+1)^0,c
  1544  0011B8  0E20               	movlw	32
  1545  0011BA  6E07               	movwf	(___flmul@a+2)^0,c
  1546  0011BC  0E41               	movlw	65
  1547  0011BE  6E08               	movwf	(___flmul@a+3)^0,c
  1548  0011C0  EC74  F006         	call	___flmul	;wreg free
  1549  0011C4  C001  F025         	movff	?___flmul,OledApi_printNum@num
  1550  0011C8  C002  F026         	movff	?___flmul+1,OledApi_printNum@num+1
  1551  0011CC  C003  F027         	movff	?___flmul+2,OledApi_printNum@num+2
  1552  0011D0  C004  F028         	movff	?___flmul+3,OledApi_printNum@num+3
  1553  0011D4                     
  1554                           ;OledApi.c: 246:     }
  1555  0011D4  4A3E               	infsnz	OledApi_printNum@i^0,f,c
  1556  0011D6  2A3F               	incf	(OledApi_printNum@i+1)^0,f,c
  1557  0011D8                     l2660:
  1558  0011D8  C029  F02A         	movff	OledApi_printNum@dec,??_OledApi_printNum
  1559  0011DC  6A2B               	clrf	(??_OledApi_printNum+1)^0,c
  1560  0011DE  BE2A               	btfsc	??_OledApi_printNum^0,7,c
  1561  0011E0  062B               	decf	(??_OledApi_printNum+1)^0,f,c
  1562  0011E2  502A               	movf	??_OledApi_printNum^0,w,c
  1563  0011E4  5C3E               	subwf	OledApi_printNum@i^0,w,c
  1564  0011E6  503F               	movf	(OledApi_printNum@i+1)^0,w,c
  1565  0011E8  0A80               	xorlw	128
  1566  0011EA  6E2C               	movwf	(??_OledApi_printNum+2)^0,c
  1567  0011EC  502B               	movf	(??_OledApi_printNum+1)^0,w,c
  1568  0011EE  0A80               	xorlw	128
  1569  0011F0  582C               	subwfb	(??_OledApi_printNum+2)^0,w,c
  1570  0011F2  A0D8               	btfss	status,0,c
  1571  0011F4  EFFE  F008         	goto	u2441
  1572  0011F8  EF00  F009         	goto	u2440
  1573  0011FC                     u2441:
  1574  0011FC  EFD0  F008         	goto	l2656
  1575  001200                     u2440:
  1576  001200                     
  1577                           ;OledApi.c: 247:     fract = (int32_t) num;
  1578  001200  C025  F001         	movff	OledApi_printNum@num,___fltol@f1
  1579  001204  C026  F002         	movff	OledApi_printNum@num+1,___fltol@f1+1
  1580  001208  C027  F003         	movff	OledApi_printNum@num+2,___fltol@f1+2
  1581  00120C  C028  F004         	movff	OledApi_printNum@num+3,___fltol@f1+3
  1582  001210  ECD7  F00C         	call	___fltol	;wreg free
  1583  001214  C001  F040         	movff	?___fltol,OledApi_printNum@fract
  1584  001218  C002  F041         	movff	?___fltol+1,OledApi_printNum@fract+1
  1585  00121C  C003  F042         	movff	?___fltol+2,OledApi_printNum@fract+2
  1586  001220  C004  F043         	movff	?___fltol+3,OledApi_printNum@fract+3
  1587  001224                     
  1588                           ;OledApi.c: 249:     if(dec == 0)
  1589  001224  5029               	movf	OledApi_printNum@dec^0,w,c
  1590  001226  A4D8               	btfss	status,2,c
  1591  001228  EF18  F009         	goto	u2451
  1592  00122C  EF1A  F009         	goto	u2450
  1593  001230                     u2451:
  1594  001230  EF3C  F009         	goto	l2672
  1595  001234                     u2450:
  1596  001234                     
  1597                           ;OledApi.c: 250:     {;OledApi.c: 251:         if(num >= 0.5)
  1598  001234  C025  F019         	movff	OledApi_printNum@num,___flge@ff1
  1599  001238  C026  F01A         	movff	OledApi_printNum@num+1,___flge@ff1+1
  1600  00123C  C027  F01B         	movff	OledApi_printNum@num+2,___flge@ff1+2
  1601  001240  C028  F01C         	movff	OledApi_printNum@num+3,___flge@ff1+3
  1602  001244  0E00               	movlw	0
  1603  001246  6E1D               	movwf	___flge@ff2^0,c
  1604  001248  0E00               	movlw	0
  1605  00124A  6E1E               	movwf	(___flge@ff2+1)^0,c
  1606  00124C  0E00               	movlw	0
  1607  00124E  6E1F               	movwf	(___flge@ff2+2)^0,c
  1608  001250  0E3F               	movlw	63
  1609  001252  6E20               	movwf	(___flge@ff2+3)^0,c
  1610  001254  EC5A  F00D         	call	___flge	;wreg free
  1611  001258  A0D8               	btfss	status,0,c
  1612  00125A  EF31  F009         	goto	u2461
  1613  00125E  EF33  F009         	goto	u2460
  1614  001262                     u2461:
  1615  001262  EF39  F009         	goto	l2670
  1616  001266                     u2460:
  1617  001266                     
  1618                           ;OledApi.c: 252:         {;OledApi.c: 253:             whole++;
  1619  001266  0E01               	movlw	1
  1620  001268  2644               	addwf	OledApi_printNum@whole^0,f,c
  1621  00126A  0E00               	movlw	0
  1622  00126C  2245               	addwfc	(OledApi_printNum@whole+1)^0,f,c
  1623  00126E  2246               	addwfc	(OledApi_printNum@whole+2)^0,f,c
  1624  001270  2247               	addwfc	(OledApi_printNum@whole+3)^0,f,c
  1625  001272                     l2670:
  1626                           
  1627                           ;OledApi.c: 255:         dec = -1;
  1628  001272  6829               	setf	OledApi_printNum@dec^0,c
  1629                           
  1630                           ;OledApi.c: 256:     }
  1631  001274  EFC1  F009         	goto	l2684
  1632  001278                     l2672:
  1633  001278  C040  F001         	movff	OledApi_printNum@fract,___xxtofl@val
  1634  00127C  C041  F002         	movff	OledApi_printNum@fract+1,___xxtofl@val+1
  1635  001280  C042  F003         	movff	OledApi_printNum@fract+2,___xxtofl@val+2
  1636  001284  C043  F004         	movff	OledApi_printNum@fract+3,___xxtofl@val+3
  1637  001288  0E01               	movlw	1
  1638  00128A  EC77  F00B         	call	___xxtofl
  1639  00128E  C001  F015         	movff	?___xxtofl,___flsub@a
  1640  001292  C002  F016         	movff	?___xxtofl+1,___flsub@a+1
  1641  001296  C003  F017         	movff	?___xxtofl+2,___flsub@a+2
  1642  00129A  C004  F018         	movff	?___xxtofl+3,___flsub@a+3
  1643  00129E  C025  F011         	movff	OledApi_printNum@num,___flsub@b
  1644  0012A2  C026  F012         	movff	OledApi_printNum@num+1,___flsub@b+1
  1645  0012A6  C027  F013         	movff	OledApi_printNum@num+2,___flsub@b+2
  1646  0012AA  C028  F014         	movff	OledApi_printNum@num+3,___flsub@b+3
  1647  0012AE  EC88  F010         	call	___flsub	;wreg free
  1648  0012B2  C011  F019         	movff	?___flsub,___flge@ff1
  1649  0012B6  C012  F01A         	movff	?___flsub+1,___flge@ff1+1
  1650  0012BA  C013  F01B         	movff	?___flsub+2,___flge@ff1+2
  1651  0012BE  C014  F01C         	movff	?___flsub+3,___flge@ff1+3
  1652  0012C2  0E00               	movlw	0
  1653  0012C4  6E1D               	movwf	___flge@ff2^0,c
  1654  0012C6  0E00               	movlw	0
  1655  0012C8  6E1E               	movwf	(___flge@ff2+1)^0,c
  1656  0012CA  0E00               	movlw	0
  1657  0012CC  6E1F               	movwf	(___flge@ff2+2)^0,c
  1658  0012CE  0E3F               	movlw	63
  1659  0012D0  6E20               	movwf	(___flge@ff2+3)^0,c
  1660  0012D2  EC5A  F00D         	call	___flge	;wreg free
  1661  0012D6  A0D8               	btfss	status,0,c
  1662  0012D8  EF70  F009         	goto	u2471
  1663  0012DC  EF72  F009         	goto	u2470
  1664  0012E0                     u2471:
  1665  0012E0  EFC1  F009         	goto	l2684
  1666  0012E4                     u2470:
  1667  0012E4                     
  1668                           ;OledApi.c: 258:     {;OledApi.c: 259:         fract++;
  1669  0012E4  0E01               	movlw	1
  1670  0012E6  2640               	addwf	OledApi_printNum@fract^0,f,c
  1671  0012E8  0E00               	movlw	0
  1672  0012EA  2241               	addwfc	(OledApi_printNum@fract+1)^0,f,c
  1673  0012EC  2242               	addwfc	(OledApi_printNum@fract+2)^0,f,c
  1674  0012EE  2243               	addwfc	(OledApi_printNum@fract+3)^0,f,c
  1675  0012F0  EFC1  F009         	goto	l2684
  1676  0012F4                     l2676:
  1677                           
  1678                           ;OledApi.c: 263:     {;OledApi.c: 264:         if(c == 0) exit(1);
  1679  0012F4  5048               	movf	OledApi_printNum@c^0,w,c
  1680  0012F6  1049               	iorwf	(OledApi_printNum@c+1)^0,w,c
  1681  0012F8  A4D8               	btfss	status,2,c
  1682  0012FA  EF81  F009         	goto	u2481
  1683  0012FE  EF83  F009         	goto	u2480
  1684  001302                     u2481:
  1685  001302  EF89  F009         	goto	l2680
  1686  001306                     u2480:
  1687  001306  0E00               	movlw	0
  1688  001308  6E0C               	movwf	(exit@code+1)^0,c
  1689  00130A  0E01               	movlw	1
  1690  00130C  6E0B               	movwf	exit@code^0,c
  1691  00130E  ECCE  F011         	call	_exit	;wreg free
  1692  001312                     l2680:
  1693                           
  1694                           ;OledApi.c: 265:         s[--c] = '0' + (fract % 10);
  1695  001312  0648               	decf	OledApi_printNum@c^0,f,c
  1696  001314  A0D8               	btfss	status,0,c
  1697  001316  0649               	decf	(OledApi_printNum@c+1)^0,f,c
  1698  001318  0E2D               	movlw	low OledApi_printNum@s
  1699  00131A  2448               	addwf	OledApi_printNum@c^0,w,c
  1700  00131C  6ED9               	movwf	fsr2l,c
  1701  00131E  0E00               	movlw	high OledApi_printNum@s
  1702  001320  2049               	addwfc	(OledApi_printNum@c+1)^0,w,c
  1703  001322  6EDA               	movwf	fsr2h,c
  1704  001324  C040  F001         	movff	OledApi_printNum@fract,___almod@dividend
  1705  001328  C041  F002         	movff	OledApi_printNum@fract+1,___almod@dividend+1
  1706  00132C  C042  F003         	movff	OledApi_printNum@fract+2,___almod@dividend+2
  1707  001330  C043  F004         	movff	OledApi_printNum@fract+3,___almod@dividend+3
  1708  001334  0E0A               	movlw	10
  1709  001336  6E05               	movwf	___almod@divisor^0,c
  1710  001338  0E00               	movlw	0
  1711  00133A  6E06               	movwf	(___almod@divisor+1)^0,c
  1712  00133C  0E00               	movlw	0
  1713  00133E  6E07               	movwf	(___almod@divisor+2)^0,c
  1714  001340  0E00               	movlw	0
  1715  001342  6E08               	movwf	(___almod@divisor+3)^0,c
  1716  001344  ECDC  F00D         	call	___almod	;wreg free
  1717  001348  5001               	movf	?___almod^0,w,c
  1718  00134A  0F30               	addlw	48
  1719  00134C  6EDF               	movwf	indf2,c
  1720  00134E                     
  1721                           ;OledApi.c: 266:         fract /= 10;
  1722  00134E  C040  F001         	movff	OledApi_printNum@fract,___aldiv@dividend
  1723  001352  C041  F002         	movff	OledApi_printNum@fract+1,___aldiv@dividend+1
  1724  001356  C042  F003         	movff	OledApi_printNum@fract+2,___aldiv@dividend+2
  1725  00135A  C043  F004         	movff	OledApi_printNum@fract+3,___aldiv@dividend+3
  1726  00135E  0E0A               	movlw	10
  1727  001360  6E05               	movwf	___aldiv@divisor^0,c
  1728  001362  0E00               	movlw	0
  1729  001364  6E06               	movwf	(___aldiv@divisor+1)^0,c
  1730  001366  0E00               	movlw	0
  1731  001368  6E07               	movwf	(___aldiv@divisor+2)^0,c
  1732  00136A  0E00               	movlw	0
  1733  00136C  6E08               	movwf	(___aldiv@divisor+3)^0,c
  1734  00136E  EC51  F00C         	call	___aldiv	;wreg free
  1735  001372  C001  F040         	movff	?___aldiv,OledApi_printNum@fract
  1736  001376  C002  F041         	movff	?___aldiv+1,OledApi_printNum@fract+1
  1737  00137A  C003  F042         	movff	?___aldiv+2,OledApi_printNum@fract+2
  1738  00137E  C004  F043         	movff	?___aldiv+3,OledApi_printNum@fract+3
  1739  001382                     l2684:
  1740                           
  1741                           ;OledApi.c: 262:     while(dec-- > 0)
  1742  001382  0629               	decf	OledApi_printNum@dec^0,f,c
  1743  001384  2829               	incf	OledApi_printNum@dec^0,w,c
  1744  001386  0A80               	xorlw	128
  1745  001388  0F7F               	addlw	-129
  1746  00138A  B0D8               	btfsc	status,0,c
  1747  00138C  EFCA  F009         	goto	u2491
  1748  001390  EFCC  F009         	goto	u2490
  1749  001394                     u2491:
  1750  001394  EF7A  F009         	goto	l2676
  1751  001398                     u2490:
  1752  001398                     
  1753                           ;OledApi.c: 268:     if(dec == -1)
  1754  001398  2829               	incf	OledApi_printNum@dec^0,w,c
  1755  00139A  A4D8               	btfss	status,2,c
  1756  00139C  EFD2  F009         	goto	u2501
  1757  0013A0  EFD4  F009         	goto	u2500
  1758  0013A4                     u2501:
  1759  0013A4  EFEE  F009         	goto	l2694
  1760  0013A8                     u2500:
  1761  0013A8                     
  1762                           ;OledApi.c: 269:     {;OledApi.c: 270:         if(c == 0) exit(1);
  1763  0013A8  5048               	movf	OledApi_printNum@c^0,w,c
  1764  0013AA  1049               	iorwf	(OledApi_printNum@c+1)^0,w,c
  1765  0013AC  A4D8               	btfss	status,2,c
  1766  0013AE  EFDB  F009         	goto	u2511
  1767  0013B2  EFDD  F009         	goto	u2510
  1768  0013B6                     u2511:
  1769  0013B6  EFE3  F009         	goto	l2692
  1770  0013BA                     u2510:
  1771  0013BA  0E00               	movlw	0
  1772  0013BC  6E0C               	movwf	(exit@code+1)^0,c
  1773  0013BE  0E01               	movlw	1
  1774  0013C0  6E0B               	movwf	exit@code^0,c
  1775  0013C2  ECCE  F011         	call	_exit	;wreg free
  1776  0013C6                     l2692:
  1777                           
  1778                           ;OledApi.c: 271:         s[--c] = '.';
  1779  0013C6  0648               	decf	OledApi_printNum@c^0,f,c
  1780  0013C8  A0D8               	btfss	status,0,c
  1781  0013CA  0649               	decf	(OledApi_printNum@c+1)^0,f,c
  1782  0013CC  0E2D               	movlw	low OledApi_printNum@s
  1783  0013CE  2448               	addwf	OledApi_printNum@c^0,w,c
  1784  0013D0  6ED9               	movwf	fsr2l,c
  1785  0013D2  0E00               	movlw	high OledApi_printNum@s
  1786  0013D4  2049               	addwfc	(OledApi_printNum@c+1)^0,w,c
  1787  0013D6  6EDA               	movwf	fsr2h,c
  1788  0013D8  0E2E               	movlw	46
  1789  0013DA  6EDF               	movwf	indf2,c
  1790  0013DC                     l2694:
  1791                           
  1792                           ;OledApi.c: 275:     {;OledApi.c: 276:         if(c == 0) exit(1);
  1793  0013DC  5048               	movf	OledApi_printNum@c^0,w,c
  1794  0013DE  1049               	iorwf	(OledApi_printNum@c+1)^0,w,c
  1795  0013E0  A4D8               	btfss	status,2,c
  1796  0013E2  EFF5  F009         	goto	u2521
  1797  0013E6  EFF7  F009         	goto	u2520
  1798  0013EA                     u2521:
  1799  0013EA  EFFD  F009         	goto	l2698
  1800  0013EE                     u2520:
  1801  0013EE  0E00               	movlw	0
  1802  0013F0  6E0C               	movwf	(exit@code+1)^0,c
  1803  0013F2  0E01               	movlw	1
  1804  0013F4  6E0B               	movwf	exit@code^0,c
  1805  0013F6  ECCE  F011         	call	_exit	;wreg free
  1806  0013FA                     l2698:
  1807                           
  1808                           ;OledApi.c: 277:         s[--c] = '0' + (whole % 10);
  1809  0013FA  0648               	decf	OledApi_printNum@c^0,f,c
  1810  0013FC  A0D8               	btfss	status,0,c
  1811  0013FE  0649               	decf	(OledApi_printNum@c+1)^0,f,c
  1812  001400  0E2D               	movlw	low OledApi_printNum@s
  1813  001402  2448               	addwf	OledApi_printNum@c^0,w,c
  1814  001404  6ED9               	movwf	fsr2l,c
  1815  001406  0E00               	movlw	high OledApi_printNum@s
  1816  001408  2049               	addwfc	(OledApi_printNum@c+1)^0,w,c
  1817  00140A  6EDA               	movwf	fsr2h,c
  1818  00140C  C044  F001         	movff	OledApi_printNum@whole,___almod@dividend
  1819  001410  C045  F002         	movff	OledApi_printNum@whole+1,___almod@dividend+1
  1820  001414  C046  F003         	movff	OledApi_printNum@whole+2,___almod@dividend+2
  1821  001418  C047  F004         	movff	OledApi_printNum@whole+3,___almod@dividend+3
  1822  00141C  0E0A               	movlw	10
  1823  00141E  6E05               	movwf	___almod@divisor^0,c
  1824  001420  0E00               	movlw	0
  1825  001422  6E06               	movwf	(___almod@divisor+1)^0,c
  1826  001424  0E00               	movlw	0
  1827  001426  6E07               	movwf	(___almod@divisor+2)^0,c
  1828  001428  0E00               	movlw	0
  1829  00142A  6E08               	movwf	(___almod@divisor+3)^0,c
  1830  00142C  ECDC  F00D         	call	___almod	;wreg free
  1831  001430  5001               	movf	?___almod^0,w,c
  1832  001432  0F30               	addlw	48
  1833  001434  6EDF               	movwf	indf2,c
  1834  001436                     
  1835                           ;OledApi.c: 278:         whole /= 10;
  1836  001436  C044  F001         	movff	OledApi_printNum@whole,___aldiv@dividend
  1837  00143A  C045  F002         	movff	OledApi_printNum@whole+1,___aldiv@dividend+1
  1838  00143E  C046  F003         	movff	OledApi_printNum@whole+2,___aldiv@dividend+2
  1839  001442  C047  F004         	movff	OledApi_printNum@whole+3,___aldiv@dividend+3
  1840  001446  0E0A               	movlw	10
  1841  001448  6E05               	movwf	___aldiv@divisor^0,c
  1842  00144A  0E00               	movlw	0
  1843  00144C  6E06               	movwf	(___aldiv@divisor+1)^0,c
  1844  00144E  0E00               	movlw	0
  1845  001450  6E07               	movwf	(___aldiv@divisor+2)^0,c
  1846  001452  0E00               	movlw	0
  1847  001454  6E08               	movwf	(___aldiv@divisor+3)^0,c
  1848  001456  EC51  F00C         	call	___aldiv	;wreg free
  1849  00145A  C001  F044         	movff	?___aldiv,OledApi_printNum@whole
  1850  00145E  C002  F045         	movff	?___aldiv+1,OledApi_printNum@whole+1
  1851  001462  C003  F046         	movff	?___aldiv+2,OledApi_printNum@whole+2
  1852  001466  C004  F047         	movff	?___aldiv+3,OledApi_printNum@whole+3
  1853  00146A                     
  1854                           ;OledApi.c: 279:     }while(whole > 0);
  1855  00146A  BE47               	btfsc	(OledApi_printNum@whole+3)^0,7,c
  1856  00146C  EF44  F00A         	goto	u2530
  1857  001470  5047               	movf	(OledApi_printNum@whole+3)^0,w,c
  1858  001472  1046               	iorwf	(OledApi_printNum@whole+2)^0,w,c
  1859  001474  1045               	iorwf	(OledApi_printNum@whole+1)^0,w,c
  1860  001476  E106               	bnz	u2531
  1861  001478  0444               	decf	OledApi_printNum@whole^0,w,c
  1862  00147A  B0D8               	btfsc	status,0,c
  1863  00147C  EF42  F00A         	goto	u2531
  1864  001480  EF44  F00A         	goto	u2530
  1865  001484                     u2531:
  1866  001484  EFEE  F009         	goto	l2694
  1867  001488                     u2530:
  1868  001488                     
  1869                           ;OledApi.c: 281:     if(num < 0)
  1870  001488  BE28               	btfsc	(OledApi_printNum@num+3)^0,7,c
  1871  00148A  EF4B  F00A         	goto	u2540
  1872  00148E  EF49  F00A         	goto	u2541
  1873  001492                     u2541:
  1874  001492  EF65  F00A         	goto	l2712
  1875  001496                     u2540:
  1876  001496                     
  1877                           ;OledApi.c: 282:     {;OledApi.c: 283:         if(c == 0) exit(1);
  1878  001496  5048               	movf	OledApi_printNum@c^0,w,c
  1879  001498  1049               	iorwf	(OledApi_printNum@c+1)^0,w,c
  1880  00149A  A4D8               	btfss	status,2,c
  1881  00149C  EF52  F00A         	goto	u2551
  1882  0014A0  EF54  F00A         	goto	u2550
  1883  0014A4                     u2551:
  1884  0014A4  EF5A  F00A         	goto	l2710
  1885  0014A8                     u2550:
  1886  0014A8  0E00               	movlw	0
  1887  0014AA  6E0C               	movwf	(exit@code+1)^0,c
  1888  0014AC  0E01               	movlw	1
  1889  0014AE  6E0B               	movwf	exit@code^0,c
  1890  0014B0  ECCE  F011         	call	_exit	;wreg free
  1891  0014B4                     l2710:
  1892                           
  1893                           ;OledApi.c: 284:         s[--c] = '-';
  1894  0014B4  0648               	decf	OledApi_printNum@c^0,f,c
  1895  0014B6  A0D8               	btfss	status,0,c
  1896  0014B8  0649               	decf	(OledApi_printNum@c+1)^0,f,c
  1897  0014BA  0E2D               	movlw	low OledApi_printNum@s
  1898  0014BC  2448               	addwf	OledApi_printNum@c^0,w,c
  1899  0014BE  6ED9               	movwf	fsr2l,c
  1900  0014C0  0E00               	movlw	high OledApi_printNum@s
  1901  0014C2  2049               	addwfc	(OledApi_printNum@c+1)^0,w,c
  1902  0014C4  6EDA               	movwf	fsr2h,c
  1903  0014C6  0E2D               	movlw	45
  1904  0014C8  6EDF               	movwf	indf2,c
  1905  0014CA                     l2712:
  1906                           
  1907                           ;OledApi.c: 287:     writeStr(s+c, 16-c);
  1908  0014CA  0E2D               	movlw	low OledApi_printNum@s
  1909  0014CC  2448               	addwf	OledApi_printNum@c^0,w,c
  1910  0014CE  6E0B               	movwf	writeStr@value^0,c
  1911  0014D0  0E00               	movlw	high OledApi_printNum@s
  1912  0014D2  2049               	addwfc	(OledApi_printNum@c+1)^0,w,c
  1913  0014D4  6E0C               	movwf	(writeStr@value+1)^0,c
  1914  0014D6  5048               	movf	OledApi_printNum@c^0,w,c
  1915  0014D8  0810               	sublw	16
  1916  0014DA  6E0D               	movwf	writeStr@len^0,c
  1917  0014DC  ECC3  F011         	call	_writeStr	;wreg free
  1918  0014E0  0012               	return		;funcret
  1919  0014E2                     __end_of_OledApi_printNum:
  1920                           	opt callstack 0
  1921                           
  1922 ;; *************** function _writeStr *****************
  1923 ;; Defined at:
  1924 ;;		line 322 in file "OledApi.c"
  1925 ;; Parameters:    Size  Location     Type
  1926 ;;  value           2   10[COMRAM] PTR const unsigned char 
  1927 ;;		 -> OledApi_printNum@s(17), ?_OledApi_printf(1), STR_2(5), 
  1928 ;;  len             1   12[COMRAM] unsigned char 
  1929 ;; Auto vars:     Size  Location     Type
  1930 ;;		None
  1931 ;; Return value:  Size  Location     Type
  1932 ;;                  1    wreg      void 
  1933 ;; Registers used:
  1934 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1935 ;; Tracked objects:
  1936 ;;		On entry : 0/0
  1937 ;;		On exit  : 0/0
  1938 ;;		Unchanged: 0/0
  1939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1940 ;;      Params:         3       0       0       0       0       0       0       0       0
  1941 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1942 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1943 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1944 ;;Total ram usage:        3 bytes
  1945 ;; Hardware stack levels used:    1
  1946 ;; Hardware stack levels required when called:    2
  1947 ;; This function calls:
  1948 ;;		_send
  1949 ;; This function is called by:
  1950 ;;		_OledApi_printNum
  1951 ;;		_OledApi_printStr
  1952 ;; This function uses a non-reentrant model
  1953 ;;
  1954                           
  1955                           	psect	text7
  1956  002386                     __ptext7:
  1957                           	opt callstack 0
  1958  002386                     _writeStr:
  1959                           	opt callstack 25
  1960  002386                     
  1961                           ;OledApi.c: 322: static void writeStr(const uint8_t *value, uint8_t len);OledApi.c: 323:
      +                           {;OledApi.c: 324:  send(1, value, len);
  1962  002386  C00B  F002         	movff	writeStr@value,send@buf
  1963  00238A  C00C  F003         	movff	writeStr@value+1,send@buf+1
  1964  00238E  C00D  F004         	movff	writeStr@len,send@count
  1965  002392  6A05               	clrf	(send@count+1)^0,c
  1966  002394  0E01               	movlw	1
  1967  002396  ECC4  F00E         	call	_send
  1968  00239A  0012               	return		;funcret
  1969  00239C                     __end_of_writeStr:
  1970                           	opt callstack 0
  1971                           
  1972 ;; *************** function _exit *****************
  1973 ;; Defined at:
  1974 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\exit.c"
  1975 ;; Parameters:    Size  Location     Type
  1976 ;;  code            2   10[COMRAM] int 
  1977 ;; Auto vars:     Size  Location     Type
  1978 ;;		None
  1979 ;; Return value:  Size  Location     Type
  1980 ;;                  1    wreg      void 
  1981 ;; Registers used:
  1982 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  1983 ;; Tracked objects:
  1984 ;;		On entry : 0/0
  1985 ;;		On exit  : 0/0
  1986 ;;		Unchanged: 0/0
  1987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1988 ;;      Params:         2       0       0       0       0       0       0       0       0
  1989 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1990 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1991 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1992 ;;Total ram usage:        2 bytes
  1993 ;; Hardware stack levels used:    1
  1994 ;; Hardware stack levels required when called:    2
  1995 ;; This function calls:
  1996 ;;		__Exit
  1997 ;;		___funcs_on_exit
  1998 ;; This function is called by:
  1999 ;;		_OledApi_printSpec
  2000 ;;		_OledApi_printf
  2001 ;;		_OledApi_printNum
  2002 ;; This function uses a non-reentrant model
  2003 ;;
  2004                           
  2005                           	psect	text8
  2006  00239C                     __ptext8:
  2007                           	opt callstack 0
  2008  00239C                     _exit:
  2009                           	opt callstack 26
  2010  00239C  EC52  F00E         	call	___funcs_on_exit	;wreg free
  2011  0023A0  C00B  F001         	movff	exit@code,__Exit@ec
  2012  0023A4  C00C  F002         	movff	exit@code+1,__Exit@ec+1
  2013  0023A8  ECE3  F011         	call	__Exit	;wreg free
  2014  0023AC  0012               	return		;funcret
  2015  0023AE                     __end_of_exit:
  2016                           	opt callstack 0
  2017                           
  2018 ;; *************** function ___funcs_on_exit *****************
  2019 ;; Defined at:
  2020 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atexit.c"
  2021 ;; Parameters:    Size  Location     Type
  2022 ;;		None
  2023 ;; Auto vars:     Size  Location     Type
  2024 ;;  arg             2    8[COMRAM] PTR void 
  2025 ;;		 -> RAM(2047), 
  2026 ;;  func            2    6[COMRAM] PTR FTN(PTR void ,)void 
  2027 ;;		 -> call(1), 
  2028 ;; Return value:  Size  Location     Type
  2029 ;;                  1    wreg      void 
  2030 ;; Registers used:
  2031 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  2032 ;; Tracked objects:
  2033 ;;		On entry : 0/0
  2034 ;;		On exit  : 0/0
  2035 ;;		Unchanged: 0/0
  2036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2037 ;;      Params:         0       0       0       0       0       0       0       0       0
  2038 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2039 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2040 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2041 ;;Total ram usage:        8 bytes
  2042 ;; Hardware stack levels used:    1
  2043 ;; Hardware stack levels required when called:    1
  2044 ;; This function calls:
  2045 ;;		_call
  2046 ;; This function is called by:
  2047 ;;		_exit
  2048 ;; This function uses a non-reentrant model
  2049 ;;
  2050                           
  2051                           	psect	text9
  2052  001CA4                     __ptext9:
  2053                           	opt callstack 0
  2054  001CA4                     ___funcs_on_exit:
  2055                           	opt callstack 26
  2056  001CA4  EFB9  F00E         	goto	l2248
  2057  001CA8                     l2238:
  2058                           
  2059                           ; BSR set to: 0
  2060  001CA8  C071  F003         	movff	_slot,??___funcs_on_exit
  2061  001CAC  C072  F004         	movff	_slot+1,??___funcs_on_exit+1
  2062  001CB0  90D8               	bcf	status,0,c
  2063  001CB2  3603               	rlcf	??___funcs_on_exit^0,f,c
  2064  001CB4  3604               	rlcf	(??___funcs_on_exit+1)^0,f,c
  2065  001CB6  C073  F005         	movff	_head,??___funcs_on_exit+2
  2066  001CBA  C074  F006         	movff	_head+1,??___funcs_on_exit+3
  2067  001CBE  5003               	movf	??___funcs_on_exit^0,w,c
  2068  001CC0  2605               	addwf	(??___funcs_on_exit+2)^0,f,c
  2069  001CC2  5004               	movf	(??___funcs_on_exit+1)^0,w,c
  2070  001CC4  2206               	addwfc	(??___funcs_on_exit+3)^0,f,c
  2071  001CC6  0E02               	movlw	2
  2072  001CC8  2405               	addwf	(??___funcs_on_exit+2)^0,w,c
  2073  001CCA  6ED9               	movwf	fsr2l,c
  2074  001CCC  0E00               	movlw	0
  2075  001CCE  2006               	addwfc	(??___funcs_on_exit+3)^0,w,c
  2076  001CD0  6EDA               	movwf	fsr2h,c
  2077  001CD2  CFDE F007          	movff	postinc2,___funcs_on_exit@func
  2078  001CD6  CFDD F008          	movff	postdec2,___funcs_on_exit@func+1
  2079  001CDA  C071  F003         	movff	_slot,??___funcs_on_exit
  2080  001CDE  C072  F004         	movff	_slot+1,??___funcs_on_exit+1
  2081  001CE2  90D8               	bcf	status,0,c
  2082  001CE4  3603               	rlcf	??___funcs_on_exit^0,f,c
  2083  001CE6  3604               	rlcf	(??___funcs_on_exit+1)^0,f,c
  2084  001CE8  C073  F005         	movff	_head,??___funcs_on_exit+2
  2085  001CEC  C074  F006         	movff	_head+1,??___funcs_on_exit+3
  2086  001CF0  5003               	movf	??___funcs_on_exit^0,w,c
  2087  001CF2  2605               	addwf	(??___funcs_on_exit+2)^0,f,c
  2088  001CF4  5004               	movf	(??___funcs_on_exit+1)^0,w,c
  2089  001CF6  2206               	addwfc	(??___funcs_on_exit+3)^0,f,c
  2090  001CF8  0E42               	movlw	66
  2091  001CFA  2405               	addwf	(??___funcs_on_exit+2)^0,w,c
  2092  001CFC  6ED9               	movwf	fsr2l,c
  2093  001CFE  0E00               	movlw	0
  2094  001D00  2006               	addwfc	(??___funcs_on_exit+3)^0,w,c
  2095  001D02  6EDA               	movwf	fsr2h,c
  2096  001D04  CFDE F009          	movff	postinc2,___funcs_on_exit@arg
  2097  001D08  CFDD F00A          	movff	postdec2,___funcs_on_exit@arg+1
  2098  001D0C                     
  2099                           ; BSR set to: 0
  2100  001D0C  C009  F001         	movff	___funcs_on_exit@arg,call@p
  2101  001D10  C00A  F002         	movff	___funcs_on_exit@arg+1,call@p+1
  2102  001D14  D802               	call	u1828
  2103  001D16  EF97  F00E         	goto	u1829
  2104  001D1A                     u1828:
  2105  001D1A  0005               	push	
  2106  001D1C  6EFA               	movwf	pclath,c
  2107  001D1E  5007               	movf	___funcs_on_exit@func^0,w,c
  2108  001D20  6EFD               	movwf	tosl,c
  2109  001D22  5008               	movf	(___funcs_on_exit@func+1)^0,w,c
  2110  001D24  6EFE               	movwf	tosh,c
  2111  001D26  50F8               	movf	tblptru,w,c
  2112  001D28  6EFF               	movwf	tosu,c
  2113  001D2A  50FA               	movf	pclath,w,c
  2114  001D2C  0012               	return		;indir
  2115  001D2E                     u1829:
  2116  001D2E                     l2242:
  2117  001D2E  0100               	movlb	0	; () banked
  2118  001D30  5171               	movf	_slot& (0+255),w,b
  2119  001D32  6E03               	movwf	??___funcs_on_exit^0,c
  2120  001D34  5172               	movf	(_slot+1)& (0+255),w,b
  2121  001D36  6E04               	movwf	(??___funcs_on_exit+1)^0,c
  2122  001D38  0E01               	movlw	1
  2123  001D3A  5F71               	subwf	_slot& (0+255),f,b
  2124  001D3C  0E00               	movlw	0
  2125  001D3E  5B72               	subwfb	(_slot+1)& (0+255),f,b
  2126  001D40  BE04               	btfsc	(??___funcs_on_exit+1)^0,7,c
  2127  001D42  EFAD  F00E         	goto	u1830
  2128  001D46  5004               	movf	(??___funcs_on_exit+1)^0,w,c
  2129  001D48  E106               	bnz	u1831
  2130  001D4A  0403               	decf	??___funcs_on_exit^0,w,c
  2131  001D4C  B0D8               	btfsc	status,0,c
  2132  001D4E  EFAB  F00E         	goto	u1831
  2133  001D52  EFAD  F00E         	goto	u1830
  2134  001D56                     u1831:
  2135  001D56  EF54  F00E         	goto	l2238
  2136  001D5A                     u1830:
  2137  001D5A                     
  2138                           ; BSR set to: 0
  2139  001D5A  C073  FFD9         	movff	_head,fsr2l
  2140  001D5E  C074  FFDA         	movff	_head+1,fsr2h
  2141  001D62  CFDE F073          	movff	postinc2,_head
  2142  001D66  CFDD F074          	movff	postdec2,_head+1
  2143  001D6A                     
  2144                           ; BSR set to: 0
  2145  001D6A  0E00               	movlw	0
  2146  001D6C  6F72               	movwf	(_slot+1)& (0+255),b
  2147  001D6E  0E20               	movlw	32
  2148  001D70  6F71               	movwf	_slot& (0+255),b
  2149  001D72                     l2248:
  2150  001D72  0100               	movlb	0	; () banked
  2151  001D74  5173               	movf	_head& (0+255),w,b
  2152  001D76  1174               	iorwf	(_head+1)& (0+255),w,b
  2153  001D78  A4D8               	btfss	status,2,c
  2154  001D7A  EFC1  F00E         	goto	u1841
  2155  001D7E  EFC3  F00E         	goto	u1840
  2156  001D82                     u1841:
  2157  001D82  EF97  F00E         	goto	l2242
  2158  001D86                     u1840:
  2159  001D86                     
  2160                           ; BSR set to: 0
  2161  001D86  0012               	return		;funcret
  2162  001D88                     __end_of___funcs_on_exit:
  2163                           	opt callstack 0
  2164                           
  2165 ;; *************** function _call *****************
  2166 ;; Defined at:
  2167 ;;		line 45 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atexit.c"
  2168 ;; Parameters:    Size  Location     Type
  2169 ;;  p               2    0[COMRAM] PTR void 
  2170 ;;		 -> RAM(2047), 
  2171 ;; Auto vars:     Size  Location     Type
  2172 ;;		None
  2173 ;; Return value:  Size  Location     Type
  2174 ;;                  1    wreg      void 
  2175 ;; Registers used:
  2176 ;;		None
  2177 ;; Tracked objects:
  2178 ;;		On entry : 0/0
  2179 ;;		On exit  : 0/0
  2180 ;;		Unchanged: 0/0
  2181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2182 ;;      Params:         2       0       0       0       0       0       0       0       0
  2183 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2184 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2185 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2186 ;;Total ram usage:        2 bytes
  2187 ;; Hardware stack levels used:    1
  2188 ;; This function calls:
  2189 ;;		Nothing
  2190 ;; This function is called by:
  2191 ;;		___funcs_on_exit
  2192 ;; This function uses a non-reentrant model
  2193 ;;
  2194                           
  2195                           	psect	text10
  2196  0023CC                     __ptext10:
  2197                           	opt callstack 0
  2198  0023CC                     _call:
  2199                           	opt callstack 26
  2200  0023CC  0012               	return		;funcret
  2201  0023CE                     __end_of_call:
  2202                           	opt callstack 0
  2203                           
  2204 ;; *************** function __Exit *****************
  2205 ;; Defined at:
  2206 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\_Exit.c"
  2207 ;; Parameters:    Size  Location     Type
  2208 ;;  ec              2    0[COMRAM] int 
  2209 ;; Auto vars:     Size  Location     Type
  2210 ;;		None
  2211 ;; Return value:  Size  Location     Type
  2212 ;;                  1    wreg      void 
  2213 ;; Registers used:
  2214 ;;		None
  2215 ;; Tracked objects:
  2216 ;;		On entry : 0/0
  2217 ;;		On exit  : 0/0
  2218 ;;		Unchanged: 0/0
  2219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2220 ;;      Params:         2       0       0       0       0       0       0       0       0
  2221 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2222 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2223 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2224 ;;Total ram usage:        2 bytes
  2225 ;; Hardware stack levels used:    1
  2226 ;; This function calls:
  2227 ;;		Nothing
  2228 ;; This function is called by:
  2229 ;;		_exit
  2230 ;; This function uses a non-reentrant model
  2231 ;;
  2232                           
  2233                           	psect	text11
  2234  0023C6                     __ptext11:
  2235                           	opt callstack 0
  2236  0023C6                     __Exit:
  2237                           	opt callstack 27
  2238  0023C6                     l978:
  2239  0023C6  EFE3  F011         	goto	l978
  2240  0023CA  0012               	return		;funcret
  2241  0023CC                     __end_of__Exit:
  2242                           	opt callstack 0
  2243                           
  2244 ;; *************** function ___xxtofl *****************
  2245 ;; Defined at:
  2246 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
  2247 ;; Parameters:    Size  Location     Type
  2248 ;;  sign            1    wreg     unsigned char 
  2249 ;;  val             4    0[COMRAM] long 
  2250 ;; Auto vars:     Size  Location     Type
  2251 ;;  sign            1    8[COMRAM] unsigned char 
  2252 ;;  arg             4   10[COMRAM] unsigned long 
  2253 ;;  exp             1    9[COMRAM] unsigned char 
  2254 ;; Return value:  Size  Location     Type
  2255 ;;                  4    0[COMRAM] unsigned char 
  2256 ;; Registers used:
  2257 ;;		wreg, status,2, status,0
  2258 ;; Tracked objects:
  2259 ;;		On entry : 0/0
  2260 ;;		On exit  : 0/0
  2261 ;;		Unchanged: 0/0
  2262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2263 ;;      Params:         4       0       0       0       0       0       0       0       0
  2264 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2265 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2266 ;;      Totals:        14       0       0       0       0       0       0       0       0
  2267 ;;Total ram usage:       14 bytes
  2268 ;; Hardware stack levels used:    1
  2269 ;; This function calls:
  2270 ;;		Nothing
  2271 ;; This function is called by:
  2272 ;;		_OledApi_printf
  2273 ;;		_OledApi_printNum
  2274 ;; This function uses a non-reentrant model
  2275 ;;
  2276                           
  2277                           	psect	text12
  2278  0016EE                     __ptext12:
  2279                           	opt callstack 0
  2280  0016EE                     ___xxtofl:
  2281                           	opt callstack 28
  2282                           
  2283                           ;incstack = 0
  2284                           ;___xxtofl@sign stored from wreg
  2285  0016EE  6E09               	movwf	___xxtofl@sign^0,c
  2286  0016F0  5009               	movf	___xxtofl@sign^0,w,c
  2287  0016F2  B4D8               	btfsc	status,2,c
  2288  0016F4  EF7E  F00B         	goto	u2321
  2289  0016F8  EF80  F00B         	goto	u2320
  2290  0016FC                     u2321:
  2291  0016FC  EFA2  F00B         	goto	l952
  2292  001700                     u2320:
  2293  001700  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  2294  001702  EF87  F00B         	goto	u2330
  2295  001706  EF85  F00B         	goto	u2331
  2296  00170A                     u2331:
  2297  00170A  EFA2  F00B         	goto	l952
  2298  00170E                     u2330:
  2299  00170E  C001  F005         	movff	___xxtofl@val,??___xxtofl
  2300  001712  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  2301  001716  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  2302  00171A  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  2303  00171E  1E05               	comf	??___xxtofl^0,f,c
  2304  001720  1E06               	comf	(??___xxtofl+1)^0,f,c
  2305  001722  1E07               	comf	(??___xxtofl+2)^0,f,c
  2306  001724  1E08               	comf	(??___xxtofl+3)^0,f,c
  2307  001726  2A05               	incf	??___xxtofl^0,f,c
  2308  001728  0E00               	movlw	0
  2309  00172A  2206               	addwfc	(??___xxtofl+1)^0,f,c
  2310  00172C  2207               	addwfc	(??___xxtofl+2)^0,f,c
  2311  00172E  2208               	addwfc	(??___xxtofl+3)^0,f,c
  2312  001730  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  2313  001734  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  2314  001738  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  2315  00173C  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  2316  001740  EFAA  F00B         	goto	l2582
  2317  001744                     l952:
  2318  001744  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  2319  001748  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2320  00174C  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2321  001750  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2322  001754                     l2582:
  2323  001754  5001               	movf	___xxtofl@val^0,w,c
  2324  001756  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  2325  001758  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  2326  00175A  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  2327  00175C  A4D8               	btfss	status,2,c
  2328  00175E  EFB3  F00B         	goto	u2341
  2329  001762  EFB5  F00B         	goto	u2340
  2330  001766                     u2341:
  2331  001766  EFBF  F00B         	goto	l2588
  2332  00176A                     u2340:
  2333  00176A  0E00               	movlw	0
  2334  00176C  6E01               	movwf	?___xxtofl^0,c
  2335  00176E  0E00               	movlw	0
  2336  001770  6E02               	movwf	(?___xxtofl+1)^0,c
  2337  001772  0E00               	movlw	0
  2338  001774  6E03               	movwf	(?___xxtofl+2)^0,c
  2339  001776  0E00               	movlw	0
  2340  001778  6E04               	movwf	(?___xxtofl+3)^0,c
  2341  00177A  EF50  F00C         	goto	l955
  2342  00177E                     l2588:
  2343  00177E  0E96               	movlw	150
  2344  001780  6E0A               	movwf	___xxtofl@exp^0,c
  2345  001782  EFC9  F00B         	goto	l2592
  2346  001786                     l2590:
  2347  001786  2A0A               	incf	___xxtofl@exp^0,f,c
  2348  001788  90D8               	bcf	status,0,c
  2349  00178A  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  2350  00178C  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  2351  00178E  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  2352  001790  320B               	rrcf	___xxtofl@arg^0,f,c
  2353  001792                     l2592:
  2354  001792  0E00               	movlw	0
  2355  001794  140B               	andwf	___xxtofl@arg^0,w,c
  2356  001796  6E05               	movwf	??___xxtofl^0,c
  2357  001798  0E00               	movlw	0
  2358  00179A  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  2359  00179C  6E06               	movwf	(??___xxtofl+1)^0,c
  2360  00179E  0E00               	movlw	0
  2361  0017A0  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  2362  0017A2  6E07               	movwf	(??___xxtofl+2)^0,c
  2363  0017A4  0EFE               	movlw	254
  2364  0017A6  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  2365  0017A8  6E08               	movwf	(??___xxtofl+3)^0,c
  2366  0017AA  5005               	movf	??___xxtofl^0,w,c
  2367  0017AC  1006               	iorwf	(??___xxtofl+1)^0,w,c
  2368  0017AE  1007               	iorwf	(??___xxtofl+2)^0,w,c
  2369  0017B0  1008               	iorwf	(??___xxtofl+3)^0,w,c
  2370  0017B2  A4D8               	btfss	status,2,c
  2371  0017B4  EFDE  F00B         	goto	u2351
  2372  0017B8  EFE0  F00B         	goto	u2350
  2373  0017BC                     u2351:
  2374  0017BC  EFC3  F00B         	goto	l2590
  2375  0017C0                     u2350:
  2376  0017C0  EFEE  F00B         	goto	l959
  2377  0017C4                     l2594:
  2378  0017C4  2A0A               	incf	___xxtofl@exp^0,f,c
  2379  0017C6  0E01               	movlw	1
  2380  0017C8  260B               	addwf	___xxtofl@arg^0,f,c
  2381  0017CA  0E00               	movlw	0
  2382  0017CC  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  2383  0017CE  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  2384  0017D0  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  2385  0017D2  90D8               	bcf	status,0,c
  2386  0017D4  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  2387  0017D6  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  2388  0017D8  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  2389  0017DA  320B               	rrcf	___xxtofl@arg^0,f,c
  2390  0017DC                     l959:
  2391  0017DC  0E00               	movlw	0
  2392  0017DE  140B               	andwf	___xxtofl@arg^0,w,c
  2393  0017E0  6E05               	movwf	??___xxtofl^0,c
  2394  0017E2  0E00               	movlw	0
  2395  0017E4  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  2396  0017E6  6E06               	movwf	(??___xxtofl+1)^0,c
  2397  0017E8  0E00               	movlw	0
  2398  0017EA  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  2399  0017EC  6E07               	movwf	(??___xxtofl+2)^0,c
  2400  0017EE  0EFF               	movlw	255
  2401  0017F0  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  2402  0017F2  6E08               	movwf	(??___xxtofl+3)^0,c
  2403  0017F4  5005               	movf	??___xxtofl^0,w,c
  2404  0017F6  1006               	iorwf	(??___xxtofl+1)^0,w,c
  2405  0017F8  1007               	iorwf	(??___xxtofl+2)^0,w,c
  2406  0017FA  1008               	iorwf	(??___xxtofl+3)^0,w,c
  2407  0017FC  A4D8               	btfss	status,2,c
  2408  0017FE  EF03  F00C         	goto	u2361
  2409  001802  EF05  F00C         	goto	u2360
  2410  001806                     u2361:
  2411  001806  EFE2  F00B         	goto	l2594
  2412  00180A                     u2360:
  2413  00180A  EF0D  F00C         	goto	l2602
  2414  00180E                     l2600:
  2415  00180E  060A               	decf	___xxtofl@exp^0,f,c
  2416  001810  90D8               	bcf	status,0,c
  2417  001812  360B               	rlcf	___xxtofl@arg^0,f,c
  2418  001814  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  2419  001816  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  2420  001818  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  2421  00181A                     l2602:
  2422  00181A  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  2423  00181C  EF12  F00C         	goto	u2371
  2424  001820  EF14  F00C         	goto	u2370
  2425  001824                     u2371:
  2426  001824  EF1C  F00C         	goto	l966
  2427  001828                     u2370:
  2428  001828  0E02               	movlw	2
  2429  00182A  600A               	cpfslt	___xxtofl@exp^0,c
  2430  00182C  EF1A  F00C         	goto	u2381
  2431  001830  EF1C  F00C         	goto	u2380
  2432  001834                     u2381:
  2433  001834  EF07  F00C         	goto	l2600
  2434  001838                     u2380:
  2435  001838                     l966:
  2436  001838  B00A               	btfsc	___xxtofl@exp^0,0,c
  2437  00183A  EF21  F00C         	goto	u2391
  2438  00183E  EF23  F00C         	goto	u2390
  2439  001842                     u2391:
  2440  001842  EF24  F00C         	goto	l2608
  2441  001846                     u2390:
  2442  001846  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  2443  001848                     l2608:
  2444  001848  90D8               	bcf	status,0,c
  2445  00184A  320A               	rrcf	___xxtofl@exp^0,f,c
  2446  00184C  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  2447  001850  6A06               	clrf	(??___xxtofl+1)^0,c
  2448  001852  6A07               	clrf	(??___xxtofl+2)^0,c
  2449  001854  6A08               	clrf	(??___xxtofl+3)^0,c
  2450  001856  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  2451  00185A  6A07               	clrf	(??___xxtofl+2)^0,c
  2452  00185C  6A06               	clrf	(??___xxtofl+1)^0,c
  2453  00185E  6A05               	clrf	??___xxtofl^0,c
  2454  001860  5005               	movf	??___xxtofl^0,w,c
  2455  001862  120B               	iorwf	___xxtofl@arg^0,f,c
  2456  001864  5006               	movf	(??___xxtofl+1)^0,w,c
  2457  001866  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  2458  001868  5007               	movf	(??___xxtofl+2)^0,w,c
  2459  00186A  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  2460  00186C  5008               	movf	(??___xxtofl+3)^0,w,c
  2461  00186E  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  2462  001870  5009               	movf	___xxtofl@sign^0,w,c
  2463  001872  B4D8               	btfsc	status,2,c
  2464  001874  EF3E  F00C         	goto	u2401
  2465  001878  EF40  F00C         	goto	u2400
  2466  00187C                     u2401:
  2467  00187C  EF48  F00C         	goto	l2618
  2468  001880                     u2400:
  2469  001880  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  2470  001882  EF47  F00C         	goto	u2410
  2471  001886  EF45  F00C         	goto	u2411
  2472  00188A                     u2411:
  2473  00188A  EF48  F00C         	goto	l2618
  2474  00188E                     u2410:
  2475  00188E  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  2476  001890                     l2618:
  2477  001890  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  2478  001894  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  2479  001898  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  2480  00189C  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  2481  0018A0                     l955:
  2482  0018A0  0012               	return		;funcret
  2483  0018A2                     __end_of___xxtofl:
  2484                           	opt callstack 0
  2485                           
  2486 ;; *************** function ___fltol *****************
  2487 ;; Defined at:
  2488 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
  2489 ;; Parameters:    Size  Location     Type
  2490 ;;  f1              4    0[COMRAM] unsigned char 
  2491 ;; Auto vars:     Size  Location     Type
  2492 ;;  exp1            1    9[COMRAM] unsigned char 
  2493 ;;  sign1           1    8[COMRAM] unsigned char 
  2494 ;; Return value:  Size  Location     Type
  2495 ;;                  4    0[COMRAM] long 
  2496 ;; Registers used:
  2497 ;;		wreg, status,2, status,0
  2498 ;; Tracked objects:
  2499 ;;		On entry : 0/0
  2500 ;;		On exit  : 0/0
  2501 ;;		Unchanged: 0/0
  2502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2503 ;;      Params:         4       0       0       0       0       0       0       0       0
  2504 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2505 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2506 ;;      Totals:        10       0       0       0       0       0       0       0       0
  2507 ;;Total ram usage:       10 bytes
  2508 ;; Hardware stack levels used:    1
  2509 ;; This function calls:
  2510 ;;		Nothing
  2511 ;; This function is called by:
  2512 ;;		_OledApi_printNum
  2513 ;; This function uses a non-reentrant model
  2514 ;;
  2515                           
  2516                           	psect	text13
  2517  0019AE                     __ptext13:
  2518                           	opt callstack 0
  2519  0019AE                     ___fltol:
  2520                           	opt callstack 27
  2521  0019AE  3403               	rlcf	(___fltol@f1+2)^0,w,c
  2522  0019B0  3404               	rlcf	(___fltol@f1+3)^0,w,c
  2523  0019B2  6E0A               	movwf	___fltol@exp1^0,c
  2524  0019B4  500A               	movf	___fltol@exp1^0,w,c
  2525  0019B6  A4D8               	btfss	status,2,c
  2526  0019B8  EFE0  F00C         	goto	u2251
  2527  0019BC  EFE2  F00C         	goto	u2250
  2528  0019C0                     u2251:
  2529  0019C0  EFEC  F00C         	goto	l2538
  2530  0019C4                     u2250:
  2531  0019C4                     l2534:
  2532  0019C4  0E00               	movlw	0
  2533  0019C6  6E01               	movwf	?___fltol^0,c
  2534  0019C8  0E00               	movlw	0
  2535  0019CA  6E02               	movwf	(?___fltol+1)^0,c
  2536  0019CC  0E00               	movlw	0
  2537  0019CE  6E03               	movwf	(?___fltol+2)^0,c
  2538  0019D0  0E00               	movlw	0
  2539  0019D2  6E04               	movwf	(?___fltol+3)^0,c
  2540  0019D4  EF59  F00D         	goto	l594
  2541  0019D8                     l2538:
  2542  0019D8  C001  F005         	movff	___fltol@f1,??___fltol
  2543  0019DC  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  2544  0019E0  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  2545  0019E4  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  2546  0019E8  0E20               	movlw	32
  2547  0019EA  EFFC  F00C         	goto	u2260
  2548  0019EE                     u2265:
  2549  0019EE  90D8               	bcf	status,0,c
  2550  0019F0  3208               	rrcf	(??___fltol+3)^0,f,c
  2551  0019F2  3207               	rrcf	(??___fltol+2)^0,f,c
  2552  0019F4  3206               	rrcf	(??___fltol+1)^0,f,c
  2553  0019F6  3205               	rrcf	??___fltol^0,f,c
  2554  0019F8                     u2260:
  2555  0019F8  2EE8               	decfsz	wreg,f,c
  2556  0019FA  EFF7  F00C         	goto	u2265
  2557  0019FE  5005               	movf	??___fltol^0,w,c
  2558  001A00  6E09               	movwf	___fltol@sign1^0,c
  2559  001A02  8E03               	bsf	(___fltol@f1+2)^0,7,c
  2560  001A04  0EFF               	movlw	255
  2561  001A06  1601               	andwf	___fltol@f1^0,f,c
  2562  001A08  0EFF               	movlw	255
  2563  001A0A  1602               	andwf	(___fltol@f1+1)^0,f,c
  2564  001A0C  0EFF               	movlw	255
  2565  001A0E  1603               	andwf	(___fltol@f1+2)^0,f,c
  2566  001A10  0E00               	movlw	0
  2567  001A12  1604               	andwf	(___fltol@f1+3)^0,f,c
  2568  001A14  0E96               	movlw	150
  2569  001A16  5E0A               	subwf	___fltol@exp1^0,f,c
  2570  001A18  BE0A               	btfsc	___fltol@exp1^0,7,c
  2571  001A1A  EF13  F00D         	goto	u2270
  2572  001A1E  EF11  F00D         	goto	u2271
  2573  001A22                     u2271:
  2574  001A22  EF29  F00D         	goto	l2558
  2575  001A26                     u2270:
  2576  001A26  500A               	movf	___fltol@exp1^0,w,c
  2577  001A28  0A80               	xorlw	128
  2578  001A2A  0F97               	addlw	151
  2579  001A2C  B0D8               	btfsc	status,0,c
  2580  001A2E  EF1B  F00D         	goto	u2281
  2581  001A32  EF1D  F00D         	goto	u2280
  2582  001A36                     u2281:
  2583  001A36  EF1F  F00D         	goto	l2554
  2584  001A3A                     u2280:
  2585  001A3A  EFE2  F00C         	goto	l2534
  2586  001A3E                     l2554:
  2587  001A3E  90D8               	bcf	status,0,c
  2588  001A40  3204               	rrcf	(___fltol@f1+3)^0,f,c
  2589  001A42  3203               	rrcf	(___fltol@f1+2)^0,f,c
  2590  001A44  3202               	rrcf	(___fltol@f1+1)^0,f,c
  2591  001A46  3201               	rrcf	___fltol@f1^0,f,c
  2592  001A48  3E0A               	incfsz	___fltol@exp1^0,f,c
  2593  001A4A  EF1F  F00D         	goto	l2554
  2594  001A4E  EF41  F00D         	goto	l2568
  2595  001A52                     l2558:
  2596  001A52  0E1F               	movlw	31
  2597  001A54  640A               	cpfsgt	___fltol@exp1^0,c
  2598  001A56  EF2F  F00D         	goto	u2291
  2599  001A5A  EF31  F00D         	goto	u2290
  2600  001A5E                     u2291:
  2601  001A5E  EF39  F00D         	goto	l2566
  2602  001A62                     u2290:
  2603  001A62  EFE2  F00C         	goto	l2534
  2604  001A66                     l2564:
  2605  001A66  90D8               	bcf	status,0,c
  2606  001A68  3601               	rlcf	___fltol@f1^0,f,c
  2607  001A6A  3602               	rlcf	(___fltol@f1+1)^0,f,c
  2608  001A6C  3603               	rlcf	(___fltol@f1+2)^0,f,c
  2609  001A6E  3604               	rlcf	(___fltol@f1+3)^0,f,c
  2610  001A70  060A               	decf	___fltol@exp1^0,f,c
  2611  001A72                     l2566:
  2612  001A72  500A               	movf	___fltol@exp1^0,w,c
  2613  001A74  A4D8               	btfss	status,2,c
  2614  001A76  EF3F  F00D         	goto	u2301
  2615  001A7A  EF41  F00D         	goto	u2300
  2616  001A7E                     u2301:
  2617  001A7E  EF33  F00D         	goto	l2564
  2618  001A82                     u2300:
  2619  001A82                     l2568:
  2620  001A82  5009               	movf	___fltol@sign1^0,w,c
  2621  001A84  B4D8               	btfsc	status,2,c
  2622  001A86  EF47  F00D         	goto	u2311
  2623  001A8A  EF49  F00D         	goto	u2310
  2624  001A8E                     u2311:
  2625  001A8E  EF51  F00D         	goto	l2572
  2626  001A92                     u2310:
  2627  001A92  1E04               	comf	(___fltol@f1+3)^0,f,c
  2628  001A94  1E03               	comf	(___fltol@f1+2)^0,f,c
  2629  001A96  1E02               	comf	(___fltol@f1+1)^0,f,c
  2630  001A98  6C01               	negf	___fltol@f1^0,c
  2631  001A9A  0E00               	movlw	0
  2632  001A9C  2202               	addwfc	(___fltol@f1+1)^0,f,c
  2633  001A9E  2203               	addwfc	(___fltol@f1+2)^0,f,c
  2634  001AA0  2204               	addwfc	(___fltol@f1+3)^0,f,c
  2635  001AA2                     l2572:
  2636  001AA2  C001  F001         	movff	___fltol@f1,?___fltol
  2637  001AA6  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  2638  001AAA  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  2639  001AAE  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  2640  001AB2                     l594:
  2641  001AB2  0012               	return		;funcret
  2642  001AB4                     __end_of___fltol:
  2643                           	opt callstack 0
  2644                           
  2645 ;; *************** function ___flsub *****************
  2646 ;; Defined at:
  2647 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  2648 ;; Parameters:    Size  Location     Type
  2649 ;;  b               4   16[COMRAM] long 
  2650 ;;  a               4   20[COMRAM] long 
  2651 ;; Auto vars:     Size  Location     Type
  2652 ;;		None
  2653 ;; Return value:  Size  Location     Type
  2654 ;;                  4   16[COMRAM] long 
  2655 ;; Registers used:
  2656 ;;		wreg, status,2, status,0, cstack
  2657 ;; Tracked objects:
  2658 ;;		On entry : 0/0
  2659 ;;		On exit  : 0/0
  2660 ;;		Unchanged: 0/0
  2661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2662 ;;      Params:         8       0       0       0       0       0       0       0       0
  2663 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2664 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2665 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2666 ;;Total ram usage:        8 bytes
  2667 ;; Hardware stack levels used:    1
  2668 ;; Hardware stack levels required when called:    1
  2669 ;; This function calls:
  2670 ;;		___fladd
  2671 ;; This function is called by:
  2672 ;;		_OledApi_printNum
  2673 ;; This function uses a non-reentrant model
  2674 ;;
  2675                           
  2676                           	psect	text14
  2677  002110                     __ptext14:
  2678                           	opt callstack 0
  2679  002110                     ___flsub:
  2680                           	opt callstack 26
  2681  002110  0E00               	movlw	0
  2682  002112  1A15               	xorwf	___flsub@a^0,f,c
  2683  002114  0E00               	movlw	0
  2684  002116  1A16               	xorwf	(___flsub@a+1)^0,f,c
  2685  002118  0E00               	movlw	0
  2686  00211A  1A17               	xorwf	(___flsub@a+2)^0,f,c
  2687  00211C  0E80               	movlw	128
  2688  00211E  1A18               	xorwf	(___flsub@a+3)^0,f,c
  2689  002120  C011  F001         	movff	___flsub@b,___fladd@b
  2690  002124  C012  F002         	movff	___flsub@b+1,___fladd@b+1
  2691  002128  C013  F003         	movff	___flsub@b+2,___fladd@b+2
  2692  00212C  C014  F004         	movff	___flsub@b+3,___fladd@b+3
  2693  002130  C015  F005         	movff	___flsub@a,___fladd@a
  2694  002134  C016  F006         	movff	___flsub@a+1,___fladd@a+1
  2695  002138  C017  F007         	movff	___flsub@a+2,___fladd@a+2
  2696  00213C  C018  F008         	movff	___flsub@a+3,___fladd@a+3
  2697  002140  EC14  F004         	call	___fladd	;wreg free
  2698  002144  C001  F011         	movff	?___fladd,?___flsub
  2699  002148  C002  F012         	movff	?___fladd+1,?___flsub+1
  2700  00214C  C003  F013         	movff	?___fladd+2,?___flsub+2
  2701  002150  C004  F014         	movff	?___fladd+3,?___flsub+3
  2702  002154  0012               	return		;funcret
  2703  002156                     __end_of___flsub:
  2704                           	opt callstack 0
  2705                           
  2706 ;; *************** function ___fladd *****************
  2707 ;; Defined at:
  2708 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  2709 ;; Parameters:    Size  Location     Type
  2710 ;;  b               4    0[COMRAM] long 
  2711 ;;  a               4    4[COMRAM] long 
  2712 ;; Auto vars:     Size  Location     Type
  2713 ;;  grs             1   15[COMRAM] unsigned char 
  2714 ;;  bexp            1   14[COMRAM] unsigned char 
  2715 ;;  aexp            1   13[COMRAM] unsigned char 
  2716 ;;  signs           1   12[COMRAM] unsigned char 
  2717 ;; Return value:  Size  Location     Type
  2718 ;;                  4    0[COMRAM] unsigned char 
  2719 ;; Registers used:
  2720 ;;		wreg, status,2, status,0
  2721 ;; Tracked objects:
  2722 ;;		On entry : 0/0
  2723 ;;		On exit  : 0/0
  2724 ;;		Unchanged: 0/0
  2725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2726 ;;      Params:         8       0       0       0       0       0       0       0       0
  2727 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2728 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2729 ;;      Totals:        16       0       0       0       0       0       0       0       0
  2730 ;;Total ram usage:       16 bytes
  2731 ;; Hardware stack levels used:    1
  2732 ;; This function calls:
  2733 ;;		Nothing
  2734 ;; This function is called by:
  2735 ;;		___flsub
  2736 ;; This function uses a non-reentrant model
  2737 ;;
  2738                           
  2739                           	psect	text15
  2740  000828                     __ptext15:
  2741                           	opt callstack 0
  2742  000828                     ___fladd:
  2743                           	opt callstack 26
  2744  000828  5004               	movf	(___fladd@b+3)^0,w,c
  2745  00082A  0B80               	andlw	128
  2746  00082C  6E0D               	movwf	___fladd@signs^0,c
  2747  00082E  5004               	movf	(___fladd@b+3)^0,w,c
  2748  000830  2404               	addwf	(___fladd@b+3)^0,w,c
  2749  000832  6E0F               	movwf	___fladd@bexp^0,c
  2750  000834  AE03               	btfss	(___fladd@b+2)^0,7,c
  2751  000836  EF1F  F004         	goto	u1431
  2752  00083A  EF21  F004         	goto	u1430
  2753  00083E                     u1431:
  2754  00083E  EF22  F004         	goto	l2040
  2755  000842                     u1430:
  2756  000842  800F               	bsf	___fladd@bexp^0,0,c
  2757  000844                     l2040:
  2758  000844  500F               	movf	___fladd@bexp^0,w,c
  2759  000846  B4D8               	btfsc	status,2,c
  2760  000848  EF28  F004         	goto	u1441
  2761  00084C  EF2A  F004         	goto	u1440
  2762  000850                     u1441:
  2763  000850  EF3F  F004         	goto	l2050
  2764  000854                     u1440:
  2765  000854  280F               	incf	___fladd@bexp^0,w,c
  2766  000856  A4D8               	btfss	status,2,c
  2767  000858  EF30  F004         	goto	u1451
  2768  00085C  EF32  F004         	goto	u1450
  2769  000860                     u1451:
  2770  000860  EF3A  F004         	goto	l2046
  2771  000864                     u1450:
  2772  000864  0E00               	movlw	0
  2773  000866  6E01               	movwf	___fladd@b^0,c
  2774  000868  0E00               	movlw	0
  2775  00086A  6E02               	movwf	(___fladd@b+1)^0,c
  2776  00086C  0E00               	movlw	0
  2777  00086E  6E03               	movwf	(___fladd@b+2)^0,c
  2778  000870  0E00               	movlw	0
  2779  000872  6E04               	movwf	(___fladd@b+3)^0,c
  2780  000874                     l2046:
  2781  000874  8E03               	bsf	(___fladd@b+2)^0,7,c
  2782  000876  0E00               	movlw	0
  2783  000878  6E04               	movwf	(___fladd@b+3)^0,c
  2784  00087A  EF47  F004         	goto	l2052
  2785  00087E                     l2050:
  2786  00087E  0E00               	movlw	0
  2787  000880  6E01               	movwf	___fladd@b^0,c
  2788  000882  0E00               	movlw	0
  2789  000884  6E02               	movwf	(___fladd@b+1)^0,c
  2790  000886  0E00               	movlw	0
  2791  000888  6E03               	movwf	(___fladd@b+2)^0,c
  2792  00088A  0E00               	movlw	0
  2793  00088C  6E04               	movwf	(___fladd@b+3)^0,c
  2794  00088E                     l2052:
  2795  00088E  5008               	movf	(___fladd@a+3)^0,w,c
  2796  000890  0B80               	andlw	128
  2797  000892  6E0E               	movwf	___fladd@aexp^0,c
  2798  000894  500D               	movf	___fladd@signs^0,w,c
  2799  000896  180E               	xorwf	___fladd@aexp^0,w,c
  2800  000898  B4D8               	btfsc	status,2,c
  2801  00089A  EF51  F004         	goto	u1461
  2802  00089E  EF53  F004         	goto	u1460
  2803  0008A2                     u1461:
  2804  0008A2  EF54  F004         	goto	l2058
  2805  0008A6                     u1460:
  2806  0008A6  8C0D               	bsf	___fladd@signs^0,6,c
  2807  0008A8                     l2058:
  2808  0008A8  5008               	movf	(___fladd@a+3)^0,w,c
  2809  0008AA  2408               	addwf	(___fladd@a+3)^0,w,c
  2810  0008AC  6E0E               	movwf	___fladd@aexp^0,c
  2811  0008AE  AE07               	btfss	(___fladd@a+2)^0,7,c
  2812  0008B0  EF5C  F004         	goto	u1471
  2813  0008B4  EF5E  F004         	goto	u1470
  2814  0008B8                     u1471:
  2815  0008B8  EF5F  F004         	goto	l2064
  2816  0008BC                     u1470:
  2817  0008BC  800E               	bsf	___fladd@aexp^0,0,c
  2818  0008BE                     l2064:
  2819  0008BE  500E               	movf	___fladd@aexp^0,w,c
  2820  0008C0  B4D8               	btfsc	status,2,c
  2821  0008C2  EF65  F004         	goto	u1481
  2822  0008C6  EF67  F004         	goto	u1480
  2823  0008CA                     u1481:
  2824  0008CA  EF7C  F004         	goto	l2074
  2825  0008CE                     u1480:
  2826  0008CE  280E               	incf	___fladd@aexp^0,w,c
  2827  0008D0  A4D8               	btfss	status,2,c
  2828  0008D2  EF6D  F004         	goto	u1491
  2829  0008D6  EF6F  F004         	goto	u1490
  2830  0008DA                     u1491:
  2831  0008DA  EF77  F004         	goto	l2070
  2832  0008DE                     u1490:
  2833  0008DE  0E00               	movlw	0
  2834  0008E0  6E05               	movwf	___fladd@a^0,c
  2835  0008E2  0E00               	movlw	0
  2836  0008E4  6E06               	movwf	(___fladd@a+1)^0,c
  2837  0008E6  0E00               	movlw	0
  2838  0008E8  6E07               	movwf	(___fladd@a+2)^0,c
  2839  0008EA  0E00               	movlw	0
  2840  0008EC  6E08               	movwf	(___fladd@a+3)^0,c
  2841  0008EE                     l2070:
  2842  0008EE  8E07               	bsf	(___fladd@a+2)^0,7,c
  2843  0008F0  0E00               	movlw	0
  2844  0008F2  6E08               	movwf	(___fladd@a+3)^0,c
  2845  0008F4  EF84  F004         	goto	l2076
  2846  0008F8                     l2074:
  2847  0008F8  0E00               	movlw	0
  2848  0008FA  6E05               	movwf	___fladd@a^0,c
  2849  0008FC  0E00               	movlw	0
  2850  0008FE  6E06               	movwf	(___fladd@a+1)^0,c
  2851  000900  0E00               	movlw	0
  2852  000902  6E07               	movwf	(___fladd@a+2)^0,c
  2853  000904  0E00               	movlw	0
  2854  000906  6E08               	movwf	(___fladd@a+3)^0,c
  2855  000908                     l2076:
  2856  000908  500F               	movf	___fladd@bexp^0,w,c
  2857  00090A  5C0E               	subwf	___fladd@aexp^0,w,c
  2858  00090C  B0D8               	btfsc	status,0,c
  2859  00090E  EF8B  F004         	goto	u1501
  2860  000912  EF8D  F004         	goto	u1500
  2861  000916                     u1501:
  2862  000916  EFB4  F004         	goto	l2112
  2863  00091A                     u1500:
  2864  00091A  AC0D               	btfss	___fladd@signs^0,6,c
  2865  00091C  EF92  F004         	goto	u1511
  2866  000920  EF94  F004         	goto	u1510
  2867  000924                     u1511:
  2868  000924  EF96  F004         	goto	l2082
  2869  000928                     u1510:
  2870  000928  0E80               	movlw	128
  2871  00092A  1A0D               	xorwf	___fladd@signs^0,f,c
  2872  00092C                     l2082:
  2873  00092C  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  2874  000930  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  2875  000934  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  2876  000938  C001  F010         	movff	___fladd@b,___fladd@grs
  2877  00093C  C005  F001         	movff	___fladd@a,___fladd@b
  2878  000940  C010  F005         	movff	___fladd@grs,___fladd@a
  2879  000944  C002  F010         	movff	___fladd@b+1,___fladd@grs
  2880  000948  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  2881  00094C  C010  F006         	movff	___fladd@grs,___fladd@a+1
  2882  000950  C003  F010         	movff	___fladd@b+2,___fladd@grs
  2883  000954  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  2884  000958  C010  F007         	movff	___fladd@grs,___fladd@a+2
  2885  00095C  C004  F010         	movff	___fladd@b+3,___fladd@grs
  2886  000960  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  2887  000964  C010  F008         	movff	___fladd@grs,___fladd@a+3
  2888  000968                     l2112:
  2889  000968  0E00               	movlw	0
  2890  00096A  6E10               	movwf	___fladd@grs^0,c
  2891  00096C  500F               	movf	___fladd@bexp^0,w,c
  2892  00096E  C00E  F009         	movff	___fladd@aexp,??___fladd
  2893  000972  6A0A               	clrf	(??___fladd+1)^0,c
  2894  000974  5E09               	subwf	??___fladd^0,f,c
  2895  000976  0E00               	movlw	0
  2896  000978  5A0A               	subwfb	(??___fladd+1)^0,f,c
  2897  00097A  BE0A               	btfsc	(??___fladd+1)^0,7,c
  2898  00097C  EFC9  F004         	goto	u1521
  2899  000980  500A               	movf	(??___fladd+1)^0,w,c
  2900  000982  E109               	bnz	u1520
  2901  000984  0E1A               	movlw	26
  2902  000986  5C09               	subwf	??___fladd^0,w,c
  2903  000988  A0D8               	btfss	status,0,c
  2904  00098A  EFC9  F004         	goto	u1521
  2905  00098E  EFCB  F004         	goto	u1520
  2906  000992                     u1521:
  2907  000992  EF02  F005         	goto	l826
  2908  000996                     u1520:
  2909  000996  5001               	movf	___fladd@b^0,w,c
  2910  000998  1002               	iorwf	(___fladd@b+1)^0,w,c
  2911  00099A  1003               	iorwf	(___fladd@b+2)^0,w,c
  2912  00099C  1004               	iorwf	(___fladd@b+3)^0,w,c
  2913  00099E  A4D8               	btfss	status,2,c
  2914  0009A0  EFD4  F004         	goto	u1531
  2915  0009A4  EFD7  F004         	goto	u1530
  2916  0009A8                     u1531:
  2917  0009A8  0E01               	movlw	1
  2918  0009AA  EFD8  F004         	goto	u1540
  2919  0009AE                     u1530:
  2920  0009AE  0E00               	movlw	0
  2921  0009B0                     u1540:
  2922  0009B0  6E10               	movwf	___fladd@grs^0,c
  2923  0009B2  0E00               	movlw	0
  2924  0009B4  6E01               	movwf	___fladd@b^0,c
  2925  0009B6  0E00               	movlw	0
  2926  0009B8  6E02               	movwf	(___fladd@b+1)^0,c
  2927  0009BA  0E00               	movlw	0
  2928  0009BC  6E03               	movwf	(___fladd@b+2)^0,c
  2929  0009BE  0E00               	movlw	0
  2930  0009C0  6E04               	movwf	(___fladd@b+3)^0,c
  2931  0009C2  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  2932  0009C6  EF0B  F005         	goto	l825
  2933  0009CA                     l827:
  2934  0009CA  A010               	btfss	___fladd@grs^0,0,c
  2935  0009CC  EFEA  F004         	goto	u1551
  2936  0009D0  EFEC  F004         	goto	u1550
  2937  0009D4                     u1551:
  2938  0009D4  EFF2  F004         	goto	l2124
  2939  0009D8                     u1550:
  2940  0009D8  90D8               	bcf	status,0,c
  2941  0009DA  3010               	rrcf	___fladd@grs^0,w,c
  2942  0009DC  0901               	iorlw	1
  2943  0009DE  6E10               	movwf	___fladd@grs^0,c
  2944  0009E0  EFF4  F004         	goto	l2126
  2945  0009E4                     l2124:
  2946  0009E4  90D8               	bcf	status,0,c
  2947  0009E6  3210               	rrcf	___fladd@grs^0,f,c
  2948  0009E8                     l2126:
  2949  0009E8  A001               	btfss	___fladd@b^0,0,c
  2950  0009EA  EFF9  F004         	goto	u1561
  2951  0009EE  EFFB  F004         	goto	u1560
  2952  0009F2                     u1561:
  2953  0009F2  EFFC  F004         	goto	l2130
  2954  0009F6                     u1560:
  2955  0009F6  8E10               	bsf	___fladd@grs^0,7,c
  2956  0009F8                     l2130:
  2957  0009F8  3404               	rlcf	(___fladd@b+3)^0,w,c
  2958  0009FA  3204               	rrcf	(___fladd@b+3)^0,f,c
  2959  0009FC  3203               	rrcf	(___fladd@b+2)^0,f,c
  2960  0009FE  3202               	rrcf	(___fladd@b+1)^0,f,c
  2961  000A00  3201               	rrcf	___fladd@b^0,f,c
  2962  000A02  2A0F               	incf	___fladd@bexp^0,f,c
  2963  000A04                     l826:
  2964  000A04  500E               	movf	___fladd@aexp^0,w,c
  2965  000A06  5C0F               	subwf	___fladd@bexp^0,w,c
  2966  000A08  A0D8               	btfss	status,0,c
  2967  000A0A  EF09  F005         	goto	u1571
  2968  000A0E  EF0B  F005         	goto	u1570
  2969  000A12                     u1571:
  2970  000A12  EFE5  F004         	goto	l827
  2971  000A16                     u1570:
  2972  000A16                     l825:
  2973  000A16  BC0D               	btfsc	___fladd@signs^0,6,c
  2974  000A18  EF10  F005         	goto	u1581
  2975  000A1C  EF12  F005         	goto	u1580
  2976  000A20                     u1581:
  2977  000A20  EF52  F005         	goto	l2158
  2978  000A24                     u1580:
  2979  000A24  500F               	movf	___fladd@bexp^0,w,c
  2980  000A26  A4D8               	btfss	status,2,c
  2981  000A28  EF18  F005         	goto	u1591
  2982  000A2C  EF1A  F005         	goto	u1590
  2983  000A30                     u1591:
  2984  000A30  EF24  F005         	goto	l2140
  2985  000A34                     u1590:
  2986  000A34  0E00               	movlw	0
  2987  000A36  6E01               	movwf	?___fladd^0,c
  2988  000A38  0E00               	movlw	0
  2989  000A3A  6E02               	movwf	(?___fladd+1)^0,c
  2990  000A3C  0E00               	movlw	0
  2991  000A3E  6E03               	movwf	(?___fladd+2)^0,c
  2992  000A40  0E00               	movlw	0
  2993  000A42  6E04               	movwf	(?___fladd+3)^0,c
  2994  000A44  EF73  F006         	goto	l834
  2995  000A48                     l2140:
  2996  000A48  5005               	movf	___fladd@a^0,w,c
  2997  000A4A  2601               	addwf	___fladd@b^0,f,c
  2998  000A4C  5006               	movf	(___fladd@a+1)^0,w,c
  2999  000A4E  2202               	addwfc	(___fladd@b+1)^0,f,c
  3000  000A50  5007               	movf	(___fladd@a+2)^0,w,c
  3001  000A52  2203               	addwfc	(___fladd@b+2)^0,f,c
  3002  000A54  5008               	movf	(___fladd@a+3)^0,w,c
  3003  000A56  2204               	addwfc	(___fladd@b+3)^0,f,c
  3004  000A58  A004               	btfss	(___fladd@b+3)^0,0,c
  3005  000A5A  EF31  F005         	goto	u1601
  3006  000A5E  EF33  F005         	goto	u1600
  3007  000A62                     u1601:
  3008  000A62  EFDF  F005         	goto	l2194
  3009  000A66                     u1600:
  3010  000A66  A010               	btfss	___fladd@grs^0,0,c
  3011  000A68  EF38  F005         	goto	u1611
  3012  000A6C  EF3A  F005         	goto	u1610
  3013  000A70                     u1611:
  3014  000A70  EF40  F005         	goto	l2148
  3015  000A74                     u1610:
  3016  000A74  90D8               	bcf	status,0,c
  3017  000A76  3010               	rrcf	___fladd@grs^0,w,c
  3018  000A78  0901               	iorlw	1
  3019  000A7A  6E10               	movwf	___fladd@grs^0,c
  3020  000A7C  EF42  F005         	goto	l2150
  3021  000A80                     l2148:
  3022  000A80  90D8               	bcf	status,0,c
  3023  000A82  3210               	rrcf	___fladd@grs^0,f,c
  3024  000A84                     l2150:
  3025  000A84  A001               	btfss	___fladd@b^0,0,c
  3026  000A86  EF47  F005         	goto	u1621
  3027  000A8A  EF49  F005         	goto	u1620
  3028  000A8E                     u1621:
  3029  000A8E  EF4A  F005         	goto	l2154
  3030  000A92                     u1620:
  3031  000A92  8E10               	bsf	___fladd@grs^0,7,c
  3032  000A94                     l2154:
  3033  000A94  3404               	rlcf	(___fladd@b+3)^0,w,c
  3034  000A96  3204               	rrcf	(___fladd@b+3)^0,f,c
  3035  000A98  3203               	rrcf	(___fladd@b+2)^0,f,c
  3036  000A9A  3202               	rrcf	(___fladd@b+1)^0,f,c
  3037  000A9C  3201               	rrcf	___fladd@b^0,f,c
  3038  000A9E  2A0F               	incf	___fladd@bexp^0,f,c
  3039  000AA0  EFDF  F005         	goto	l2194
  3040  000AA4                     l2158:
  3041  000AA4  5005               	movf	___fladd@a^0,w,c
  3042  000AA6  5C01               	subwf	___fladd@b^0,w,c
  3043  000AA8  5006               	movf	(___fladd@a+1)^0,w,c
  3044  000AAA  5802               	subwfb	(___fladd@b+1)^0,w,c
  3045  000AAC  5007               	movf	(___fladd@a+2)^0,w,c
  3046  000AAE  5803               	subwfb	(___fladd@b+2)^0,w,c
  3047  000AB0  5004               	movf	(___fladd@b+3)^0,w,c
  3048  000AB2  0A80               	xorlw	128
  3049  000AB4  6E09               	movwf	??___fladd^0,c
  3050  000AB6  5008               	movf	(___fladd@a+3)^0,w,c
  3051  000AB8  0A80               	xorlw	128
  3052  000ABA  5809               	subwfb	??___fladd^0,w,c
  3053  000ABC  B0D8               	btfsc	status,0,c
  3054  000ABE  EF63  F005         	goto	u1631
  3055  000AC2  EF65  F005         	goto	u1630
  3056  000AC6                     u1631:
  3057  000AC6  EF90  F005         	goto	l2168
  3058  000ACA                     u1630:
  3059  000ACA  5001               	movf	___fladd@b^0,w,c
  3060  000ACC  5C05               	subwf	___fladd@a^0,w,c
  3061  000ACE  6E09               	movwf	??___fladd^0,c
  3062  000AD0  5002               	movf	(___fladd@b+1)^0,w,c
  3063  000AD2  5806               	subwfb	(___fladd@a+1)^0,w,c
  3064  000AD4  6E0A               	movwf	(??___fladd+1)^0,c
  3065  000AD6  5003               	movf	(___fladd@b+2)^0,w,c
  3066  000AD8  5807               	subwfb	(___fladd@a+2)^0,w,c
  3067  000ADA  6E0B               	movwf	(??___fladd+2)^0,c
  3068  000ADC  5004               	movf	(___fladd@b+3)^0,w,c
  3069  000ADE  5808               	subwfb	(___fladd@a+3)^0,w,c
  3070  000AE0  6E0C               	movwf	(??___fladd+3)^0,c
  3071  000AE2  0EFF               	movlw	255
  3072  000AE4  2409               	addwf	??___fladd^0,w,c
  3073  000AE6  6E01               	movwf	___fladd@b^0,c
  3074  000AE8  0EFF               	movlw	255
  3075  000AEA  200A               	addwfc	(??___fladd+1)^0,w,c
  3076  000AEC  6E02               	movwf	(___fladd@b+1)^0,c
  3077  000AEE  0EFF               	movlw	255
  3078  000AF0  200B               	addwfc	(??___fladd+2)^0,w,c
  3079  000AF2  6E03               	movwf	(___fladd@b+2)^0,c
  3080  000AF4  0EFF               	movlw	255
  3081  000AF6  200C               	addwfc	(??___fladd+3)^0,w,c
  3082  000AF8  6E04               	movwf	(___fladd@b+3)^0,c
  3083  000AFA  0E80               	movlw	128
  3084  000AFC  1A0D               	xorwf	___fladd@signs^0,f,c
  3085  000AFE  6C10               	negf	___fladd@grs^0,c
  3086  000B00  5010               	movf	___fladd@grs^0,w,c
  3087  000B02  A4D8               	btfss	status,2,c
  3088  000B04  EF86  F005         	goto	u1641
  3089  000B08  EF88  F005         	goto	u1640
  3090  000B0C                     u1641:
  3091  000B0C  EF98  F005         	goto	l842
  3092  000B10                     u1640:
  3093  000B10  0E01               	movlw	1
  3094  000B12  2601               	addwf	___fladd@b^0,f,c
  3095  000B14  0E00               	movlw	0
  3096  000B16  2202               	addwfc	(___fladd@b+1)^0,f,c
  3097  000B18  2203               	addwfc	(___fladd@b+2)^0,f,c
  3098  000B1A  2204               	addwfc	(___fladd@b+3)^0,f,c
  3099  000B1C  EF98  F005         	goto	l842
  3100  000B20                     l2168:
  3101  000B20  5005               	movf	___fladd@a^0,w,c
  3102  000B22  5E01               	subwf	___fladd@b^0,f,c
  3103  000B24  5006               	movf	(___fladd@a+1)^0,w,c
  3104  000B26  5A02               	subwfb	(___fladd@b+1)^0,f,c
  3105  000B28  5007               	movf	(___fladd@a+2)^0,w,c
  3106  000B2A  5A03               	subwfb	(___fladd@b+2)^0,f,c
  3107  000B2C  5008               	movf	(___fladd@a+3)^0,w,c
  3108  000B2E  5A04               	subwfb	(___fladd@b+3)^0,f,c
  3109  000B30                     l842:
  3110  000B30  5001               	movf	___fladd@b^0,w,c
  3111  000B32  1002               	iorwf	(___fladd@b+1)^0,w,c
  3112  000B34  1003               	iorwf	(___fladd@b+2)^0,w,c
  3113  000B36  1004               	iorwf	(___fladd@b+3)^0,w,c
  3114  000B38  A4D8               	btfss	status,2,c
  3115  000B3A  EFA1  F005         	goto	u1651
  3116  000B3E  EFA3  F005         	goto	u1650
  3117  000B42                     u1651:
  3118  000B42  EFD8  F005         	goto	l2192
  3119  000B46                     u1650:
  3120  000B46  5010               	movf	___fladd@grs^0,w,c
  3121  000B48  A4D8               	btfss	status,2,c
  3122  000B4A  EFA9  F005         	goto	u1661
  3123  000B4E  EFAB  F005         	goto	u1660
  3124  000B52                     u1661:
  3125  000B52  EFD8  F005         	goto	l2192
  3126  000B56                     u1660:
  3127  000B56  0E00               	movlw	0
  3128  000B58  6E01               	movwf	?___fladd^0,c
  3129  000B5A  0E00               	movlw	0
  3130  000B5C  6E02               	movwf	(?___fladd+1)^0,c
  3131  000B5E  0E00               	movlw	0
  3132  000B60  6E03               	movwf	(?___fladd+2)^0,c
  3133  000B62  0E00               	movlw	0
  3134  000B64  6E04               	movwf	(?___fladd+3)^0,c
  3135  000B66  EF73  F006         	goto	l834
  3136  000B6A                     l2176:
  3137  000B6A  90D8               	bcf	status,0,c
  3138  000B6C  3601               	rlcf	___fladd@b^0,f,c
  3139  000B6E  3602               	rlcf	(___fladd@b+1)^0,f,c
  3140  000B70  3603               	rlcf	(___fladd@b+2)^0,f,c
  3141  000B72  3604               	rlcf	(___fladd@b+3)^0,f,c
  3142  000B74  AE10               	btfss	___fladd@grs^0,7,c
  3143  000B76  EFBF  F005         	goto	u1671
  3144  000B7A  EFC1  F005         	goto	u1670
  3145  000B7E                     u1671:
  3146  000B7E  EFC2  F005         	goto	l2182
  3147  000B82                     u1670:
  3148  000B82  8001               	bsf	___fladd@b^0,0,c
  3149  000B84                     l2182:
  3150  000B84  A010               	btfss	___fladd@grs^0,0,c
  3151  000B86  EFC7  F005         	goto	u1681
  3152  000B8A  EFC9  F005         	goto	u1680
  3153  000B8E                     u1681:
  3154  000B8E  EFCD  F005         	goto	l2186
  3155  000B92                     u1680:
  3156  000B92  80D8               	bsf	status,0,c
  3157  000B94  3610               	rlcf	___fladd@grs^0,f,c
  3158  000B96  EFCF  F005         	goto	l2188
  3159  000B9A                     l2186:
  3160  000B9A  90D8               	bcf	status,0,c
  3161  000B9C  3610               	rlcf	___fladd@grs^0,f,c
  3162  000B9E                     l2188:
  3163  000B9E  500F               	movf	___fladd@bexp^0,w,c
  3164  000BA0  B4D8               	btfsc	status,2,c
  3165  000BA2  EFD5  F005         	goto	u1691
  3166  000BA6  EFD7  F005         	goto	u1690
  3167  000BAA                     u1691:
  3168  000BAA  EFD8  F005         	goto	l2192
  3169  000BAE                     u1690:
  3170  000BAE  060F               	decf	___fladd@bexp^0,f,c
  3171  000BB0                     l2192:
  3172  000BB0  AE03               	btfss	(___fladd@b+2)^0,7,c
  3173  000BB2  EFDD  F005         	goto	u1701
  3174  000BB6  EFDF  F005         	goto	u1700
  3175  000BBA                     u1701:
  3176  000BBA  EFB5  F005         	goto	l2176
  3177  000BBE                     u1700:
  3178  000BBE                     l2194:
  3179  000BBE  0E00               	movlw	0
  3180  000BC0  6E0E               	movwf	___fladd@aexp^0,c
  3181  000BC2  AE10               	btfss	___fladd@grs^0,7,c
  3182  000BC4  EFE6  F005         	goto	u1711
  3183  000BC8  EFE8  F005         	goto	u1710
  3184  000BCC                     u1711:
  3185  000BCC  EF00  F006         	goto	l851
  3186  000BD0                     u1710:
  3187  000BD0  C010  F009         	movff	___fladd@grs,??___fladd
  3188  000BD4  0E7F               	movlw	127
  3189  000BD6  1609               	andwf	??___fladd^0,f,c
  3190  000BD8  B4D8               	btfsc	status,2,c
  3191  000BDA  EFF1  F005         	goto	u1721
  3192  000BDE  EFF3  F005         	goto	u1720
  3193  000BE2                     u1721:
  3194  000BE2  EFF7  F005         	goto	l852
  3195  000BE6                     u1720:
  3196  000BE6                     l2200:
  3197  000BE6  0E01               	movlw	1
  3198  000BE8  6E0E               	movwf	___fladd@aexp^0,c
  3199  000BEA  EF00  F006         	goto	l851
  3200  000BEE                     l852:
  3201  000BEE  A001               	btfss	___fladd@b^0,0,c
  3202  000BF0  EFFC  F005         	goto	u1731
  3203  000BF4  EFFE  F005         	goto	u1730
  3204  000BF8                     u1731:
  3205  000BF8  EF00  F006         	goto	l851
  3206  000BFC                     u1730:
  3207  000BFC  EFF3  F005         	goto	l2200
  3208  000C00                     l851:
  3209  000C00  500E               	movf	___fladd@aexp^0,w,c
  3210  000C02  B4D8               	btfsc	status,2,c
  3211  000C04  EF06  F006         	goto	u1741
  3212  000C08  EF08  F006         	goto	u1740
  3213  000C0C                     u1741:
  3214  000C0C  EF33  F006         	goto	l2212
  3215  000C10                     u1740:
  3216  000C10  0E01               	movlw	1
  3217  000C12  2601               	addwf	___fladd@b^0,f,c
  3218  000C14  0E00               	movlw	0
  3219  000C16  2202               	addwfc	(___fladd@b+1)^0,f,c
  3220  000C18  2203               	addwfc	(___fladd@b+2)^0,f,c
  3221  000C1A  2204               	addwfc	(___fladd@b+3)^0,f,c
  3222  000C1C  A004               	btfss	(___fladd@b+3)^0,0,c
  3223  000C1E  EF13  F006         	goto	u1751
  3224  000C22  EF15  F006         	goto	u1750
  3225  000C26                     u1751:
  3226  000C26  EF33  F006         	goto	l2212
  3227  000C2A                     u1750:
  3228  000C2A  C001  F009         	movff	___fladd@b,??___fladd
  3229  000C2E  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  3230  000C32  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  3231  000C36  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  3232  000C3A  340C               	rlcf	(??___fladd+3)^0,w,c
  3233  000C3C  320C               	rrcf	(??___fladd+3)^0,f,c
  3234  000C3E  320B               	rrcf	(??___fladd+2)^0,f,c
  3235  000C40  320A               	rrcf	(??___fladd+1)^0,f,c
  3236  000C42  3209               	rrcf	??___fladd^0,f,c
  3237  000C44  C009  F001         	movff	??___fladd,___fladd@b
  3238  000C48  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  3239  000C4C  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  3240  000C50  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  3241  000C54  280F               	incf	___fladd@bexp^0,w,c
  3242  000C56  B4D8               	btfsc	status,2,c
  3243  000C58  EF30  F006         	goto	u1761
  3244  000C5C  EF32  F006         	goto	u1760
  3245  000C60                     u1761:
  3246  000C60  EF33  F006         	goto	l2212
  3247  000C64                     u1760:
  3248  000C64  2A0F               	incf	___fladd@bexp^0,f,c
  3249  000C66                     l2212:
  3250  000C66  280F               	incf	___fladd@bexp^0,w,c
  3251  000C68  B4D8               	btfsc	status,2,c
  3252  000C6A  EF39  F006         	goto	u1771
  3253  000C6E  EF3B  F006         	goto	u1770
  3254  000C72                     u1771:
  3255  000C72  EF43  F006         	goto	l2216
  3256  000C76                     u1770:
  3257  000C76  500F               	movf	___fladd@bexp^0,w,c
  3258  000C78  A4D8               	btfss	status,2,c
  3259  000C7A  EF41  F006         	goto	u1781
  3260  000C7E  EF43  F006         	goto	u1780
  3261  000C82                     u1781:
  3262  000C82  EF55  F006         	goto	l2220
  3263  000C86                     u1780:
  3264  000C86                     l2216:
  3265  000C86  0E00               	movlw	0
  3266  000C88  6E01               	movwf	___fladd@b^0,c
  3267  000C8A  0E00               	movlw	0
  3268  000C8C  6E02               	movwf	(___fladd@b+1)^0,c
  3269  000C8E  0E00               	movlw	0
  3270  000C90  6E03               	movwf	(___fladd@b+2)^0,c
  3271  000C92  0E00               	movlw	0
  3272  000C94  6E04               	movwf	(___fladd@b+3)^0,c
  3273  000C96  500F               	movf	___fladd@bexp^0,w,c
  3274  000C98  A4D8               	btfss	status,2,c
  3275  000C9A  EF51  F006         	goto	u1791
  3276  000C9E  EF53  F006         	goto	u1790
  3277  000CA2                     u1791:
  3278  000CA2  EF55  F006         	goto	l2220
  3279  000CA6                     u1790:
  3280  000CA6  0E00               	movlw	0
  3281  000CA8  6E0D               	movwf	___fladd@signs^0,c
  3282  000CAA                     l2220:
  3283  000CAA  A00F               	btfss	___fladd@bexp^0,0,c
  3284  000CAC  EF5A  F006         	goto	u1801
  3285  000CB0  EF5C  F006         	goto	u1800
  3286  000CB4                     u1801:
  3287  000CB4  EF5F  F006         	goto	l2224
  3288  000CB8                     u1800:
  3289  000CB8  8E03               	bsf	(___fladd@b+2)^0,7,c
  3290  000CBA  EF60  F006         	goto	l2226
  3291  000CBE                     l2224:
  3292  000CBE  9E03               	bcf	(___fladd@b+2)^0,7,c
  3293  000CC0                     l2226:
  3294  000CC0  90D8               	bcf	status,0,c
  3295  000CC2  300F               	rrcf	___fladd@bexp^0,w,c
  3296  000CC4  6E04               	movwf	(___fladd@b+3)^0,c
  3297  000CC6  AE0D               	btfss	___fladd@signs^0,7,c
  3298  000CC8  EF68  F006         	goto	u1811
  3299  000CCC  EF6A  F006         	goto	u1810
  3300  000CD0                     u1811:
  3301  000CD0  EF6B  F006         	goto	l2232
  3302  000CD4                     u1810:
  3303  000CD4  8E04               	bsf	(___fladd@b+3)^0,7,c
  3304  000CD6                     l2232:
  3305  000CD6  C001  F001         	movff	___fladd@b,?___fladd
  3306  000CDA  C002  F002         	movff	___fladd@b+1,?___fladd+1
  3307  000CDE  C003  F003         	movff	___fladd@b+2,?___fladd+2
  3308  000CE2  C004  F004         	movff	___fladd@b+3,?___fladd+3
  3309  000CE6                     l834:
  3310  000CE6  0012               	return		;funcret
  3311  000CE8                     __end_of___fladd:
  3312                           	opt callstack 0
  3313                           
  3314 ;; *************** function ___flmul *****************
  3315 ;; Defined at:
  3316 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
  3317 ;; Parameters:    Size  Location     Type
  3318 ;;  b               4    0[COMRAM] unsigned char 
  3319 ;;  a               4    4[COMRAM] unsigned char 
  3320 ;; Auto vars:     Size  Location     Type
  3321 ;;  prod            4   19[COMRAM] struct .
  3322 ;;  grs             4   13[COMRAM] unsigned long 
  3323 ;;  temp            2   23[COMRAM] struct .
  3324 ;;  bexp            1   18[COMRAM] unsigned char 
  3325 ;;  aexp            1   17[COMRAM] unsigned char 
  3326 ;;  sign            1   12[COMRAM] unsigned char 
  3327 ;; Return value:  Size  Location     Type
  3328 ;;                  4    0[COMRAM] unsigned char 
  3329 ;; Registers used:
  3330 ;;		wreg, status,2, status,0, prodl, prodh
  3331 ;; Tracked objects:
  3332 ;;		On entry : 0/0
  3333 ;;		On exit  : 0/0
  3334 ;;		Unchanged: 0/0
  3335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3336 ;;      Params:         8       0       0       0       0       0       0       0       0
  3337 ;;      Locals:        13       0       0       0       0       0       0       0       0
  3338 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3339 ;;      Totals:        25       0       0       0       0       0       0       0       0
  3340 ;;Total ram usage:       25 bytes
  3341 ;; Hardware stack levels used:    1
  3342 ;; This function calls:
  3343 ;;		Nothing
  3344 ;; This function is called by:
  3345 ;;		_OledApi_printNum
  3346 ;; This function uses a non-reentrant model
  3347 ;;
  3348                           
  3349                           	psect	text16
  3350  000CE8                     __ptext16:
  3351                           	opt callstack 0
  3352  000CE8                     ___flmul:
  3353                           	opt callstack 27
  3354  000CE8  5004               	movf	(___flmul@b+3)^0,w,c
  3355  000CEA  0B80               	andlw	128
  3356  000CEC  6E0D               	movwf	___flmul@sign^0,c
  3357  000CEE  5004               	movf	(___flmul@b+3)^0,w,c
  3358  000CF0  2404               	addwf	(___flmul@b+3)^0,w,c
  3359  000CF2  6E13               	movwf	___flmul@bexp^0,c
  3360  000CF4  AE03               	btfss	(___flmul@b+2)^0,7,c
  3361  000CF6  EF7F  F006         	goto	u2011
  3362  000CFA  EF81  F006         	goto	u2010
  3363  000CFE                     u2011:
  3364  000CFE  EF82  F006         	goto	l2380
  3365  000D02                     u2010:
  3366  000D02  8013               	bsf	___flmul@bexp^0,0,c
  3367  000D04                     l2380:
  3368  000D04  5013               	movf	___flmul@bexp^0,w,c
  3369  000D06  B4D8               	btfsc	status,2,c
  3370  000D08  EF88  F006         	goto	u2021
  3371  000D0C  EF8A  F006         	goto	u2020
  3372  000D10                     u2021:
  3373  000D10  EF9D  F006         	goto	l2388
  3374  000D14                     u2020:
  3375  000D14  2813               	incf	___flmul@bexp^0,w,c
  3376  000D16  A4D8               	btfss	status,2,c
  3377  000D18  EF90  F006         	goto	u2031
  3378  000D1C  EF92  F006         	goto	u2030
  3379  000D20                     u2031:
  3380  000D20  EF9A  F006         	goto	l2386
  3381  000D24                     u2030:
  3382  000D24  0E00               	movlw	0
  3383  000D26  6E01               	movwf	___flmul@b^0,c
  3384  000D28  0E00               	movlw	0
  3385  000D2A  6E02               	movwf	(___flmul@b+1)^0,c
  3386  000D2C  0E00               	movlw	0
  3387  000D2E  6E03               	movwf	(___flmul@b+2)^0,c
  3388  000D30  0E00               	movlw	0
  3389  000D32  6E04               	movwf	(___flmul@b+3)^0,c
  3390  000D34                     l2386:
  3391  000D34  8E03               	bsf	(___flmul@b+2)^0,7,c
  3392  000D36  EFA5  F006         	goto	l2390
  3393  000D3A                     l2388:
  3394  000D3A  0E00               	movlw	0
  3395  000D3C  6E01               	movwf	___flmul@b^0,c
  3396  000D3E  0E00               	movlw	0
  3397  000D40  6E02               	movwf	(___flmul@b+1)^0,c
  3398  000D42  0E00               	movlw	0
  3399  000D44  6E03               	movwf	(___flmul@b+2)^0,c
  3400  000D46  0E00               	movlw	0
  3401  000D48  6E04               	movwf	(___flmul@b+3)^0,c
  3402  000D4A                     l2390:
  3403  000D4A  5008               	movf	(___flmul@a+3)^0,w,c
  3404  000D4C  0B80               	andlw	128
  3405  000D4E  1A0D               	xorwf	___flmul@sign^0,f,c
  3406  000D50  5008               	movf	(___flmul@a+3)^0,w,c
  3407  000D52  2408               	addwf	(___flmul@a+3)^0,w,c
  3408  000D54  6E12               	movwf	___flmul@aexp^0,c
  3409  000D56  AE07               	btfss	(___flmul@a+2)^0,7,c
  3410  000D58  EFB0  F006         	goto	u2041
  3411  000D5C  EFB2  F006         	goto	u2040
  3412  000D60                     u2041:
  3413  000D60  EFB3  F006         	goto	l2398
  3414  000D64                     u2040:
  3415  000D64  8012               	bsf	___flmul@aexp^0,0,c
  3416  000D66                     l2398:
  3417  000D66  5012               	movf	___flmul@aexp^0,w,c
  3418  000D68  B4D8               	btfsc	status,2,c
  3419  000D6A  EFB9  F006         	goto	u2051
  3420  000D6E  EFBB  F006         	goto	u2050
  3421  000D72                     u2051:
  3422  000D72  EFCE  F006         	goto	l2406
  3423  000D76                     u2050:
  3424  000D76  2812               	incf	___flmul@aexp^0,w,c
  3425  000D78  A4D8               	btfss	status,2,c
  3426  000D7A  EFC1  F006         	goto	u2061
  3427  000D7E  EFC3  F006         	goto	u2060
  3428  000D82                     u2061:
  3429  000D82  EFCB  F006         	goto	l2404
  3430  000D86                     u2060:
  3431  000D86  0E00               	movlw	0
  3432  000D88  6E05               	movwf	___flmul@a^0,c
  3433  000D8A  0E00               	movlw	0
  3434  000D8C  6E06               	movwf	(___flmul@a+1)^0,c
  3435  000D8E  0E00               	movlw	0
  3436  000D90  6E07               	movwf	(___flmul@a+2)^0,c
  3437  000D92  0E00               	movlw	0
  3438  000D94  6E08               	movwf	(___flmul@a+3)^0,c
  3439  000D96                     l2404:
  3440  000D96  8E07               	bsf	(___flmul@a+2)^0,7,c
  3441  000D98  EFD6  F006         	goto	l911
  3442  000D9C                     l2406:
  3443  000D9C  0E00               	movlw	0
  3444  000D9E  6E05               	movwf	___flmul@a^0,c
  3445  000DA0  0E00               	movlw	0
  3446  000DA2  6E06               	movwf	(___flmul@a+1)^0,c
  3447  000DA4  0E00               	movlw	0
  3448  000DA6  6E07               	movwf	(___flmul@a+2)^0,c
  3449  000DA8  0E00               	movlw	0
  3450  000DAA  6E08               	movwf	(___flmul@a+3)^0,c
  3451  000DAC                     l911:
  3452  000DAC  5012               	movf	___flmul@aexp^0,w,c
  3453  000DAE  B4D8               	btfsc	status,2,c
  3454  000DB0  EFDC  F006         	goto	u2071
  3455  000DB4  EFDE  F006         	goto	u2070
  3456  000DB8                     u2071:
  3457  000DB8  EFE6  F006         	goto	l2410
  3458  000DBC                     u2070:
  3459  000DBC  5013               	movf	___flmul@bexp^0,w,c
  3460  000DBE  A4D8               	btfss	status,2,c
  3461  000DC0  EFE4  F006         	goto	u2081
  3462  000DC4  EFE6  F006         	goto	u2080
  3463  000DC8                     u2081:
  3464  000DC8  EFF0  F006         	goto	l2414
  3465  000DCC                     u2080:
  3466  000DCC                     l2410:
  3467  000DCC  0E00               	movlw	0
  3468  000DCE  6E01               	movwf	?___flmul^0,c
  3469  000DD0  0E00               	movlw	0
  3470  000DD2  6E02               	movwf	(?___flmul+1)^0,c
  3471  000DD4  0E00               	movlw	0
  3472  000DD6  6E03               	movwf	(?___flmul+2)^0,c
  3473  000DD8  0E00               	movlw	0
  3474  000DDA  6E04               	movwf	(?___flmul+3)^0,c
  3475  000DDC  EF88  F008         	goto	l915
  3476  000DE0                     l2414:
  3477  000DE0  5007               	movf	(___flmul@a+2)^0,w,c
  3478  000DE2  0201               	mulwf	___flmul@b^0,c
  3479  000DE4  CFF3 F018          	movff	prodl,___flmul@temp
  3480  000DE8  CFF4 F019          	movff	prodh,___flmul@temp+1
  3481  000DEC  5018               	movf	___flmul@temp^0,w,c
  3482  000DEE  6E0E               	movwf	___flmul@grs^0,c
  3483  000DF0  6A0F               	clrf	(___flmul@grs+1)^0,c
  3484  000DF2  6A10               	clrf	(___flmul@grs+2)^0,c
  3485  000DF4  6A11               	clrf	(___flmul@grs+3)^0,c
  3486  000DF6  5019               	movf	(___flmul@temp+1)^0,w,c
  3487  000DF8  6E14               	movwf	___flmul@prod^0,c
  3488  000DFA  6A15               	clrf	(___flmul@prod+1)^0,c
  3489  000DFC  6A16               	clrf	(___flmul@prod+2)^0,c
  3490  000DFE  6A17               	clrf	(___flmul@prod+3)^0,c
  3491  000E00  5006               	movf	(___flmul@a+1)^0,w,c
  3492  000E02  0202               	mulwf	(___flmul@b+1)^0,c
  3493  000E04  CFF3 F018          	movff	prodl,___flmul@temp
  3494  000E08  CFF4 F019          	movff	prodh,___flmul@temp+1
  3495  000E0C  5018               	movf	___flmul@temp^0,w,c
  3496  000E0E  260E               	addwf	___flmul@grs^0,f,c
  3497  000E10  0E00               	movlw	0
  3498  000E12  220F               	addwfc	(___flmul@grs+1)^0,f,c
  3499  000E14  2210               	addwfc	(___flmul@grs+2)^0,f,c
  3500  000E16  2211               	addwfc	(___flmul@grs+3)^0,f,c
  3501  000E18  5019               	movf	(___flmul@temp+1)^0,w,c
  3502  000E1A  2614               	addwf	___flmul@prod^0,f,c
  3503  000E1C  0E00               	movlw	0
  3504  000E1E  2215               	addwfc	(___flmul@prod+1)^0,f,c
  3505  000E20  2216               	addwfc	(___flmul@prod+2)^0,f,c
  3506  000E22  2217               	addwfc	(___flmul@prod+3)^0,f,c
  3507  000E24  5005               	movf	___flmul@a^0,w,c
  3508  000E26  0203               	mulwf	(___flmul@b+2)^0,c
  3509  000E28  CFF3 F018          	movff	prodl,___flmul@temp
  3510  000E2C  CFF4 F019          	movff	prodh,___flmul@temp+1
  3511  000E30  5018               	movf	___flmul@temp^0,w,c
  3512  000E32  260E               	addwf	___flmul@grs^0,f,c
  3513  000E34  0E00               	movlw	0
  3514  000E36  220F               	addwfc	(___flmul@grs+1)^0,f,c
  3515  000E38  2210               	addwfc	(___flmul@grs+2)^0,f,c
  3516  000E3A  2211               	addwfc	(___flmul@grs+3)^0,f,c
  3517  000E3C  5019               	movf	(___flmul@temp+1)^0,w,c
  3518  000E3E  2614               	addwf	___flmul@prod^0,f,c
  3519  000E40  0E00               	movlw	0
  3520  000E42  2215               	addwfc	(___flmul@prod+1)^0,f,c
  3521  000E44  2216               	addwfc	(___flmul@prod+2)^0,f,c
  3522  000E46  2217               	addwfc	(___flmul@prod+3)^0,f,c
  3523  000E48  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  3524  000E4C  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  3525  000E50  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  3526  000E54  6A0E               	clrf	___flmul@grs^0,c
  3527  000E56  5005               	movf	___flmul@a^0,w,c
  3528  000E58  0202               	mulwf	(___flmul@b+1)^0,c
  3529  000E5A  CFF3 F018          	movff	prodl,___flmul@temp
  3530  000E5E  CFF4 F019          	movff	prodh,___flmul@temp+1
  3531  000E62  5018               	movf	___flmul@temp^0,w,c
  3532  000E64  260E               	addwf	___flmul@grs^0,f,c
  3533  000E66  5019               	movf	(___flmul@temp+1)^0,w,c
  3534  000E68  220F               	addwfc	(___flmul@grs+1)^0,f,c
  3535  000E6A  0E00               	movlw	0
  3536  000E6C  2210               	addwfc	(___flmul@grs+2)^0,f,c
  3537  000E6E  0E00               	movlw	0
  3538  000E70  2211               	addwfc	(___flmul@grs+3)^0,f,c
  3539  000E72  5006               	movf	(___flmul@a+1)^0,w,c
  3540  000E74  0201               	mulwf	___flmul@b^0,c
  3541  000E76  CFF3 F018          	movff	prodl,___flmul@temp
  3542  000E7A  CFF4 F019          	movff	prodh,___flmul@temp+1
  3543  000E7E  5018               	movf	___flmul@temp^0,w,c
  3544  000E80  260E               	addwf	___flmul@grs^0,f,c
  3545  000E82  5019               	movf	(___flmul@temp+1)^0,w,c
  3546  000E84  220F               	addwfc	(___flmul@grs+1)^0,f,c
  3547  000E86  0E00               	movlw	0
  3548  000E88  2210               	addwfc	(___flmul@grs+2)^0,f,c
  3549  000E8A  0E00               	movlw	0
  3550  000E8C  2211               	addwfc	(___flmul@grs+3)^0,f,c
  3551  000E8E  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  3552  000E92  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  3553  000E96  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  3554  000E9A  6A0E               	clrf	___flmul@grs^0,c
  3555  000E9C  5005               	movf	___flmul@a^0,w,c
  3556  000E9E  0201               	mulwf	___flmul@b^0,c
  3557  000EA0  CFF3 F018          	movff	prodl,___flmul@temp
  3558  000EA4  CFF4 F019          	movff	prodh,___flmul@temp+1
  3559  000EA8  5018               	movf	___flmul@temp^0,w,c
  3560  000EAA  260E               	addwf	___flmul@grs^0,f,c
  3561  000EAC  5019               	movf	(___flmul@temp+1)^0,w,c
  3562  000EAE  220F               	addwfc	(___flmul@grs+1)^0,f,c
  3563  000EB0  0E00               	movlw	0
  3564  000EB2  2210               	addwfc	(___flmul@grs+2)^0,f,c
  3565  000EB4  0E00               	movlw	0
  3566  000EB6  2211               	addwfc	(___flmul@grs+3)^0,f,c
  3567  000EB8  5007               	movf	(___flmul@a+2)^0,w,c
  3568  000EBA  0202               	mulwf	(___flmul@b+1)^0,c
  3569  000EBC  CFF3 F018          	movff	prodl,___flmul@temp
  3570  000EC0  CFF4 F019          	movff	prodh,___flmul@temp+1
  3571  000EC4  5018               	movf	___flmul@temp^0,w,c
  3572  000EC6  2614               	addwf	___flmul@prod^0,f,c
  3573  000EC8  5019               	movf	(___flmul@temp+1)^0,w,c
  3574  000ECA  2215               	addwfc	(___flmul@prod+1)^0,f,c
  3575  000ECC  0E00               	movlw	0
  3576  000ECE  2216               	addwfc	(___flmul@prod+2)^0,f,c
  3577  000ED0  0E00               	movlw	0
  3578  000ED2  2217               	addwfc	(___flmul@prod+3)^0,f,c
  3579  000ED4  5006               	movf	(___flmul@a+1)^0,w,c
  3580  000ED6  0203               	mulwf	(___flmul@b+2)^0,c
  3581  000ED8  CFF3 F018          	movff	prodl,___flmul@temp
  3582  000EDC  CFF4 F019          	movff	prodh,___flmul@temp+1
  3583  000EE0  5018               	movf	___flmul@temp^0,w,c
  3584  000EE2  2614               	addwf	___flmul@prod^0,f,c
  3585  000EE4  5019               	movf	(___flmul@temp+1)^0,w,c
  3586  000EE6  2215               	addwfc	(___flmul@prod+1)^0,f,c
  3587  000EE8  0E00               	movlw	0
  3588  000EEA  2216               	addwfc	(___flmul@prod+2)^0,f,c
  3589  000EEC  0E00               	movlw	0
  3590  000EEE  2217               	addwfc	(___flmul@prod+3)^0,f,c
  3591  000EF0  5007               	movf	(___flmul@a+2)^0,w,c
  3592  000EF2  0203               	mulwf	(___flmul@b+2)^0,c
  3593  000EF4  CFF3 F018          	movff	prodl,___flmul@temp
  3594  000EF8  CFF4 F019          	movff	prodh,___flmul@temp+1
  3595  000EFC  5018               	movf	___flmul@temp^0,w,c
  3596  000EFE  6E09               	movwf	??___flmul^0,c
  3597  000F00  5019               	movf	(___flmul@temp+1)^0,w,c
  3598  000F02  6E0A               	movwf	(??___flmul+1)^0,c
  3599  000F04  6A0B               	clrf	(??___flmul+2)^0,c
  3600  000F06  6A0C               	clrf	(??___flmul+3)^0,c
  3601  000F08  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  3602  000F0C  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  3603  000F10  C009  F00A         	movff	??___flmul,??___flmul+1
  3604  000F14  6A09               	clrf	??___flmul^0,c
  3605  000F16  5009               	movf	??___flmul^0,w,c
  3606  000F18  2614               	addwf	___flmul@prod^0,f,c
  3607  000F1A  500A               	movf	(??___flmul+1)^0,w,c
  3608  000F1C  2215               	addwfc	(___flmul@prod+1)^0,f,c
  3609  000F1E  500B               	movf	(??___flmul+2)^0,w,c
  3610  000F20  2216               	addwfc	(___flmul@prod+2)^0,f,c
  3611  000F22  500C               	movf	(??___flmul+3)^0,w,c
  3612  000F24  2217               	addwfc	(___flmul@prod+3)^0,f,c
  3613  000F26  C00E  F009         	movff	___flmul@grs,??___flmul
  3614  000F2A  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  3615  000F2E  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  3616  000F32  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  3617  000F36  0E19               	movlw	25
  3618  000F38  EFA3  F007         	goto	u2090
  3619  000F3C                     u2095:
  3620  000F3C  90D8               	bcf	status,0,c
  3621  000F3E  320C               	rrcf	(??___flmul+3)^0,f,c
  3622  000F40  320B               	rrcf	(??___flmul+2)^0,f,c
  3623  000F42  320A               	rrcf	(??___flmul+1)^0,f,c
  3624  000F44  3209               	rrcf	??___flmul^0,f,c
  3625  000F46                     u2090:
  3626  000F46  2EE8               	decfsz	wreg,f,c
  3627  000F48  EF9E  F007         	goto	u2095
  3628  000F4C  5009               	movf	??___flmul^0,w,c
  3629  000F4E  2614               	addwf	___flmul@prod^0,f,c
  3630  000F50  500A               	movf	(??___flmul+1)^0,w,c
  3631  000F52  2215               	addwfc	(___flmul@prod+1)^0,f,c
  3632  000F54  500B               	movf	(??___flmul+2)^0,w,c
  3633  000F56  2216               	addwfc	(___flmul@prod+2)^0,f,c
  3634  000F58  500C               	movf	(??___flmul+3)^0,w,c
  3635  000F5A  2217               	addwfc	(___flmul@prod+3)^0,f,c
  3636  000F5C  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  3637  000F60  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  3638  000F64  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  3639  000F68  6A0E               	clrf	___flmul@grs^0,c
  3640  000F6A  5012               	movf	___flmul@aexp^0,w,c
  3641  000F6C  C013  F009         	movff	___flmul@bexp,??___flmul
  3642  000F70  6A0A               	clrf	(??___flmul+1)^0,c
  3643  000F72  2609               	addwf	??___flmul^0,f,c
  3644  000F74  0E00               	movlw	0
  3645  000F76  220A               	addwfc	(??___flmul+1)^0,f,c
  3646  000F78  0E82               	movlw	130
  3647  000F7A  2409               	addwf	??___flmul^0,w,c
  3648  000F7C  6E18               	movwf	___flmul@temp^0,c
  3649  000F7E  0EFF               	movlw	255
  3650  000F80  200A               	addwfc	(??___flmul+1)^0,w,c
  3651  000F82  6E19               	movwf	(___flmul@temp+1)^0,c
  3652  000F84  EFD9  F007         	goto	l2462
  3653  000F88                     l2456:
  3654  000F88  90D8               	bcf	status,0,c
  3655  000F8A  3614               	rlcf	___flmul@prod^0,f,c
  3656  000F8C  3615               	rlcf	(___flmul@prod+1)^0,f,c
  3657  000F8E  3616               	rlcf	(___flmul@prod+2)^0,f,c
  3658  000F90  3617               	rlcf	(___flmul@prod+3)^0,f,c
  3659  000F92  AE11               	btfss	(___flmul@grs+3)^0,7,c
  3660  000F94  EFCE  F007         	goto	u2101
  3661  000F98  EFD0  F007         	goto	u2100
  3662  000F9C                     u2101:
  3663  000F9C  EFD1  F007         	goto	l918
  3664  000FA0                     u2100:
  3665  000FA0  8014               	bsf	___flmul@prod^0,0,c
  3666  000FA2                     l918:
  3667  000FA2  90D8               	bcf	status,0,c
  3668  000FA4  360E               	rlcf	___flmul@grs^0,f,c
  3669  000FA6  360F               	rlcf	(___flmul@grs+1)^0,f,c
  3670  000FA8  3610               	rlcf	(___flmul@grs+2)^0,f,c
  3671  000FAA  3611               	rlcf	(___flmul@grs+3)^0,f,c
  3672  000FAC  0618               	decf	___flmul@temp^0,f,c
  3673  000FAE  A0D8               	btfss	status,0,c
  3674  000FB0  0619               	decf	(___flmul@temp+1)^0,f,c
  3675  000FB2                     l2462:
  3676  000FB2  AE16               	btfss	(___flmul@prod+2)^0,7,c
  3677  000FB4  EFDE  F007         	goto	u2111
  3678  000FB8  EFE0  F007         	goto	u2110
  3679  000FBC                     u2111:
  3680  000FBC  EFC4  F007         	goto	l2456
  3681  000FC0                     u2110:
  3682  000FC0  0E00               	movlw	0
  3683  000FC2  6E12               	movwf	___flmul@aexp^0,c
  3684  000FC4  AE11               	btfss	(___flmul@grs+3)^0,7,c
  3685  000FC6  EFE7  F007         	goto	u2121
  3686  000FCA  EFE9  F007         	goto	u2120
  3687  000FCE                     u2121:
  3688  000FCE  EF0D  F008         	goto	l920
  3689  000FD2                     u2120:
  3690  000FD2  0EFF               	movlw	255
  3691  000FD4  140E               	andwf	___flmul@grs^0,w,c
  3692  000FD6  6E09               	movwf	??___flmul^0,c
  3693  000FD8  0EFF               	movlw	255
  3694  000FDA  140F               	andwf	(___flmul@grs+1)^0,w,c
  3695  000FDC  6E0A               	movwf	(??___flmul+1)^0,c
  3696  000FDE  0EFF               	movlw	255
  3697  000FE0  1410               	andwf	(___flmul@grs+2)^0,w,c
  3698  000FE2  6E0B               	movwf	(??___flmul+2)^0,c
  3699  000FE4  0E7F               	movlw	127
  3700  000FE6  1411               	andwf	(___flmul@grs+3)^0,w,c
  3701  000FE8  6E0C               	movwf	(??___flmul+3)^0,c
  3702  000FEA  5009               	movf	??___flmul^0,w,c
  3703  000FEC  100A               	iorwf	(??___flmul+1)^0,w,c
  3704  000FEE  100B               	iorwf	(??___flmul+2)^0,w,c
  3705  000FF0  100C               	iorwf	(??___flmul+3)^0,w,c
  3706  000FF2  B4D8               	btfsc	status,2,c
  3707  000FF4  EFFE  F007         	goto	u2131
  3708  000FF8  EF00  F008         	goto	u2130
  3709  000FFC                     u2131:
  3710  000FFC  EF04  F008         	goto	l921
  3711  001000                     u2130:
  3712  001000                     l2470:
  3713  001000  0E01               	movlw	1
  3714  001002  6E12               	movwf	___flmul@aexp^0,c
  3715  001004  EF0D  F008         	goto	l920
  3716  001008                     l921:
  3717  001008  A014               	btfss	___flmul@prod^0,0,c
  3718  00100A  EF09  F008         	goto	u2141
  3719  00100E  EF0B  F008         	goto	u2140
  3720  001012                     u2141:
  3721  001012  EF0D  F008         	goto	l920
  3722  001016                     u2140:
  3723  001016  EF00  F008         	goto	l2470
  3724  00101A                     l920:
  3725  00101A  5012               	movf	___flmul@aexp^0,w,c
  3726  00101C  B4D8               	btfsc	status,2,c
  3727  00101E  EF13  F008         	goto	u2151
  3728  001022  EF15  F008         	goto	u2150
  3729  001026                     u2151:
  3730  001026  EF39  F008         	goto	l2482
  3731  00102A                     u2150:
  3732  00102A  0E01               	movlw	1
  3733  00102C  2614               	addwf	___flmul@prod^0,f,c
  3734  00102E  0E00               	movlw	0
  3735  001030  2215               	addwfc	(___flmul@prod+1)^0,f,c
  3736  001032  2216               	addwfc	(___flmul@prod+2)^0,f,c
  3737  001034  2217               	addwfc	(___flmul@prod+3)^0,f,c
  3738  001036  A017               	btfss	(___flmul@prod+3)^0,0,c
  3739  001038  EF20  F008         	goto	u2161
  3740  00103C  EF22  F008         	goto	u2160
  3741  001040                     u2161:
  3742  001040  EF39  F008         	goto	l2482
  3743  001044                     u2160:
  3744  001044  C014  F009         	movff	___flmul@prod,??___flmul
  3745  001048  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  3746  00104C  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  3747  001050  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  3748  001054  340C               	rlcf	(??___flmul+3)^0,w,c
  3749  001056  320C               	rrcf	(??___flmul+3)^0,f,c
  3750  001058  320B               	rrcf	(??___flmul+2)^0,f,c
  3751  00105A  320A               	rrcf	(??___flmul+1)^0,f,c
  3752  00105C  3209               	rrcf	??___flmul^0,f,c
  3753  00105E  C009  F014         	movff	??___flmul,___flmul@prod
  3754  001062  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  3755  001066  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  3756  00106A  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  3757  00106E  4A18               	infsnz	___flmul@temp^0,f,c
  3758  001070  2A19               	incf	(___flmul@temp+1)^0,f,c
  3759  001072                     l2482:
  3760  001072  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  3761  001074  EF44  F008         	goto	u2171
  3762  001078  5019               	movf	(___flmul@temp+1)^0,w,c
  3763  00107A  E108               	bnz	u2170
  3764  00107C  2818               	incf	___flmul@temp^0,w,c
  3765  00107E  A0D8               	btfss	status,0,c
  3766  001080  EF44  F008         	goto	u2171
  3767  001084  EF46  F008         	goto	u2170
  3768  001088                     u2171:
  3769  001088  EF50  F008         	goto	l2486
  3770  00108C                     u2170:
  3771  00108C  0E00               	movlw	0
  3772  00108E  6E14               	movwf	___flmul@prod^0,c
  3773  001090  0E00               	movlw	0
  3774  001092  6E15               	movwf	(___flmul@prod+1)^0,c
  3775  001094  0E80               	movlw	128
  3776  001096  6E16               	movwf	(___flmul@prod+2)^0,c
  3777  001098  0E7F               	movlw	127
  3778  00109A  6E17               	movwf	(___flmul@prod+3)^0,c
  3779  00109C  EF7E  F008         	goto	l2498
  3780  0010A0                     l2486:
  3781  0010A0  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  3782  0010A2  EF5D  F008         	goto	u2180
  3783  0010A6  5019               	movf	(___flmul@temp+1)^0,w,c
  3784  0010A8  E106               	bnz	u2181
  3785  0010AA  0418               	decf	___flmul@temp^0,w,c
  3786  0010AC  B0D8               	btfsc	status,0,c
  3787  0010AE  EF5B  F008         	goto	u2181
  3788  0010B2  EF5D  F008         	goto	u2180
  3789  0010B6                     u2181:
  3790  0010B6  EF69  F008         	goto	l928
  3791  0010BA                     u2180:
  3792  0010BA  0E00               	movlw	0
  3793  0010BC  6E14               	movwf	___flmul@prod^0,c
  3794  0010BE  0E00               	movlw	0
  3795  0010C0  6E15               	movwf	(___flmul@prod+1)^0,c
  3796  0010C2  0E00               	movlw	0
  3797  0010C4  6E16               	movwf	(___flmul@prod+2)^0,c
  3798  0010C6  0E00               	movlw	0
  3799  0010C8  6E17               	movwf	(___flmul@prod+3)^0,c
  3800  0010CA  0E00               	movlw	0
  3801  0010CC  6E0D               	movwf	___flmul@sign^0,c
  3802  0010CE  EF7E  F008         	goto	l2498
  3803  0010D2                     l928:
  3804  0010D2  C018  F013         	movff	___flmul@temp,___flmul@bexp
  3805  0010D6  0EFF               	movlw	255
  3806  0010D8  1614               	andwf	___flmul@prod^0,f,c
  3807  0010DA  0EFF               	movlw	255
  3808  0010DC  1615               	andwf	(___flmul@prod+1)^0,f,c
  3809  0010DE  0E7F               	movlw	127
  3810  0010E0  1616               	andwf	(___flmul@prod+2)^0,f,c
  3811  0010E2  0E00               	movlw	0
  3812  0010E4  1617               	andwf	(___flmul@prod+3)^0,f,c
  3813  0010E6  A013               	btfss	___flmul@bexp^0,0,c
  3814  0010E8  EF78  F008         	goto	u2191
  3815  0010EC  EF7A  F008         	goto	u2190
  3816  0010F0                     u2191:
  3817  0010F0  EF7B  F008         	goto	l2496
  3818  0010F4                     u2190:
  3819  0010F4  8E16               	bsf	(___flmul@prod+2)^0,7,c
  3820  0010F6                     l2496:
  3821  0010F6  90D8               	bcf	status,0,c
  3822  0010F8  3013               	rrcf	___flmul@bexp^0,w,c
  3823  0010FA  6E17               	movwf	(___flmul@prod+3)^0,c
  3824  0010FC                     l2498:
  3825  0010FC  500D               	movf	___flmul@sign^0,w,c
  3826  0010FE  1217               	iorwf	(___flmul@prod+3)^0,f,c
  3827  001100  C014  F001         	movff	___flmul@prod,?___flmul
  3828  001104  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  3829  001108  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  3830  00110C  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  3831  001110                     l915:
  3832  001110  0012               	return		;funcret
  3833  001112                     __end_of___flmul:
  3834                           	opt callstack 0
  3835                           
  3836 ;; *************** function ___flge *****************
  3837 ;; Defined at:
  3838 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
  3839 ;; Parameters:    Size  Location     Type
  3840 ;;  ff1             4   24[COMRAM] unsigned char 
  3841 ;;  ff2             4   28[COMRAM] unsigned char 
  3842 ;; Auto vars:     Size  Location     Type
  3843 ;;		None
  3844 ;; Return value:  Size  Location     Type
  3845 ;;		None               void
  3846 ;; Registers used:
  3847 ;;		wreg, status,2, status,0
  3848 ;; Tracked objects:
  3849 ;;		On entry : 0/0
  3850 ;;		On exit  : 0/0
  3851 ;;		Unchanged: 0/0
  3852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3853 ;;      Params:         8       0       0       0       0       0       0       0       0
  3854 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3855 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3856 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3857 ;;Total ram usage:       12 bytes
  3858 ;; Hardware stack levels used:    1
  3859 ;; This function calls:
  3860 ;;		Nothing
  3861 ;; This function is called by:
  3862 ;;		_OledApi_printNum
  3863 ;; This function uses a non-reentrant model
  3864 ;;
  3865                           
  3866                           	psect	text17
  3867  001AB4                     __ptext17:
  3868                           	opt callstack 0
  3869  001AB4                     ___flge:
  3870                           	opt callstack 27
  3871  001AB4  0E00               	movlw	0
  3872  001AB6  1419               	andwf	___flge@ff1^0,w,c
  3873  001AB8  6E21               	movwf	??___flge^0,c
  3874  001ABA  0E00               	movlw	0
  3875  001ABC  141A               	andwf	(___flge@ff1+1)^0,w,c
  3876  001ABE  6E22               	movwf	(??___flge+1)^0,c
  3877  001AC0  0E80               	movlw	128
  3878  001AC2  141B               	andwf	(___flge@ff1+2)^0,w,c
  3879  001AC4  6E23               	movwf	(??___flge+2)^0,c
  3880  001AC6  0E7F               	movlw	127
  3881  001AC8  141C               	andwf	(___flge@ff1+3)^0,w,c
  3882  001ACA  6E24               	movwf	(??___flge+3)^0,c
  3883  001ACC  5021               	movf	??___flge^0,w,c
  3884  001ACE  1022               	iorwf	(??___flge+1)^0,w,c
  3885  001AD0  1023               	iorwf	(??___flge+2)^0,w,c
  3886  001AD2  1024               	iorwf	(??___flge+3)^0,w,c
  3887  001AD4  A4D8               	btfss	status,2,c
  3888  001AD6  EF6F  F00D         	goto	u2201
  3889  001ADA  EF71  F00D         	goto	u2200
  3890  001ADE                     u2201:
  3891  001ADE  EF79  F00D         	goto	l2514
  3892  001AE2                     u2200:
  3893  001AE2  0E00               	movlw	0
  3894  001AE4  6E19               	movwf	___flge@ff1^0,c
  3895  001AE6  0E00               	movlw	0
  3896  001AE8  6E1A               	movwf	(___flge@ff1+1)^0,c
  3897  001AEA  0E00               	movlw	0
  3898  001AEC  6E1B               	movwf	(___flge@ff1+2)^0,c
  3899  001AEE  0E00               	movlw	0
  3900  001AF0  6E1C               	movwf	(___flge@ff1+3)^0,c
  3901  001AF2                     l2514:
  3902  001AF2  0E00               	movlw	0
  3903  001AF4  141D               	andwf	___flge@ff2^0,w,c
  3904  001AF6  6E21               	movwf	??___flge^0,c
  3905  001AF8  0E00               	movlw	0
  3906  001AFA  141E               	andwf	(___flge@ff2+1)^0,w,c
  3907  001AFC  6E22               	movwf	(??___flge+1)^0,c
  3908  001AFE  0E80               	movlw	128
  3909  001B00  141F               	andwf	(___flge@ff2+2)^0,w,c
  3910  001B02  6E23               	movwf	(??___flge+2)^0,c
  3911  001B04  0E7F               	movlw	127
  3912  001B06  1420               	andwf	(___flge@ff2+3)^0,w,c
  3913  001B08  6E24               	movwf	(??___flge+3)^0,c
  3914  001B0A  5021               	movf	??___flge^0,w,c
  3915  001B0C  1022               	iorwf	(??___flge+1)^0,w,c
  3916  001B0E  1023               	iorwf	(??___flge+2)^0,w,c
  3917  001B10  1024               	iorwf	(??___flge+3)^0,w,c
  3918  001B12  A4D8               	btfss	status,2,c
  3919  001B14  EF8E  F00D         	goto	u2211
  3920  001B18  EF90  F00D         	goto	u2210
  3921  001B1C                     u2211:
  3922  001B1C  EF98  F00D         	goto	l2518
  3923  001B20                     u2210:
  3924  001B20  0E00               	movlw	0
  3925  001B22  6E1D               	movwf	___flge@ff2^0,c
  3926  001B24  0E00               	movlw	0
  3927  001B26  6E1E               	movwf	(___flge@ff2+1)^0,c
  3928  001B28  0E00               	movlw	0
  3929  001B2A  6E1F               	movwf	(___flge@ff2+2)^0,c
  3930  001B2C  0E00               	movlw	0
  3931  001B2E  6E20               	movwf	(___flge@ff2+3)^0,c
  3932  001B30                     l2518:
  3933  001B30  AE1C               	btfss	(___flge@ff1+3)^0,7,c
  3934  001B32  EF9D  F00D         	goto	u2221
  3935  001B36  EF9F  F00D         	goto	u2220
  3936  001B3A                     u2221:
  3937  001B3A  EFA8  F00D         	goto	l2522
  3938  001B3E                     u2220:
  3939  001B3E  6C19               	negf	___flge@ff1^0,c
  3940  001B40  1E1A               	comf	(___flge@ff1+1)^0,f,c
  3941  001B42  B0D8               	btfsc	status,0,c
  3942  001B44  2A1A               	incf	(___flge@ff1+1)^0,f,c
  3943  001B46  1E1B               	comf	(___flge@ff1+2)^0,f,c
  3944  001B48  B0D8               	btfsc	status,0,c
  3945  001B4A  2A1B               	incf	(___flge@ff1+2)^0,f,c
  3946  001B4C  0E80               	movlw	128
  3947  001B4E  561C               	subfwb	(___flge@ff1+3)^0,f,c
  3948  001B50                     l2522:
  3949  001B50  AE20               	btfss	(___flge@ff2+3)^0,7,c
  3950  001B52  EFAD  F00D         	goto	u2231
  3951  001B56  EFAF  F00D         	goto	u2230
  3952  001B5A                     u2231:
  3953  001B5A  EFB8  F00D         	goto	l562
  3954  001B5E                     u2230:
  3955  001B5E  6C1D               	negf	___flge@ff2^0,c
  3956  001B60  1E1E               	comf	(___flge@ff2+1)^0,f,c
  3957  001B62  B0D8               	btfsc	status,0,c
  3958  001B64  2A1E               	incf	(___flge@ff2+1)^0,f,c
  3959  001B66  1E1F               	comf	(___flge@ff2+2)^0,f,c
  3960  001B68  B0D8               	btfsc	status,0,c
  3961  001B6A  2A1F               	incf	(___flge@ff2+2)^0,f,c
  3962  001B6C  0E80               	movlw	128
  3963  001B6E  5620               	subfwb	(___flge@ff2+3)^0,f,c
  3964  001B70                     l562:
  3965  001B70  0E00               	movlw	0
  3966  001B72  1A19               	xorwf	___flge@ff1^0,f,c
  3967  001B74  0E00               	movlw	0
  3968  001B76  1A1A               	xorwf	(___flge@ff1+1)^0,f,c
  3969  001B78  0E00               	movlw	0
  3970  001B7A  1A1B               	xorwf	(___flge@ff1+2)^0,f,c
  3971  001B7C  0E80               	movlw	128
  3972  001B7E  1A1C               	xorwf	(___flge@ff1+3)^0,f,c
  3973  001B80  0E00               	movlw	0
  3974  001B82  1A1D               	xorwf	___flge@ff2^0,f,c
  3975  001B84  0E00               	movlw	0
  3976  001B86  1A1E               	xorwf	(___flge@ff2+1)^0,f,c
  3977  001B88  0E00               	movlw	0
  3978  001B8A  1A1F               	xorwf	(___flge@ff2+2)^0,f,c
  3979  001B8C  0E80               	movlw	128
  3980  001B8E  1A20               	xorwf	(___flge@ff2+3)^0,f,c
  3981  001B90  501D               	movf	___flge@ff2^0,w,c
  3982  001B92  5C19               	subwf	___flge@ff1^0,w,c
  3983  001B94  501E               	movf	(___flge@ff2+1)^0,w,c
  3984  001B96  581A               	subwfb	(___flge@ff1+1)^0,w,c
  3985  001B98  501F               	movf	(___flge@ff2+2)^0,w,c
  3986  001B9A  581B               	subwfb	(___flge@ff1+2)^0,w,c
  3987  001B9C  5020               	movf	(___flge@ff2+3)^0,w,c
  3988  001B9E  581C               	subwfb	(___flge@ff1+3)^0,w,c
  3989  001BA0  B0D8               	btfsc	status,0,c
  3990  001BA2  EFD5  F00D         	goto	u2241
  3991  001BA6  EFD7  F00D         	goto	u2240
  3992  001BAA                     u2241:
  3993  001BAA  EFDA  F00D         	goto	l2528
  3994  001BAE                     u2240:
  3995  001BAE  90D8               	bcf	status,0,c
  3996  001BB0  EFDB  F00D         	goto	l567
  3997  001BB4                     l2528:
  3998  001BB4  80D8               	bsf	status,0,c
  3999  001BB6                     l567:
  4000  001BB6  0012               	return		;funcret
  4001  001BB8                     __end_of___flge:
  4002                           	opt callstack 0
  4003                           
  4004 ;; *************** function ___almod *****************
  4005 ;; Defined at:
  4006 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\almod.c"
  4007 ;; Parameters:    Size  Location     Type
  4008 ;;  dividend        4    0[COMRAM] long 
  4009 ;;  divisor         4    4[COMRAM] long 
  4010 ;; Auto vars:     Size  Location     Type
  4011 ;;  sign            1    9[COMRAM] unsigned char 
  4012 ;;  counter         1    8[COMRAM] unsigned char 
  4013 ;; Return value:  Size  Location     Type
  4014 ;;                  4    0[COMRAM] long 
  4015 ;; Registers used:
  4016 ;;		wreg, status,2, status,0
  4017 ;; Tracked objects:
  4018 ;;		On entry : 0/0
  4019 ;;		On exit  : 0/0
  4020 ;;		Unchanged: 0/0
  4021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4022 ;;      Params:         8       0       0       0       0       0       0       0       0
  4023 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4024 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4025 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4026 ;;Total ram usage:       10 bytes
  4027 ;; Hardware stack levels used:    1
  4028 ;; This function calls:
  4029 ;;		Nothing
  4030 ;; This function is called by:
  4031 ;;		_OledApi_printNum
  4032 ;; This function uses a non-reentrant model
  4033 ;;
  4034                           
  4035                           	psect	text18
  4036  001BB8                     __ptext18:
  4037                           	opt callstack 0
  4038  001BB8                     ___almod:
  4039                           	opt callstack 27
  4040  001BB8  0E00               	movlw	0
  4041  001BBA  6E0A               	movwf	___almod@sign^0,c
  4042  001BBC  BE04               	btfsc	(___almod@dividend+3)^0,7,c
  4043  001BBE  EFE5  F00D         	goto	u1950
  4044  001BC2  EFE3  F00D         	goto	u1951
  4045  001BC6                     u1951:
  4046  001BC6  EFEF  F00D         	goto	l2346
  4047  001BCA                     u1950:
  4048  001BCA  1E04               	comf	(___almod@dividend+3)^0,f,c
  4049  001BCC  1E03               	comf	(___almod@dividend+2)^0,f,c
  4050  001BCE  1E02               	comf	(___almod@dividend+1)^0,f,c
  4051  001BD0  6C01               	negf	___almod@dividend^0,c
  4052  001BD2  0E00               	movlw	0
  4053  001BD4  2202               	addwfc	(___almod@dividend+1)^0,f,c
  4054  001BD6  2203               	addwfc	(___almod@dividend+2)^0,f,c
  4055  001BD8  2204               	addwfc	(___almod@dividend+3)^0,f,c
  4056  001BDA  0E01               	movlw	1
  4057  001BDC  6E0A               	movwf	___almod@sign^0,c
  4058  001BDE                     l2346:
  4059  001BDE  BE08               	btfsc	(___almod@divisor+3)^0,7,c
  4060  001BE0  EFF6  F00D         	goto	u1960
  4061  001BE4  EFF4  F00D         	goto	u1961
  4062  001BE8                     u1961:
  4063  001BE8  EFFE  F00D         	goto	l2350
  4064  001BEC                     u1960:
  4065  001BEC  1E08               	comf	(___almod@divisor+3)^0,f,c
  4066  001BEE  1E07               	comf	(___almod@divisor+2)^0,f,c
  4067  001BF0  1E06               	comf	(___almod@divisor+1)^0,f,c
  4068  001BF2  6C05               	negf	___almod@divisor^0,c
  4069  001BF4  0E00               	movlw	0
  4070  001BF6  2206               	addwfc	(___almod@divisor+1)^0,f,c
  4071  001BF8  2207               	addwfc	(___almod@divisor+2)^0,f,c
  4072  001BFA  2208               	addwfc	(___almod@divisor+3)^0,f,c
  4073  001BFC                     l2350:
  4074  001BFC  5005               	movf	___almod@divisor^0,w,c
  4075  001BFE  1006               	iorwf	(___almod@divisor+1)^0,w,c
  4076  001C00  1007               	iorwf	(___almod@divisor+2)^0,w,c
  4077  001C02  1008               	iorwf	(___almod@divisor+3)^0,w,c
  4078  001C04  B4D8               	btfsc	status,2,c
  4079  001C06  EF07  F00E         	goto	u1971
  4080  001C0A  EF09  F00E         	goto	u1970
  4081  001C0E                     u1971:
  4082  001C0E  EF39  F00E         	goto	l2366
  4083  001C12                     u1970:
  4084  001C12  0E01               	movlw	1
  4085  001C14  6E09               	movwf	___almod@counter^0,c
  4086  001C16  EF13  F00E         	goto	l2356
  4087  001C1A                     l2354:
  4088  001C1A  90D8               	bcf	status,0,c
  4089  001C1C  3605               	rlcf	___almod@divisor^0,f,c
  4090  001C1E  3606               	rlcf	(___almod@divisor+1)^0,f,c
  4091  001C20  3607               	rlcf	(___almod@divisor+2)^0,f,c
  4092  001C22  3608               	rlcf	(___almod@divisor+3)^0,f,c
  4093  001C24  2A09               	incf	___almod@counter^0,f,c
  4094  001C26                     l2356:
  4095  001C26  AE08               	btfss	(___almod@divisor+3)^0,7,c
  4096  001C28  EF18  F00E         	goto	u1981
  4097  001C2C  EF1A  F00E         	goto	u1980
  4098  001C30                     u1981:
  4099  001C30  EF0D  F00E         	goto	l2354
  4100  001C34                     u1980:
  4101  001C34                     l2358:
  4102  001C34  5005               	movf	___almod@divisor^0,w,c
  4103  001C36  5C01               	subwf	___almod@dividend^0,w,c
  4104  001C38  5006               	movf	(___almod@divisor+1)^0,w,c
  4105  001C3A  5802               	subwfb	(___almod@dividend+1)^0,w,c
  4106  001C3C  5007               	movf	(___almod@divisor+2)^0,w,c
  4107  001C3E  5803               	subwfb	(___almod@dividend+2)^0,w,c
  4108  001C40  5008               	movf	(___almod@divisor+3)^0,w,c
  4109  001C42  5804               	subwfb	(___almod@dividend+3)^0,w,c
  4110  001C44  A0D8               	btfss	status,0,c
  4111  001C46  EF27  F00E         	goto	u1991
  4112  001C4A  EF29  F00E         	goto	u1990
  4113  001C4E                     u1991:
  4114  001C4E  EF31  F00E         	goto	l2362
  4115  001C52                     u1990:
  4116  001C52  5005               	movf	___almod@divisor^0,w,c
  4117  001C54  5E01               	subwf	___almod@dividend^0,f,c
  4118  001C56  5006               	movf	(___almod@divisor+1)^0,w,c
  4119  001C58  5A02               	subwfb	(___almod@dividend+1)^0,f,c
  4120  001C5A  5007               	movf	(___almod@divisor+2)^0,w,c
  4121  001C5C  5A03               	subwfb	(___almod@dividend+2)^0,f,c
  4122  001C5E  5008               	movf	(___almod@divisor+3)^0,w,c
  4123  001C60  5A04               	subwfb	(___almod@dividend+3)^0,f,c
  4124  001C62                     l2362:
  4125  001C62  90D8               	bcf	status,0,c
  4126  001C64  3208               	rrcf	(___almod@divisor+3)^0,f,c
  4127  001C66  3207               	rrcf	(___almod@divisor+2)^0,f,c
  4128  001C68  3206               	rrcf	(___almod@divisor+1)^0,f,c
  4129  001C6A  3205               	rrcf	___almod@divisor^0,f,c
  4130  001C6C  2E09               	decfsz	___almod@counter^0,f,c
  4131  001C6E  EF1A  F00E         	goto	l2358
  4132  001C72                     l2366:
  4133  001C72  500A               	movf	___almod@sign^0,w,c
  4134  001C74  B4D8               	btfsc	status,2,c
  4135  001C76  EF3F  F00E         	goto	u2001
  4136  001C7A  EF41  F00E         	goto	u2000
  4137  001C7E                     u2001:
  4138  001C7E  EF49  F00E         	goto	l2370
  4139  001C82                     u2000:
  4140  001C82  1E04               	comf	(___almod@dividend+3)^0,f,c
  4141  001C84  1E03               	comf	(___almod@dividend+2)^0,f,c
  4142  001C86  1E02               	comf	(___almod@dividend+1)^0,f,c
  4143  001C88  6C01               	negf	___almod@dividend^0,c
  4144  001C8A  0E00               	movlw	0
  4145  001C8C  2202               	addwfc	(___almod@dividend+1)^0,f,c
  4146  001C8E  2203               	addwfc	(___almod@dividend+2)^0,f,c
  4147  001C90  2204               	addwfc	(___almod@dividend+3)^0,f,c
  4148  001C92                     l2370:
  4149  001C92  C001  F001         	movff	___almod@dividend,?___almod
  4150  001C96  C002  F002         	movff	___almod@dividend+1,?___almod+1
  4151  001C9A  C003  F003         	movff	___almod@dividend+2,?___almod+2
  4152  001C9E  C004  F004         	movff	___almod@dividend+3,?___almod+3
  4153  001CA2  0012               	return		;funcret
  4154  001CA4                     __end_of___almod:
  4155                           	opt callstack 0
  4156                           
  4157 ;; *************** function ___aldiv *****************
  4158 ;; Defined at:
  4159 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
  4160 ;; Parameters:    Size  Location     Type
  4161 ;;  dividend        4    0[COMRAM] long 
  4162 ;;  divisor         4    4[COMRAM] long 
  4163 ;; Auto vars:     Size  Location     Type
  4164 ;;  quotient        4   10[COMRAM] long 
  4165 ;;  sign            1    9[COMRAM] unsigned char 
  4166 ;;  counter         1    8[COMRAM] unsigned char 
  4167 ;; Return value:  Size  Location     Type
  4168 ;;                  4    0[COMRAM] long 
  4169 ;; Registers used:
  4170 ;;		wreg, status,2, status,0
  4171 ;; Tracked objects:
  4172 ;;		On entry : 0/0
  4173 ;;		On exit  : 0/0
  4174 ;;		Unchanged: 0/0
  4175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4176 ;;      Params:         8       0       0       0       0       0       0       0       0
  4177 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4178 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4179 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4180 ;;Total ram usage:       14 bytes
  4181 ;; Hardware stack levels used:    1
  4182 ;; This function calls:
  4183 ;;		Nothing
  4184 ;; This function is called by:
  4185 ;;		_OledApi_printNum
  4186 ;; This function uses a non-reentrant model
  4187 ;;
  4188                           
  4189                           	psect	text19
  4190  0018A2                     __ptext19:
  4191                           	opt callstack 0
  4192  0018A2                     ___aldiv:
  4193                           	opt callstack 27
  4194  0018A2  0E00               	movlw	0
  4195  0018A4  6E0A               	movwf	___aldiv@sign^0,c
  4196  0018A6  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
  4197  0018A8  EF5A  F00C         	goto	u1890
  4198  0018AC  EF58  F00C         	goto	u1891
  4199  0018B0                     u1891:
  4200  0018B0  EF64  F00C         	goto	l2302
  4201  0018B4                     u1890:
  4202  0018B4  1E08               	comf	(___aldiv@divisor+3)^0,f,c
  4203  0018B6  1E07               	comf	(___aldiv@divisor+2)^0,f,c
  4204  0018B8  1E06               	comf	(___aldiv@divisor+1)^0,f,c
  4205  0018BA  6C05               	negf	___aldiv@divisor^0,c
  4206  0018BC  0E00               	movlw	0
  4207  0018BE  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
  4208  0018C0  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
  4209  0018C2  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
  4210  0018C4  0E01               	movlw	1
  4211  0018C6  6E0A               	movwf	___aldiv@sign^0,c
  4212  0018C8                     l2302:
  4213  0018C8  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
  4214  0018CA  EF6B  F00C         	goto	u1900
  4215  0018CE  EF69  F00C         	goto	u1901
  4216  0018D2                     u1901:
  4217  0018D2  EF75  F00C         	goto	l2308
  4218  0018D6                     u1900:
  4219  0018D6  1E04               	comf	(___aldiv@dividend+3)^0,f,c
  4220  0018D8  1E03               	comf	(___aldiv@dividend+2)^0,f,c
  4221  0018DA  1E02               	comf	(___aldiv@dividend+1)^0,f,c
  4222  0018DC  6C01               	negf	___aldiv@dividend^0,c
  4223  0018DE  0E00               	movlw	0
  4224  0018E0  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
  4225  0018E2  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
  4226  0018E4  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
  4227  0018E6  0E01               	movlw	1
  4228  0018E8  1A0A               	xorwf	___aldiv@sign^0,f,c
  4229  0018EA                     l2308:
  4230  0018EA  0E00               	movlw	0
  4231  0018EC  6E0B               	movwf	___aldiv@quotient^0,c
  4232  0018EE  0E00               	movlw	0
  4233  0018F0  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  4234  0018F2  0E00               	movlw	0
  4235  0018F4  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  4236  0018F6  0E00               	movlw	0
  4237  0018F8  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  4238  0018FA  5005               	movf	___aldiv@divisor^0,w,c
  4239  0018FC  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  4240  0018FE  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  4241  001900  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  4242  001902  B4D8               	btfsc	status,2,c
  4243  001904  EF86  F00C         	goto	u1911
  4244  001908  EF88  F00C         	goto	u1910
  4245  00190C                     u1911:
  4246  00190C  EFBE  F00C         	goto	l2330
  4247  001910                     u1910:
  4248  001910  0E01               	movlw	1
  4249  001912  6E09               	movwf	___aldiv@counter^0,c
  4250  001914  EF92  F00C         	goto	l2316
  4251  001918                     l2314:
  4252  001918  90D8               	bcf	status,0,c
  4253  00191A  3605               	rlcf	___aldiv@divisor^0,f,c
  4254  00191C  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
  4255  00191E  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
  4256  001920  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
  4257  001922  2A09               	incf	___aldiv@counter^0,f,c
  4258  001924                     l2316:
  4259  001924  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
  4260  001926  EF97  F00C         	goto	u1921
  4261  00192A  EF99  F00C         	goto	u1920
  4262  00192E                     u1921:
  4263  00192E  EF8C  F00C         	goto	l2314
  4264  001932                     u1920:
  4265  001932                     l2318:
  4266  001932  90D8               	bcf	status,0,c
  4267  001934  360B               	rlcf	___aldiv@quotient^0,f,c
  4268  001936  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
  4269  001938  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
  4270  00193A  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
  4271  00193C  5005               	movf	___aldiv@divisor^0,w,c
  4272  00193E  5C01               	subwf	___aldiv@dividend^0,w,c
  4273  001940  5006               	movf	(___aldiv@divisor+1)^0,w,c
  4274  001942  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
  4275  001944  5007               	movf	(___aldiv@divisor+2)^0,w,c
  4276  001946  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
  4277  001948  5008               	movf	(___aldiv@divisor+3)^0,w,c
  4278  00194A  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
  4279  00194C  A0D8               	btfss	status,0,c
  4280  00194E  EFAB  F00C         	goto	u1931
  4281  001952  EFAD  F00C         	goto	u1930
  4282  001956                     u1931:
  4283  001956  EFB6  F00C         	goto	l2326
  4284  00195A                     u1930:
  4285  00195A  5005               	movf	___aldiv@divisor^0,w,c
  4286  00195C  5E01               	subwf	___aldiv@dividend^0,f,c
  4287  00195E  5006               	movf	(___aldiv@divisor+1)^0,w,c
  4288  001960  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
  4289  001962  5007               	movf	(___aldiv@divisor+2)^0,w,c
  4290  001964  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
  4291  001966  5008               	movf	(___aldiv@divisor+3)^0,w,c
  4292  001968  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
  4293  00196A  800B               	bsf	___aldiv@quotient^0,0,c
  4294  00196C                     l2326:
  4295  00196C  90D8               	bcf	status,0,c
  4296  00196E  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
  4297  001970  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
  4298  001972  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
  4299  001974  3205               	rrcf	___aldiv@divisor^0,f,c
  4300  001976  2E09               	decfsz	___aldiv@counter^0,f,c
  4301  001978  EF99  F00C         	goto	l2318
  4302  00197C                     l2330:
  4303  00197C  500A               	movf	___aldiv@sign^0,w,c
  4304  00197E  B4D8               	btfsc	status,2,c
  4305  001980  EFC4  F00C         	goto	u1941
  4306  001984  EFC6  F00C         	goto	u1940
  4307  001988                     u1941:
  4308  001988  EFCE  F00C         	goto	l2334
  4309  00198C                     u1940:
  4310  00198C  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
  4311  00198E  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
  4312  001990  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
  4313  001992  6C0B               	negf	___aldiv@quotient^0,c
  4314  001994  0E00               	movlw	0
  4315  001996  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
  4316  001998  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
  4317  00199A  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
  4318  00199C                     l2334:
  4319  00199C  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  4320  0019A0  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  4321  0019A4  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  4322  0019A8  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  4323  0019AC  0012               	return		;funcret
  4324  0019AE                     __end_of___aldiv:
  4325                           	opt callstack 0
  4326                           
  4327 ;; *************** function _OledApi_init *****************
  4328 ;; Defined at:
  4329 ;;		line 14 in file "OledApi.c"
  4330 ;; Parameters:    Size  Location     Type
  4331 ;;  enable          2   14[COMRAM] unsigned int 
  4332 ;; Auto vars:     Size  Location     Type
  4333 ;;		None
  4334 ;; Return value:  Size  Location     Type
  4335 ;;                  1    wreg      void 
  4336 ;; Registers used:
  4337 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4338 ;; Tracked objects:
  4339 ;;		On entry : 0/0
  4340 ;;		On exit  : 0/0
  4341 ;;		Unchanged: 0/0
  4342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4343 ;;      Params:         2       0       0       0       0       0       0       0       0
  4344 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4345 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4346 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4347 ;;Total ram usage:        2 bytes
  4348 ;; Hardware stack levels used:    1
  4349 ;; Hardware stack levels required when called:    6
  4350 ;; This function calls:
  4351 ;;		_begin
  4352 ;; This function is called by:
  4353 ;;		_setup
  4354 ;; This function uses a non-reentrant model
  4355 ;;
  4356                           
  4357                           	psect	text20
  4358  0022BC                     __ptext20:
  4359                           	opt callstack 0
  4360  0022BC                     _OledApi_init:
  4361                           	opt callstack 23
  4362  0022BC                     
  4363                           ;OledApi.c: 14: void OledApi_init(unsigned int enable);OledApi.c: 15: {;OledApi.c: 16:  
      +                          _enable_pin = enable;
  4364  0022BC  C00F  F092         	movff	OledApi_init@enable,OledApi@_enable_pin
  4365  0022C0                     
  4366                           ;OledApi.c: 19:   _displayfunction = 0x00;
  4367  0022C0  0E00               	movlw	0
  4368  0022C2  0100               	movlb	0	; () banked
  4369  0022C4  6F78               	movwf	OledApi@_displayfunction& (0+255),b
  4370  0022C6                     
  4371                           ; BSR set to: 0
  4372                           ;OledApi.c: 25:     TRISC &= ~0b00000001;
  4373  0022C6  9094               	bcf	148,0,c	;volatile
  4374  0022C8                     
  4375                           ; BSR set to: 0
  4376                           ;OledApi.c: 26:     TRISC |= 0b00000010;
  4377  0022C8  8294               	bsf	148,1,c	;volatile
  4378  0022CA                     
  4379                           ; BSR set to: 0
  4380                           ;OledApi.c: 27:     TRISC &= ~0b00000100;
  4381  0022CA  9494               	bcf	148,2,c	;volatile
  4382  0022CC                     
  4383                           ; BSR set to: 0
  4384                           ;OledApi.c: 28:     TRISC &= ~enable;
  4385  0022CC  500F               	movf	OledApi_init@enable^0,w,c	;volatile
  4386  0022CE  0AFF               	xorlw	255
  4387  0022D0  1694               	andwf	148,f,c	;volatile
  4388  0022D2                     
  4389                           ; BSR set to: 0
  4390                           ;OledApi.c: 29:  LATC |= enable;
  4391  0022D2  500F               	movf	OledApi_init@enable^0,w,c	;volatile
  4392  0022D4  128B               	iorwf	139,f,c	;volatile
  4393  0022D6                     
  4394                           ; BSR set to: 0
  4395                           ;OledApi.c: 31:     begin(16,2);
  4396  0022D6  0E02               	movlw	2
  4397  0022D8  6E0D               	movwf	begin@rows^0,c
  4398  0022DA  0E10               	movlw	16
  4399  0022DC  EC63  F010         	call	_begin
  4400  0022E0  0012               	return		;funcret
  4401  0022E2                     __end_of_OledApi_init:
  4402                           	opt callstack 0
  4403                           
  4404 ;; *************** function _begin *****************
  4405 ;; Defined at:
  4406 ;;		line 36 in file "OledApi.c"
  4407 ;; Parameters:    Size  Location     Type
  4408 ;;  cols            1    wreg     unsigned char 
  4409 ;;  rows            1   12[COMRAM] unsigned char 
  4410 ;; Auto vars:     Size  Location     Type
  4411 ;;  cols            1    0[COMRAM] unsigned char 
  4412 ;; Return value:  Size  Location     Type
  4413 ;;                  1    wreg      void 
  4414 ;; Registers used:
  4415 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4416 ;; Tracked objects:
  4417 ;;		On entry : 0/0
  4418 ;;		On exit  : 0/0
  4419 ;;		Unchanged: 0/0
  4420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4421 ;;      Params:         1       0       0       0       0       0       0       0       0
  4422 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4423 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4424 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4425 ;;Total ram usage:        2 bytes
  4426 ;; Hardware stack levels used:    1
  4427 ;; Hardware stack levels required when called:    5
  4428 ;; This function calls:
  4429 ;;		_OledApi_clear
  4430 ;;		_OledApi_home
  4431 ;;		_command
  4432 ;; This function is called by:
  4433 ;;		_OledApi_init
  4434 ;; This function uses a non-reentrant model
  4435 ;;
  4436                           
  4437                           	psect	text21
  4438  0020C6                     __ptext21:
  4439                           	opt callstack 0
  4440  0020C6                     _begin:
  4441                           	opt callstack 23
  4442  0020C6                     
  4443                           ;OledApi.c: 36: static void begin(uint8_t cols, uint8_t rows);OledApi.c: 37: {;OledApi.c
      +                          : 40:     _delaywdt((unsigned long)((1)*(8000000/4000.0)));
  4444  0020C6  0E02               	movlw	2
  4445  0020C8  6E0E               	movwf	??_begin^0,c
  4446  0020CA  0EF2               	movlw	242
  4447  0020CC                     u2737:
  4448  0020CC  0004               	clrwdt	
  4449  0020CE  2EE8               	decfsz	wreg,f,c
  4450  0020D0  D7FD               	bra	u2737
  4451  0020D2  2E0E               	decfsz	??_begin^0,f,c
  4452  0020D4  D7FB               	bra	u2737
  4453  0020D6  0004               	clrwdt	
  4454  0020D8  F000               	nop	
  4455  0020DA                     
  4456                           ;OledApi.c: 43:  command(0x28 | _displayfunction | 0x00);
  4457  0020DA  0100               	movlb	0	; () banked
  4458  0020DC  5178               	movf	OledApi@_displayfunction& (0+255),w,b
  4459  0020DE  0928               	iorlw	40
  4460  0020E0  EC9E  F011         	call	_command
  4461  0020E4                     
  4462                           ;OledApi.c: 46:  command(0x08 | 0x00);
  4463  0020E4  0E08               	movlw	8
  4464  0020E6  EC9E  F011         	call	_command
  4465  0020EA                     
  4466                           ;OledApi.c: 49:  OledApi_clear();
  4467  0020EA  EC71  F011         	call	_OledApi_clear	;wreg free
  4468  0020EE                     
  4469                           ;OledApi.c: 52:  _displaymode = 0x02 | 0x00;
  4470  0020EE  0E02               	movlw	2
  4471  0020F0  0100               	movlb	0	; () banked
  4472  0020F2  6F76               	movwf	OledApi@_displaymode& (0+255),b
  4473  0020F4                     
  4474                           ; BSR set to: 0
  4475                           ;OledApi.c: 53:  command(0x04 | _displaymode);
  4476  0020F4  5176               	movf	OledApi@_displaymode& (0+255),w,b
  4477  0020F6  0904               	iorlw	4
  4478  0020F8  EC9E  F011         	call	_command
  4479  0020FC                     
  4480                           ;OledApi.c: 56:  OledApi_home();
  4481  0020FC  ECDF  F011         	call	_OledApi_home	;wreg free
  4482  002100                     
  4483                           ;OledApi.c: 59:  _displaycontrol = 0x04 | 0x00;
  4484  002100  0E04               	movlw	4
  4485  002102  0100               	movlb	0	; () banked
  4486  002104  6F77               	movwf	OledApi@_displaycontrol& (0+255),b
  4487  002106                     
  4488                           ; BSR set to: 0
  4489                           ;OledApi.c: 60:  command(0x08 | _displaycontrol);
  4490  002106  5177               	movf	OledApi@_displaycontrol& (0+255),w,b
  4491  002108  0908               	iorlw	8
  4492  00210A  EC9E  F011         	call	_command
  4493  00210E  0012               	return		;funcret
  4494  002110                     __end_of_begin:
  4495                           	opt callstack 0
  4496                           
  4497 ;; *************** function _OledApi_clear *****************
  4498 ;; Defined at:
  4499 ;;		line 67 in file "OledApi.c"
  4500 ;; Parameters:    Size  Location     Type
  4501 ;;		None
  4502 ;; Auto vars:     Size  Location     Type
  4503 ;;		None
  4504 ;; Return value:  Size  Location     Type
  4505 ;;                  1    wreg      void 
  4506 ;; Registers used:
  4507 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4508 ;; Tracked objects:
  4509 ;;		On entry : 0/0
  4510 ;;		On exit  : 0/0
  4511 ;;		Unchanged: 0/0
  4512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4513 ;;      Params:         0       0       0       0       0       0       0       0       0
  4514 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4515 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4516 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4517 ;;Total ram usage:        1 bytes
  4518 ;; Hardware stack levels used:    1
  4519 ;; Hardware stack levels required when called:    4
  4520 ;; This function calls:
  4521 ;;		_OledApi_home
  4522 ;;		_command
  4523 ;; This function is called by:
  4524 ;;		_main
  4525 ;;		_begin
  4526 ;; This function uses a non-reentrant model
  4527 ;;
  4528                           
  4529                           	psect	text22
  4530  0022E2                     __ptext22:
  4531                           	opt callstack 0
  4532  0022E2                     _OledApi_clear:
  4533                           	opt callstack 23
  4534  0022E2                     
  4535                           ;OledApi.c: 69:  command(0x01);
  4536  0022E2  0E01               	movlw	1
  4537  0022E4  EC9E  F011         	call	_command
  4538  0022E8                     
  4539                           ;OledApi.c: 70:  _delaywdt((unsigned long)((1)*(8000000/4000.0)));
  4540  0022E8  0E02               	movlw	2
  4541  0022EA  6E0C               	movwf	??_OledApi_clear^0,c
  4542  0022EC  0EF2               	movlw	242
  4543  0022EE                     u2747:
  4544  0022EE  0004               	clrwdt	
  4545  0022F0  2EE8               	decfsz	wreg,f,c
  4546  0022F2  D7FD               	bra	u2747
  4547  0022F4  2E0C               	decfsz	??_OledApi_clear^0,f,c
  4548  0022F6  D7FB               	bra	u2747
  4549  0022F8  0004               	clrwdt	
  4550  0022FA  F000               	nop	
  4551  0022FC                     
  4552                           ;OledApi.c: 71:  OledApi_home();
  4553  0022FC  ECDF  F011         	call	_OledApi_home	;wreg free
  4554  002300  0012               	return		;funcret
  4555  002302                     __end_of_OledApi_clear:
  4556                           	opt callstack 0
  4557                           
  4558 ;; *************** function _OledApi_home *****************
  4559 ;; Defined at:
  4560 ;;		line 74 in file "OledApi.c"
  4561 ;; Parameters:    Size  Location     Type
  4562 ;;		None
  4563 ;; Auto vars:     Size  Location     Type
  4564 ;;		None
  4565 ;; Return value:  Size  Location     Type
  4566 ;;                  1    wreg      void 
  4567 ;; Registers used:
  4568 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4569 ;; Tracked objects:
  4570 ;;		On entry : 0/0
  4571 ;;		On exit  : 0/0
  4572 ;;		Unchanged: 0/0
  4573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4574 ;;      Params:         0       0       0       0       0       0       0       0       0
  4575 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4576 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4577 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4578 ;;Total ram usage:        0 bytes
  4579 ;; Hardware stack levels used:    1
  4580 ;; Hardware stack levels required when called:    3
  4581 ;; This function calls:
  4582 ;;		_command
  4583 ;; This function is called by:
  4584 ;;		_begin
  4585 ;;		_OledApi_clear
  4586 ;; This function uses a non-reentrant model
  4587 ;;
  4588                           
  4589                           	psect	text23
  4590  0023BE                     __ptext23:
  4591                           	opt callstack 0
  4592  0023BE                     _OledApi_home:
  4593                           	opt callstack 24
  4594  0023BE                     
  4595                           ;OledApi.c: 76:  command(0x02);
  4596  0023BE  0E02               	movlw	2
  4597  0023C0  EC9E  F011         	call	_command
  4598  0023C4  0012               	return		;funcret
  4599  0023C6                     __end_of_OledApi_home:
  4600                           	opt callstack 0
  4601                           
  4602 ;; *************** function _OledApi_createChar *****************
  4603 ;; Defined at:
  4604 ;;		line 159 in file "OledApi.c"
  4605 ;; Parameters:    Size  Location     Type
  4606 ;;  location        1    wreg     unsigned char 
  4607 ;;  charmap         2   11[COMRAM] PTR unsigned char 
  4608 ;;		 -> ac(8), dc(8), 
  4609 ;; Auto vars:     Size  Location     Type
  4610 ;;  location        1   13[COMRAM] unsigned char 
  4611 ;;  i               2   14[COMRAM] int 
  4612 ;; Return value:  Size  Location     Type
  4613 ;;                  1    wreg      void 
  4614 ;; Registers used:
  4615 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4616 ;; Tracked objects:
  4617 ;;		On entry : 0/0
  4618 ;;		On exit  : 0/0
  4619 ;;		Unchanged: 0/0
  4620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4621 ;;      Params:         2       0       0       0       0       0       0       0       0
  4622 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4623 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4624 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4625 ;;Total ram usage:        5 bytes
  4626 ;; Hardware stack levels used:    1
  4627 ;; Hardware stack levels required when called:    3
  4628 ;; This function calls:
  4629 ;;		_command
  4630 ;;		_write
  4631 ;; This function is called by:
  4632 ;;		_setup
  4633 ;; This function uses a non-reentrant model
  4634 ;;
  4635                           
  4636                           	psect	text24
  4637  002078                     __ptext24:
  4638                           	opt callstack 0
  4639  002078                     _OledApi_createChar:
  4640                           	opt callstack 26
  4641                           
  4642                           ;incstack = 0
  4643                           ;OledApi_createChar@location stored from wreg
  4644  002078  6E0E               	movwf	OledApi_createChar@location^0,c
  4645  00207A                     
  4646                           ;OledApi.c: 160:  location &= 0x7;
  4647  00207A  0E07               	movlw	7
  4648  00207C  160E               	andwf	OledApi_createChar@location^0,f,c
  4649  00207E                     
  4650                           ;OledApi.c: 161:  command(0x40 | (location << 3));
  4651  00207E  380E               	swapf	OledApi_createChar@location^0,w,c
  4652  002080  42E8               	rrncf	wreg,f,c
  4653  002082  0BF8               	andlw	248
  4654  002084  0940               	iorlw	64
  4655  002086  EC9E  F011         	call	_command
  4656  00208A                     
  4657                           ;OledApi.c: 162:  for (int i=0; i<8; i++) {
  4658  00208A  0E00               	movlw	0
  4659  00208C  6E10               	movwf	(OledApi_createChar@i+1)^0,c
  4660  00208E  0E00               	movlw	0
  4661  002090  6E0F               	movwf	OledApi_createChar@i^0,c
  4662  002092                     l2894:
  4663                           
  4664                           ;OledApi.c: 163:   write(charmap[i]);
  4665  002092  500F               	movf	OledApi_createChar@i^0,w,c
  4666  002094  240C               	addwf	OledApi_createChar@charmap^0,w,c
  4667  002096  6ED9               	movwf	fsr2l,c
  4668  002098  5010               	movf	(OledApi_createChar@i+1)^0,w,c
  4669  00209A  200D               	addwfc	(OledApi_createChar@charmap+1)^0,w,c
  4670  00209C  6EDA               	movwf	fsr2h,c
  4671  00209E  50DF               	movf	indf2,w,c
  4672  0020A0  EC91  F011         	call	_write
  4673  0020A4                     
  4674                           ;OledApi.c: 164:  }
  4675  0020A4  4A0F               	infsnz	OledApi_createChar@i^0,f,c
  4676  0020A6  2A10               	incf	(OledApi_createChar@i+1)^0,f,c
  4677  0020A8  BE10               	btfsc	(OledApi_createChar@i+1)^0,7,c
  4678  0020AA  EF60  F010         	goto	u2701
  4679  0020AE  5010               	movf	(OledApi_createChar@i+1)^0,w,c
  4680  0020B0  E109               	bnz	u2700
  4681  0020B2  0E08               	movlw	8
  4682  0020B4  5C0F               	subwf	OledApi_createChar@i^0,w,c
  4683  0020B6  A0D8               	btfss	status,0,c
  4684  0020B8  EF60  F010         	goto	u2701
  4685  0020BC  EF62  F010         	goto	u2700
  4686  0020C0                     u2701:
  4687  0020C0  EF49  F010         	goto	l2894
  4688  0020C4                     u2700:
  4689  0020C4  0012               	return		;funcret
  4690  0020C6                     __end_of_OledApi_createChar:
  4691                           	opt callstack 0
  4692                           
  4693 ;; *************** function _write *****************
  4694 ;; Defined at:
  4695 ;;		line 316 in file "OledApi.c"
  4696 ;; Parameters:    Size  Location     Type
  4697 ;;  value           1    wreg     unsigned char 
  4698 ;; Auto vars:     Size  Location     Type
  4699 ;;  value           1   10[COMRAM] unsigned char 
  4700 ;; Return value:  Size  Location     Type
  4701 ;;                  1    wreg      void 
  4702 ;; Registers used:
  4703 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4704 ;; Tracked objects:
  4705 ;;		On entry : 0/0
  4706 ;;		On exit  : 0/0
  4707 ;;		Unchanged: 0/0
  4708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4709 ;;      Params:         0       0       0       0       0       0       0       0       0
  4710 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4711 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4712 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4713 ;;Total ram usage:        1 bytes
  4714 ;; Hardware stack levels used:    1
  4715 ;; Hardware stack levels required when called:    2
  4716 ;; This function calls:
  4717 ;;		_send
  4718 ;; This function is called by:
  4719 ;;		_OledApi_createChar
  4720 ;;		_OledApi_printSpec
  4721 ;;		_OledApi_printf
  4722 ;; This function uses a non-reentrant model
  4723 ;;
  4724                           
  4725                           	psect	text25
  4726  002322                     __ptext25:
  4727                           	opt callstack 0
  4728  002322                     _write:
  4729                           	opt callstack 26
  4730                           
  4731                           ;incstack = 0
  4732                           ;write@value stored from wreg
  4733  002322  6E0B               	movwf	write@value^0,c
  4734  002324                     
  4735                           ;OledApi.c: 316: static void write(uint8_t value);OledApi.c: 317: {;OledApi.c: 318:  sen
      +                          d(1, &value, 1);
  4736  002324  0E0B               	movlw	low write@value
  4737  002326  6E02               	movwf	send@buf^0,c
  4738  002328  0E00               	movlw	high write@value
  4739  00232A  6E03               	movwf	(send@buf+1)^0,c
  4740  00232C  0E00               	movlw	0
  4741  00232E  6E05               	movwf	(send@count+1)^0,c
  4742  002330  0E01               	movlw	1
  4743  002332  6E04               	movwf	send@count^0,c
  4744  002334  0E01               	movlw	1
  4745  002336  ECC4  F00E         	call	_send
  4746  00233A  0012               	return		;funcret
  4747  00233C                     __end_of_write:
  4748                           	opt callstack 0
  4749                           
  4750 ;; *************** function _command *****************
  4751 ;; Defined at:
  4752 ;;		line 311 in file "OledApi.c"
  4753 ;; Parameters:    Size  Location     Type
  4754 ;;  value           1    wreg     unsigned char 
  4755 ;; Auto vars:     Size  Location     Type
  4756 ;;  value           1   10[COMRAM] unsigned char 
  4757 ;; Return value:  Size  Location     Type
  4758 ;;                  1    wreg      void 
  4759 ;; Registers used:
  4760 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4761 ;; Tracked objects:
  4762 ;;		On entry : 0/0
  4763 ;;		On exit  : 0/0
  4764 ;;		Unchanged: 0/0
  4765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4766 ;;      Params:         0       0       0       0       0       0       0       0       0
  4767 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4768 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4769 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4770 ;;Total ram usage:        1 bytes
  4771 ;; Hardware stack levels used:    1
  4772 ;; Hardware stack levels required when called:    2
  4773 ;; This function calls:
  4774 ;;		_send
  4775 ;; This function is called by:
  4776 ;;		_begin
  4777 ;;		_OledApi_clear
  4778 ;;		_OledApi_home
  4779 ;;		_OledApi_setCursor
  4780 ;;		_OledApi_createChar
  4781 ;;		_OledApi_noDisplay
  4782 ;;		_OledApi_display
  4783 ;;		_OledApi_noCursor
  4784 ;;		_OledApi_cursor
  4785 ;;		_OledApi_noBlink
  4786 ;;		_OledApi_blink
  4787 ;;		_OledApi_scrollDisplayLeft
  4788 ;;		_OledApi_scrollDisplayRight
  4789 ;;		_OledApi_leftToRight
  4790 ;;		_OledApi_rightToLeft
  4791 ;;		_OledApi_autoscroll
  4792 ;;		_OledApi_noAutoscroll
  4793 ;; This function uses a non-reentrant model
  4794 ;;
  4795                           
  4796                           	psect	text26
  4797  00233C                     __ptext26:
  4798                           	opt callstack 0
  4799  00233C                     _command:
  4800                           	opt callstack 25
  4801                           
  4802                           ;incstack = 0
  4803                           ;command@value stored from wreg
  4804  00233C  6E0B               	movwf	command@value^0,c
  4805  00233E                     
  4806                           ;OledApi.c: 312:  send(0, &value, 1);
  4807  00233E  0E0B               	movlw	low command@value
  4808  002340  6E02               	movwf	send@buf^0,c
  4809  002342  0E00               	movlw	high command@value
  4810  002344  6E03               	movwf	(send@buf+1)^0,c
  4811  002346  0E00               	movlw	0
  4812  002348  6E05               	movwf	(send@count+1)^0,c
  4813  00234A  0E01               	movlw	1
  4814  00234C  6E04               	movwf	send@count^0,c
  4815  00234E  0E00               	movlw	0
  4816  002350  ECC4  F00E         	call	_send
  4817  002354  0012               	return		;funcret
  4818  002356                     __end_of_command:
  4819                           	opt callstack 0
  4820                           
  4821 ;; *************** function _send *****************
  4822 ;; Defined at:
  4823 ;;		line 335 in file "OledApi.c"
  4824 ;; Parameters:    Size  Location     Type
  4825 ;;  mode            1    wreg     unsigned char 
  4826 ;;  buf             2    1[COMRAM] PTR void 
  4827 ;;		 -> write@value(1), command@value(1), OledApi_printNum@s(17), ?_OledApi_printf(1), 
  4828 ;;		 -> STR_2(5), 
  4829 ;;  count           2    3[COMRAM] unsigned int 
  4830 ;; Auto vars:     Size  Location     Type
  4831 ;;  mode            1    5[COMRAM] unsigned char 
  4832 ;;  mask            1    9[COMRAM] unsigned char 
  4833 ;;  p               2    6[COMRAM] PTR unsigned char 
  4834 ;;		 -> write@value(1), command@value(1), OledApi_printNum@s(17), ?_OledApi_printf(1), 
  4835 ;;		 -> STR_2(5), 
  4836 ;;  head_sent       1    8[COMRAM] unsigned char 
  4837 ;; Return value:  Size  Location     Type
  4838 ;;                  1    wreg      void 
  4839 ;; Registers used:
  4840 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4841 ;; Tracked objects:
  4842 ;;		On entry : 0/0
  4843 ;;		On exit  : 0/0
  4844 ;;		Unchanged: 0/0
  4845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4846 ;;      Params:         4       0       0       0       0       0       0       0       0
  4847 ;;      Locals:         5       0       0       0       0       0       0       0       0
  4848 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4849 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4850 ;;Total ram usage:        9 bytes
  4851 ;; Hardware stack levels used:    1
  4852 ;; Hardware stack levels required when called:    1
  4853 ;; This function calls:
  4854 ;;		_sendBit
  4855 ;; This function is called by:
  4856 ;;		_command
  4857 ;;		_write
  4858 ;;		_writeStr
  4859 ;; This function uses a non-reentrant model
  4860 ;;
  4861                           
  4862                           	psect	text27
  4863  001D88                     __ptext27:
  4864                           	opt callstack 0
  4865  001D88                     _send:
  4866                           	opt callstack 26
  4867                           
  4868                           ;incstack = 0
  4869                           ;send@mode stored from wreg
  4870  001D88  6E06               	movwf	send@mode^0,c
  4871  001D8A                     
  4872                           ;OledApi.c: 336:  if (count == 0)
  4873  001D8A  5004               	movf	send@count^0,w,c
  4874  001D8C  1005               	iorwf	(send@count+1)^0,w,c
  4875  001D8E  A4D8               	btfss	status,2,c
  4876  001D90  EFCC  F00E         	goto	u1371
  4877  001D94  EFCE  F00E         	goto	u1370
  4878  001D98                     u1371:
  4879  001D98  EFD0  F00E         	goto	l2002
  4880  001D9C                     u1370:
  4881  001D9C  EF29  F00F         	goto	l213
  4882  001DA0                     l2002:
  4883                           
  4884                           ;OledApi.c: 339:  uint8_t head_sent = 0;
  4885  001DA0  0E00               	movlw	0
  4886  001DA2  6E09               	movwf	send@head_sent^0,c
  4887  001DA4                     
  4888                           ;OledApi.c: 343:     LATC &= ~_enable_pin;
  4889  001DA4  0100               	movlb	0	; () banked
  4890  001DA6  5192               	movf	OledApi@_enable_pin& (0+255),w,b	;volatile
  4891  001DA8  0AFF               	xorlw	255
  4892  001DAA  168B               	andwf	139,f,c	;volatile
  4893  001DAC                     
  4894                           ; BSR set to: 0
  4895                           ;OledApi.c: 346:  uint8_t *p = (uint8_t *)buf;
  4896  001DAC  C002  F007         	movff	send@buf,send@p
  4897  001DB0  C003  F008         	movff	send@buf+1,send@p+1
  4898  001DB4                     l214:
  4899                           
  4900                           ;OledApi.c: 351:   if (head_sent == 0) {
  4901  001DB4  5009               	movf	send@head_sent^0,w,c
  4902  001DB6  A4D8               	btfss	status,2,c
  4903  001DB8  EFE0  F00E         	goto	u1381
  4904  001DBC  EFE2  F00E         	goto	u1380
  4905  001DC0                     u1381:
  4906  001DC0  EFF7  F00E         	goto	l2016
  4907  001DC4                     u1380:
  4908  001DC4                     
  4909                           ;OledApi.c: 353:    if (mode == 1) {
  4910  001DC4  0406               	decf	send@mode^0,w,c
  4911  001DC6  A4D8               	btfss	status,2,c
  4912  001DC8  EFE8  F00E         	goto	u1391
  4913  001DCC  EFEA  F00E         	goto	u1390
  4914  001DD0                     u1391:
  4915  001DD0  EFF1  F00E         	goto	l2014
  4916  001DD4                     u1390:
  4917  001DD4                     
  4918                           ;OledApi.c: 354:     sendBit(1);
  4919  001DD4  0E01               	movlw	1
  4920  001DD6  EC81  F011         	call	_sendBit
  4921  001DDA                     
  4922                           ;OledApi.c: 355:     head_sent = 1;
  4923  001DDA  0E01               	movlw	1
  4924  001DDC  6E09               	movwf	send@head_sent^0,c
  4925                           
  4926                           ;OledApi.c: 356:    } else
  4927  001DDE  EFF4  F00E         	goto	l217
  4928  001DE2                     l2014:
  4929                           
  4930                           ;OledApi.c: 357:     sendBit(0);
  4931  001DE2  0E00               	movlw	0
  4932  001DE4  EC81  F011         	call	_sendBit
  4933  001DE8                     l217:
  4934                           
  4935                           ;OledApi.c: 361:    sendBit(0);
  4936  001DE8  0E00               	movlw	0
  4937  001DEA  EC81  F011         	call	_sendBit
  4938  001DEE                     l2016:
  4939                           
  4940                           ;OledApi.c: 365:   for (uint8_t mask = 0x80; mask; mask >>= 1) {
  4941  001DEE  0E80               	movlw	128
  4942  001DF0  6E0A               	movwf	send@mask^0,c
  4943  001DF2  EF10  F00F         	goto	l2022
  4944  001DF6                     l2018:
  4945                           
  4946                           ;OledApi.c: 366:    sendBit(mask & *p);
  4947  001DF6  C007  FFF6         	movff	send@p,tblptrl
  4948  001DFA  C008  FFF7         	movff	send@p+1,tblptrh
  4949  001DFE  6AF8               	clrf	tblptru,c
  4950  001E00  0E07               	movlw	(high __ramtop+-1)
  4951  001E02  64F7               	cpfsgt	tblptrh,c
  4952  001E04  D003               	bra	u1407
  4953  001E06  0008               	tblrd		*
  4954  001E08  50F5               	movf	tablat,w,c
  4955  001E0A  D005               	bra	u1400
  4956  001E0C                     u1407:
  4957  001E0C  CFF6 FFE9          	movff	tblptrl,fsr0l
  4958  001E10  CFF7 FFEA          	movff	tblptrh,fsr0h
  4959  001E14  50EF               	movf	indf0,w,c
  4960  001E16                     u1400:
  4961  001E16  140A               	andwf	send@mask^0,w,c
  4962  001E18  EC81  F011         	call	_sendBit
  4963  001E1C                     
  4964                           ;OledApi.c: 367:   }
  4965  001E1C  90D8               	bcf	status,0,c
  4966  001E1E  320A               	rrcf	send@mask^0,f,c
  4967  001E20                     l2022:
  4968  001E20  500A               	movf	send@mask^0,w,c
  4969  001E22  A4D8               	btfss	status,2,c
  4970  001E24  EF16  F00F         	goto	u1411
  4971  001E28  EF18  F00F         	goto	u1410
  4972  001E2C                     u1411:
  4973  001E2C  EFFB  F00E         	goto	l2018
  4974  001E30                     u1410:
  4975  001E30                     
  4976                           ;OledApi.c: 370:   p++;
  4977  001E30  4A07               	infsnz	send@p^0,f,c
  4978  001E32  2A08               	incf	(send@p+1)^0,f,c
  4979  001E34                     
  4980                           ;OledApi.c: 371:  } while (--count > 0);
  4981  001E34  0604               	decf	send@count^0,f,c
  4982  001E36  A0D8               	btfss	status,0,c
  4983  001E38  0605               	decf	(send@count+1)^0,f,c
  4984  001E3A  5004               	movf	send@count^0,w,c
  4985  001E3C  1005               	iorwf	(send@count+1)^0,w,c
  4986  001E3E  A4D8               	btfss	status,2,c
  4987  001E40  EF24  F00F         	goto	u1421
  4988  001E44  EF26  F00F         	goto	u1420
  4989  001E48                     u1421:
  4990  001E48  EFDA  F00E         	goto	l214
  4991  001E4C                     u1420:
  4992  001E4C                     
  4993                           ;OledApi.c: 375:     LATC |= _enable_pin;
  4994  001E4C  0100               	movlb	0	; () banked
  4995  001E4E  5192               	movf	OledApi@_enable_pin& (0+255),w,b	;volatile
  4996  001E50  128B               	iorwf	139,f,c	;volatile
  4997  001E52                     l213:
  4998  001E52  0012               	return		;funcret
  4999  001E54                     __end_of_send:
  5000                           	opt callstack 0
  5001                           
  5002 ;; *************** function _sendBit *****************
  5003 ;; Defined at:
  5004 ;;		line 380 in file "OledApi.c"
  5005 ;; Parameters:    Size  Location     Type
  5006 ;;  b               1    wreg     unsigned char 
  5007 ;; Auto vars:     Size  Location     Type
  5008 ;;  b               1    0[COMRAM] unsigned char 
  5009 ;; Return value:  Size  Location     Type
  5010 ;;                  1    wreg      void 
  5011 ;; Registers used:
  5012 ;;		wreg, status,2, status,0
  5013 ;; Tracked objects:
  5014 ;;		On entry : 0/0
  5015 ;;		On exit  : 0/0
  5016 ;;		Unchanged: 0/0
  5017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5018 ;;      Params:         0       0       0       0       0       0       0       0       0
  5019 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5020 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5021 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5022 ;;Total ram usage:        1 bytes
  5023 ;; Hardware stack levels used:    1
  5024 ;; This function calls:
  5025 ;;		Nothing
  5026 ;; This function is called by:
  5027 ;;		_send
  5028 ;; This function uses a non-reentrant model
  5029 ;;
  5030                           
  5031                           	psect	text28
  5032  002302                     __ptext28:
  5033                           	opt callstack 0
  5034  002302                     _sendBit:
  5035                           	opt callstack 26
  5036                           
  5037                           ;incstack = 0
  5038                           ;sendBit@b stored from wreg
  5039  002302  6E01               	movwf	sendBit@b^0,c
  5040  002304                     
  5041                           ;OledApi.c: 380: static void sendBit(uint8_t b);OledApi.c: 381: {;OledApi.c: 384:     LA
      +                          TC &= ~0b00000001;
  5042  002304  908B               	bcf	139,0,c	;volatile
  5043  002306                     
  5044                           ;OledApi.c: 387:     if(b != 0)
  5045  002306  5001               	movf	sendBit@b^0,w,c
  5046  002308  B4D8               	btfsc	status,2,c
  5047  00230A  EF89  F011         	goto	u1361
  5048  00230E  EF8B  F011         	goto	u1360
  5049  002312                     u1361:
  5050  002312  EF8E  F011         	goto	l1996
  5051  002316                     u1360:
  5052  002316                     
  5053                           ;OledApi.c: 388:     {;OledApi.c: 389:         LATC |= 0b00000100;
  5054  002316  848B               	bsf	139,2,c	;volatile
  5055                           
  5056                           ;OledApi.c: 390:     }
  5057  002318  EF8F  F011         	goto	l225
  5058  00231C                     l1996:
  5059                           
  5060                           ;OledApi.c: 392:     {;OledApi.c: 393:         LATC &= ~0b00000100;
  5061  00231C  948B               	bcf	139,2,c	;volatile
  5062  00231E                     l225:
  5063                           
  5064                           ;OledApi.c: 397:     LATC |= 0b00000001;
  5065  00231E  808B               	bsf	139,0,c	;volatile
  5066  002320  0012               	return		;funcret
  5067  002322                     __end_of_sendBit:
  5068                           	opt callstack 0
  5069                           
  5070 ;; *************** function _ADC_Api_init *****************
  5071 ;; Defined at:
  5072 ;;		line 19 in file "ADC_Api.c"
  5073 ;; Parameters:    Size  Location     Type
  5074 ;;  _en_pin         1    wreg     unsigned char 
  5075 ;; Auto vars:     Size  Location     Type
  5076 ;;  _en_pin         1   17[COMRAM] unsigned char 
  5077 ;;  i               2   18[COMRAM] int 
  5078 ;;  val             3    0        unsigned um
  5079 ;; Return value:  Size  Location     Type
  5080 ;;                  1    wreg      void 
  5081 ;; Registers used:
  5082 ;;		wreg, status,2, status,0, cstack
  5083 ;; Tracked objects:
  5084 ;;		On entry : 0/0
  5085 ;;		On exit  : 0/0
  5086 ;;		Unchanged: 0/0
  5087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5088 ;;      Params:         0       0       0       0       0       0       0       0       0
  5089 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5090 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5091 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5092 ;;Total ram usage:        8 bytes
  5093 ;; Hardware stack levels used:    1
  5094 ;; Hardware stack levels required when called:    2
  5095 ;; This function calls:
  5096 ;;		_command24
  5097 ;;		_command8
  5098 ;;		_isDataRdy
  5099 ;;		_recieve24
  5100 ;; This function is called by:
  5101 ;;		_setup
  5102 ;; This function uses a non-reentrant model
  5103 ;;
  5104                           
  5105                           	psect	text29
  5106  001E54                     __ptext29:
  5107                           	opt callstack 0
  5108  001E54                     _ADC_Api_init:
  5109                           	opt callstack 27
  5110                           
  5111                           ;incstack = 0
  5112                           ;ADC_Api_init@_en_pin stored from wreg
  5113  001E54  6E12               	movwf	ADC_Api_init@_en_pin^0,c
  5114  001E56                     
  5115                           ;ADC_Api.c: 21:     __en_pin = _en_pin;
  5116  001E56  C012  F075         	movff	ADC_Api_init@_en_pin,___en_pin
  5117  001E5A                     
  5118                           ;ADC_Api.c: 24:     TRISB &= 0b000;
  5119  001E5A  0E00               	movlw	0
  5120  001E5C  6E93               	movwf	147,c	;volatile
  5121  001E5E                     
  5122                           ;ADC_Api.c: 25:     TRISB |= 1 << 2;
  5123  001E5E  8493               	bsf	147,2,c	;volatile
  5124  001E60                     
  5125                           ;ADC_Api.c: 26:     TRISB &= ~__en_pin;
  5126  001E60  0100               	movlb	0	; () banked
  5127  001E62  5175               	movf	___en_pin& (0+255),w,b	;volatile
  5128  001E64  0AFF               	xorlw	255
  5129  001E66  1693               	andwf	147,f,c	;volatile
  5130  001E68                     
  5131                           ; BSR set to: 0
  5132                           ;ADC_Api.c: 27:     LATB |= __en_pin;
  5133  001E68  5175               	movf	___en_pin& (0+255),w,b	;volatile
  5134  001E6A  128A               	iorwf	138,f,c	;volatile
  5135  001E6C                     
  5136                           ; BSR set to: 0
  5137                           ;ADC_Api.c: 30:     SSPCON1 |= 0b100010;
  5138  001E6C  0E22               	movlw	34
  5139  001E6E  12C6               	iorwf	198,f,c	;volatile
  5140  001E70                     
  5141                           ; BSR set to: 0
  5142                           ;ADC_Api.c: 32:     _delaywdt((unsigned long)((600)*(8000000/4000.0)));
  5143  001E70  0E05               	movlw	5
  5144  001E72  6E0E               	movwf	(??_ADC_Api_init+1)^0,c
  5145  001E74  0E92               	movlw	146
  5146  001E76  6E0D               	movwf	??_ADC_Api_init^0,c
  5147  001E78  0E93               	movlw	147
  5148  001E7A                     u2757:
  5149  001E7A  0004               	clrwdt	
  5150  001E7C  2EE8               	decfsz	wreg,f,c
  5151  001E7E  D7FD               	bra	u2757
  5152  001E80  2E0D               	decfsz	??_ADC_Api_init^0,f,c
  5153  001E82  D7FB               	bra	u2757
  5154  001E84  2E0E               	decfsz	(??_ADC_Api_init+1)^0,f,c
  5155  001E86  D7F9               	bra	u2757
  5156  001E88  0004               	clrwdt	
  5157  001E8A  F000               	nop	
  5158                           
  5159                           ;ADC_Api.c: 35:     for(int i = 0; i < 16; i++)
  5160  001E8C  0E00               	movlw	0
  5161  001E8E  6E14               	movwf	(ADC_Api_init@i+1)^0,c
  5162  001E90  0E00               	movlw	0
  5163  001E92  6E13               	movwf	ADC_Api_init@i^0,c
  5164  001E94                     l2804:
  5165                           
  5166                           ;ADC_Api.c: 36:     {;ADC_Api.c: 37:         command8(0xff);
  5167  001E94  0EFF               	movlw	255
  5168  001E96  ECB7  F011         	call	_command8
  5169  001E9A                     
  5170                           ;ADC_Api.c: 38:     }
  5171  001E9A  4A13               	infsnz	ADC_Api_init@i^0,f,c
  5172  001E9C  2A14               	incf	(ADC_Api_init@i+1)^0,f,c
  5173  001E9E  BE14               	btfsc	(ADC_Api_init@i+1)^0,7,c
  5174  001EA0  EF5B  F00F         	goto	u2621
  5175  001EA4  5014               	movf	(ADC_Api_init@i+1)^0,w,c
  5176  001EA6  E109               	bnz	u2620
  5177  001EA8  0E10               	movlw	16
  5178  001EAA  5C13               	subwf	ADC_Api_init@i^0,w,c
  5179  001EAC  A0D8               	btfss	status,0,c
  5180  001EAE  EF5B  F00F         	goto	u2621
  5181  001EB2  EF5D  F00F         	goto	u2620
  5182  001EB6                     u2621:
  5183  001EB6  EF4A  F00F         	goto	l2804
  5184  001EBA                     u2620:
  5185  001EBA                     
  5186                           ;ADC_Api.c: 39:     command8(0xfe);
  5187  001EBA  0EFE               	movlw	254
  5188  001EBC  ECB7  F011         	call	_command8
  5189                           
  5190                           ;ADC_Api.c: 40:     command8(0x80 | 0x4);
  5191  001EC0  0E84               	movlw	132
  5192  001EC2  ECB7  F011         	call	_command8
  5193                           
  5194                           ;ADC_Api.c: 41:     command24(0x00040000 | 0x00009000 | 0x00000020);
  5195  001EC6  0E20               	movlw	32
  5196  001EC8  6E03               	movwf	command24@_code^0,c
  5197  001ECA  0E90               	movlw	144
  5198  001ECC  6E04               	movwf	(command24@_code+1)^0,c
  5199  001ECE  0E04               	movlw	4
  5200  001ED0  6E05               	movwf	(command24@_code+2)^0,c
  5201  001ED2  EC08  F011         	call	_command24	;wreg free
  5202  001ED6                     l2812:
  5203  001ED6  ECAB  F011         	call	_isDataRdy	;wreg free
  5204  001EDA  0900               	iorlw	0
  5205  001EDC  B4D8               	btfsc	status,2,c
  5206  001EDE  EF73  F00F         	goto	u2631
  5207  001EE2  EF75  F00F         	goto	u2630
  5208  001EE6                     u2631:
  5209  001EE6  EF6B  F00F         	goto	l2812
  5210  001EEA                     u2630:
  5211  001EEA                     
  5212                           ;ADC_Api.c: 43:     command8(0x00);
  5213  001EEA  0E00               	movlw	0
  5214  001EEC  ECB7  F011         	call	_command8
  5215  001EF0  EC10  F010         	call	_recieve24	;wreg free
  5216  001EF4  0012               	return		;funcret
  5217  001EF6                     __end_of_ADC_Api_init:
  5218                           	opt callstack 0
  5219                           
  5220 ;; *************** function _recieve24 *****************
  5221 ;; Defined at:
  5222 ;;		line 93 in file "ADC_Api.c"
  5223 ;; Parameters:    Size  Location     Type
  5224 ;;		None
  5225 ;; Auto vars:     Size  Location     Type
  5226 ;;  i               2   10[COMRAM] int 
  5227 ;;  code            3    7[COMRAM] unsigned um
  5228 ;; Return value:  Size  Location     Type
  5229 ;;                  3    1[COMRAM] unsigned um
  5230 ;; Registers used:
  5231 ;;		wreg, status,2, status,0, cstack
  5232 ;; Tracked objects:
  5233 ;;		On entry : 0/0
  5234 ;;		On exit  : 0/0
  5235 ;;		Unchanged: 0/0
  5236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5237 ;;      Params:         3       0       0       0       0       0       0       0       0
  5238 ;;      Locals:         5       0       0       0       0       0       0       0       0
  5239 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5240 ;;      Totals:        11       0       0       0       0       0       0       0       0
  5241 ;;Total ram usage:       11 bytes
  5242 ;; Hardware stack levels used:    1
  5243 ;; Hardware stack levels required when called:    1
  5244 ;; This function calls:
  5245 ;;		_recieve8
  5246 ;; This function is called by:
  5247 ;;		_ADC_Api_init
  5248 ;; This function uses a non-reentrant model
  5249 ;;
  5250                           
  5251                           	psect	text30
  5252  002020                     __ptext30:
  5253                           	opt callstack 0
  5254  002020                     _recieve24:
  5255                           	opt callstack 27
  5256  002020                     
  5257                           ;ADC_Api.c: 95:     uint24_t code = 0;
  5258  002020  0E00               	movlw	0
  5259  002022  6E08               	movwf	recieve24@code^0,c
  5260  002024  0E00               	movlw	0
  5261  002026  6E09               	movwf	(recieve24@code+1)^0,c
  5262  002028  0E00               	movlw	0
  5263  00202A  6E0A               	movwf	(recieve24@code+2)^0,c
  5264                           
  5265                           ;ADC_Api.c: 96:     for(int i = 0; i < 3; i++)
  5266  00202C  0E00               	movlw	0
  5267  00202E  6E0C               	movwf	(recieve24@i+1)^0,c
  5268  002030  0E00               	movlw	0
  5269  002032  6E0B               	movwf	recieve24@i^0,c
  5270  002034                     l2764:
  5271                           
  5272                           ;ADC_Api.c: 102:         code |= recieve8();
  5273  002034  EC37  F011         	call	_recieve8	;wreg free
  5274  002038  6E05               	movwf	??_recieve24^0,c
  5275  00203A  6A06               	clrf	(??_recieve24+1)^0,c
  5276  00203C  6A07               	clrf	(??_recieve24+2)^0,c
  5277  00203E  5005               	movf	??_recieve24^0,w,c
  5278  002040  1208               	iorwf	recieve24@code^0,f,c
  5279  002042  5006               	movf	(??_recieve24+1)^0,w,c
  5280  002044  1209               	iorwf	(recieve24@code+1)^0,f,c
  5281  002046  5007               	movf	(??_recieve24+2)^0,w,c
  5282  002048  120A               	iorwf	(recieve24@code+2)^0,f,c
  5283  00204A                     
  5284                           ;ADC_Api.c: 103:     }
  5285  00204A  4A0B               	infsnz	recieve24@i^0,f,c
  5286  00204C  2A0C               	incf	(recieve24@i+1)^0,f,c
  5287  00204E  BE0C               	btfsc	(recieve24@i+1)^0,7,c
  5288  002050  EF33  F010         	goto	u2611
  5289  002054  500C               	movf	(recieve24@i+1)^0,w,c
  5290  002056  E109               	bnz	u2610
  5291  002058  0E03               	movlw	3
  5292  00205A  5C0B               	subwf	recieve24@i^0,w,c
  5293  00205C  A0D8               	btfss	status,0,c
  5294  00205E  EF33  F010         	goto	u2611
  5295  002062  EF35  F010         	goto	u2610
  5296  002066                     u2611:
  5297  002066  EF1A  F010         	goto	l2764
  5298  00206A                     u2610:
  5299  00206A                     
  5300                           ;ADC_Api.c: 104:     return code;
  5301  00206A  C008  F002         	movff	recieve24@code,?_recieve24
  5302  00206E  C009  F003         	movff	recieve24@code+1,?_recieve24+1
  5303  002072  C00A  F004         	movff	recieve24@code+2,?_recieve24+2
  5304  002076  0012               	return		;funcret
  5305  002078                     __end_of_recieve24:
  5306                           	opt callstack 0
  5307                           
  5308 ;; *************** function _recieve8 *****************
  5309 ;; Defined at:
  5310 ;;		line 81 in file "ADC_Api.c"
  5311 ;; Parameters:    Size  Location     Type
  5312 ;;		None
  5313 ;; Auto vars:     Size  Location     Type
  5314 ;;  TempVar         1    0        unsigned char 
  5315 ;; Return value:  Size  Location     Type
  5316 ;;                  1    wreg      unsigned char 
  5317 ;; Registers used:
  5318 ;;		wreg, status,2, status,0
  5319 ;; Tracked objects:
  5320 ;;		On entry : 0/0
  5321 ;;		On exit  : 0/0
  5322 ;;		Unchanged: 0/0
  5323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5324 ;;      Params:         0       0       0       0       0       0       0       0       0
  5325 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5326 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5327 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5328 ;;Total ram usage:        1 bytes
  5329 ;; Hardware stack levels used:    1
  5330 ;; This function calls:
  5331 ;;		Nothing
  5332 ;; This function is called by:
  5333 ;;		_recieve24
  5334 ;; This function uses a non-reentrant model
  5335 ;;
  5336                           
  5337                           	psect	text31
  5338  00226E                     __ptext31:
  5339                           	opt callstack 0
  5340  00226E                     _recieve8:
  5341                           	opt callstack 27
  5342  00226E  50C9               	movf	201,w,c	;volatile
  5343                           
  5344                           ;ADC_Api.c: 85:     PIR1bits.SSPIF = 0;
  5345  002270  969E               	bcf	158,3,c	;volatile
  5346  002272                     
  5347                           ;ADC_Api.c: 86:     SSPBUF = 0x00;
  5348  002272  0E00               	movlw	0
  5349  002274  6EC9               	movwf	201,c	;volatile
  5350  002276                     
  5351                           ;ADC_Api.c: 87:     LATB &= ~__en_pin;
  5352  002276  0100               	movlb	0	; () banked
  5353  002278  5175               	movf	___en_pin& (0+255),w,b	;volatile
  5354  00227A  0AFF               	xorlw	255
  5355  00227C  168A               	andwf	138,f,c	;volatile
  5356  00227E                     l280:
  5357  00227E  A69E               	btfss	158,3,c	;volatile
  5358  002280  EF44  F011         	goto	u1881
  5359  002284  EF46  F011         	goto	u1880
  5360  002288                     u1881:
  5361  002288  EF3F  F011         	goto	l280
  5362  00228C                     u1880:
  5363  00228C                     
  5364                           ;ADC_Api.c: 89:     LATB |= __en_pin;
  5365  00228C  0100               	movlb	0	; () banked
  5366  00228E  5175               	movf	___en_pin& (0+255),w,b	;volatile
  5367  002290  128A               	iorwf	138,f,c	;volatile
  5368  002292                     
  5369                           ; BSR set to: 0
  5370                           ;ADC_Api.c: 90:     return SSPBUF;
  5371  002292  50C9               	movf	201,w,c	;volatile
  5372  002294                     
  5373                           ; BSR set to: 0
  5374  002294  0012               	return		;funcret
  5375  002296                     __end_of_recieve8:
  5376                           	opt callstack 0
  5377                           
  5378 ;; *************** function _isDataRdy *****************
  5379 ;; Defined at:
  5380 ;;		line 107 in file "ADC_Api.c"
  5381 ;; Parameters:    Size  Location     Type
  5382 ;;		None
  5383 ;; Auto vars:     Size  Location     Type
  5384 ;;		None
  5385 ;; Return value:  Size  Location     Type
  5386 ;;                  1    wreg      unsigned char 
  5387 ;; Registers used:
  5388 ;;		wreg
  5389 ;; Tracked objects:
  5390 ;;		On entry : 0/0
  5391 ;;		On exit  : 0/0
  5392 ;;		Unchanged: 0/0
  5393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5394 ;;      Params:         0       0       0       0       0       0       0       0       0
  5395 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5396 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5397 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5398 ;;Total ram usage:        0 bytes
  5399 ;; Hardware stack levels used:    1
  5400 ;; This function calls:
  5401 ;;		Nothing
  5402 ;; This function is called by:
  5403 ;;		_ADC_Api_init
  5404 ;; This function uses a non-reentrant model
  5405 ;;
  5406                           
  5407                           	psect	text32
  5408  002356                     __ptext32:
  5409                           	opt callstack 0
  5410  002356                     _isDataRdy:
  5411                           	opt callstack 28
  5412  002356                     
  5413                           ;ADC_Api.c: 109:     if(SSPSTATbits.BF)
  5414  002356  A0C7               	btfss	199,0,c	;volatile
  5415  002358  EFB0  F011         	goto	u2601
  5416  00235C  EFB2  F011         	goto	u2600
  5417  002360                     u2601:
  5418  002360  EFB5  F011         	goto	l2752
  5419  002364                     u2600:
  5420  002364                     
  5421                           ;ADC_Api.c: 110:     {;ADC_Api.c: 111:         return 1;
  5422  002364  0E01               	movlw	1
  5423  002366  EFB6  F011         	goto	l293
  5424  00236A                     l2752:
  5425                           
  5426                           ;ADC_Api.c: 114:     {;ADC_Api.c: 115:         return 0;
  5427  00236A  0E00               	movlw	0
  5428  00236C                     l293:
  5429  00236C  0012               	return		;funcret
  5430  00236E                     __end_of_isDataRdy:
  5431                           	opt callstack 0
  5432                           
  5433 ;; *************** function _command8 *****************
  5434 ;; Defined at:
  5435 ;;		line 65 in file "ADC_Api.c"
  5436 ;; Parameters:    Size  Location     Type
  5437 ;;  _code           1    wreg     unsigned char 
  5438 ;; Auto vars:     Size  Location     Type
  5439 ;;  _code           1    2[COMRAM] unsigned char 
  5440 ;; Return value:  Size  Location     Type
  5441 ;;                  1    wreg      void 
  5442 ;; Registers used:
  5443 ;;		wreg, status,2, status,0, cstack
  5444 ;; Tracked objects:
  5445 ;;		On entry : 0/0
  5446 ;;		On exit  : 0/0
  5447 ;;		Unchanged: 0/0
  5448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5449 ;;      Params:         0       0       0       0       0       0       0       0       0
  5450 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5451 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5452 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5453 ;;Total ram usage:        1 bytes
  5454 ;; Hardware stack levels used:    1
  5455 ;; Hardware stack levels required when called:    1
  5456 ;; This function calls:
  5457 ;;		ADC_Api@command
  5458 ;; This function is called by:
  5459 ;;		_ADC_Api_init
  5460 ;; This function uses a non-reentrant model
  5461 ;;
  5462                           
  5463                           	psect	text33
  5464  00236E                     __ptext33:
  5465                           	opt callstack 0
  5466  00236E                     _command8:
  5467                           	opt callstack 27
  5468                           
  5469                           ;incstack = 0
  5470                           ;command8@_code stored from wreg
  5471  00236E  6E03               	movwf	command8@_code^0,c
  5472  002370                     
  5473                           ;ADC_Api.c: 65: static void command8(uint8_t _code);ADC_Api.c: 66: {;ADC_Api.c: 67:     
      +                          LATB &= ~__en_pin;
  5474  002370  0100               	movlb	0	; () banked
  5475  002372  5175               	movf	___en_pin& (0+255),w,b	;volatile
  5476  002374  0AFF               	xorlw	255
  5477  002376  168A               	andwf	138,f,c	;volatile
  5478  002378                     
  5479                           ; BSR set to: 0
  5480                           ;ADC_Api.c: 68:     command(_code);
  5481  002378  5003               	movf	command8@_code^0,w,c
  5482  00237A  EC20  F011         	call	ADC_Api@command
  5483  00237E                     
  5484                           ;ADC_Api.c: 69:     LATB |= __en_pin;
  5485  00237E  0100               	movlb	0	; () banked
  5486  002380  5175               	movf	___en_pin& (0+255),w,b	;volatile
  5487  002382  128A               	iorwf	138,f,c	;volatile
  5488  002384                     
  5489                           ; BSR set to: 0
  5490  002384  0012               	return		;funcret
  5491  002386                     __end_of_command8:
  5492                           	opt callstack 0
  5493                           
  5494 ;; *************** function _command24 *****************
  5495 ;; Defined at:
  5496 ;;		line 72 in file "ADC_Api.c"
  5497 ;; Parameters:    Size  Location     Type
  5498 ;;  _code           3    2[COMRAM] unsigned um
  5499 ;; Auto vars:     Size  Location     Type
  5500 ;;  i               2    5[COMRAM] int 
  5501 ;; Return value:  Size  Location     Type
  5502 ;;                  1    wreg      void 
  5503 ;; Registers used:
  5504 ;;		wreg, status,2, status,0, cstack
  5505 ;; Tracked objects:
  5506 ;;		On entry : 0/0
  5507 ;;		On exit  : 0/0
  5508 ;;		Unchanged: 0/0
  5509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5510 ;;      Params:         3       0       0       0       0       0       0       0       0
  5511 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5512 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5513 ;;      Totals:         5       0       0       0       0       0       0       0       0
  5514 ;;Total ram usage:        5 bytes
  5515 ;; Hardware stack levels used:    1
  5516 ;; Hardware stack levels required when called:    1
  5517 ;; This function calls:
  5518 ;;		ADC_Api@command
  5519 ;; This function is called by:
  5520 ;;		_ADC_Api_init
  5521 ;; This function uses a non-reentrant model
  5522 ;;
  5523                           
  5524                           	psect	text34
  5525  002210                     __ptext34:
  5526                           	opt callstack 0
  5527  002210                     _command24:
  5528                           	opt callstack 27
  5529  002210                     
  5530                           ;ADC_Api.c: 72: static void command24(uint24_t _code);ADC_Api.c: 73: {;ADC_Api.c: 74:   
      +                            for(int i = 0; i < 3; i++)
  5531  002210  0E00               	movlw	0
  5532  002212  6E07               	movwf	(command24@i+1)^0,c
  5533  002214  0E00               	movlw	0
  5534  002216  6E06               	movwf	command24@i^0,c
  5535  002218                     l2738:
  5536                           
  5537                           ;ADC_Api.c: 75:     {;ADC_Api.c: 76:         command(_code & 0xff);
  5538  002218  5003               	movf	command24@_code^0,w,c
  5539  00221A  EC20  F011         	call	ADC_Api@command
  5540  00221E                     
  5541                           ;ADC_Api.c: 78:     }
  5542  00221E  4A06               	infsnz	command24@i^0,f,c
  5543  002220  2A07               	incf	(command24@i+1)^0,f,c
  5544  002222  BE07               	btfsc	(command24@i+1)^0,7,c
  5545  002224  EF1D  F011         	goto	u2591
  5546  002228  5007               	movf	(command24@i+1)^0,w,c
  5547  00222A  E109               	bnz	u2590
  5548  00222C  0E03               	movlw	3
  5549  00222E  5C06               	subwf	command24@i^0,w,c
  5550  002230  A0D8               	btfss	status,0,c
  5551  002232  EF1D  F011         	goto	u2591
  5552  002236  EF1F  F011         	goto	u2590
  5553  00223A                     u2591:
  5554  00223A  EF0C  F011         	goto	l2738
  5555  00223E                     u2590:
  5556  00223E  0012               	return		;funcret
  5557  002240                     __end_of_command24:
  5558                           	opt callstack 0
  5559                           
  5560 ;; *************** function ADC_Api@command *****************
  5561 ;; Defined at:
  5562 ;;		line 49 in file "ADC_Api.c"
  5563 ;; Parameters:    Size  Location     Type
  5564 ;;  _code           1    wreg     unsigned char 
  5565 ;; Auto vars:     Size  Location     Type
  5566 ;;  _code           1    1[COMRAM] unsigned char 
  5567 ;;  TempVar         1    0        unsigned char 
  5568 ;; Return value:  Size  Location     Type
  5569 ;;                  1    wreg      void 
  5570 ;; Registers used:
  5571 ;;		wreg
  5572 ;; Tracked objects:
  5573 ;;		On entry : 0/0
  5574 ;;		On exit  : 0/0
  5575 ;;		Unchanged: 0/0
  5576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5577 ;;      Params:         0       0       0       0       0       0       0       0       0
  5578 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5579 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5580 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5581 ;;Total ram usage:        2 bytes
  5582 ;; Hardware stack levels used:    1
  5583 ;; This function calls:
  5584 ;;		Nothing
  5585 ;; This function is called by:
  5586 ;;		_command8
  5587 ;;		_command24
  5588 ;; This function uses a non-reentrant model
  5589 ;;
  5590                           
  5591                           	psect	text35
  5592  002240                     __ptext35:
  5593                           	opt callstack 0
  5594  002240                     ADC_Api@command:
  5595                           	opt callstack 27
  5596                           
  5597                           ;incstack = 0
  5598                           ;ADC_Api@command@_code stored from wreg
  5599  002240  6E02               	movwf	ADC_Api@command@_code^0,c
  5600  002242  50C9               	movf	201,w,c	;volatile
  5601                           
  5602                           ;ADC_Api.c: 54:     PIR1bits.SSPIF = 0;
  5603  002244  969E               	bcf	158,3,c	;volatile
  5604                           
  5605                           ;ADC_Api.c: 55:     SSPCON1bits.WCOL = 0;
  5606  002246  9EC6               	bcf	198,7,c	;volatile
  5607  002248                     
  5608                           ;ADC_Api.c: 56:     SSPBUF = _code;
  5609  002248  C002  FFC9         	movff	ADC_Api@command@_code,4041	;volatile
  5610  00224C                     
  5611                           ;ADC_Api.c: 57:     if ( SSPCON1 & 0x80 )
  5612  00224C  AEC6               	btfss	198,7,c	;volatile
  5613  00224E  EF2B  F011         	goto	u1861
  5614  002252  EF2D  F011         	goto	u1860
  5615  002256                     u1861:
  5616  002256  EF2F  F011         	goto	l267
  5617  00225A                     u1860:
  5618  00225A  EF36  F011         	goto	l265
  5619  00225E                     l267:
  5620  00225E  A69E               	btfss	158,3,c	;volatile
  5621  002260  EF34  F011         	goto	u1871
  5622  002264  EF36  F011         	goto	u1870
  5623  002268                     u1871:
  5624  002268  EF2F  F011         	goto	l267
  5625  00226C                     u1870:
  5626  00226C                     l265:
  5627  00226C  0012               	return		;funcret
  5628  00226E                     __end_ofADC_Api@command:
  5629                           	opt callstack 0
  5630                           
  5631                           	psect	text36
  5632  000000                     __ptext36:
  5633                           	opt callstack 0
  5634  000000                     
  5635                           	psect	rparam
  5636  0000                     tosu	equ	0xFFF
  5637                           tosh	equ	0xFFE
  5638                           tosl	equ	0xFFD
  5639                           stkptr	equ	0xFFC
  5640                           pclatu	equ	0xFFB
  5641                           pclath	equ	0xFFA
  5642                           pcl	equ	0xFF9
  5643                           tblptru	equ	0xFF8
  5644                           tblptrh	equ	0xFF7
  5645                           tblptrl	equ	0xFF6
  5646                           tablat	equ	0xFF5
  5647                           prodh	equ	0xFF4
  5648                           prodl	equ	0xFF3
  5649                           indf0	equ	0xFEF
  5650                           postinc0	equ	0xFEE
  5651                           postdec0	equ	0xFED
  5652                           preinc0	equ	0xFEC
  5653                           plusw0	equ	0xFEB
  5654                           fsr0h	equ	0xFEA
  5655                           fsr0l	equ	0xFE9
  5656                           wreg	equ	0xFE8
  5657                           indf1	equ	0xFE7
  5658                           postinc1	equ	0xFE6
  5659                           postdec1	equ	0xFE5
  5660                           preinc1	equ	0xFE4
  5661                           plusw1	equ	0xFE3
  5662                           fsr1h	equ	0xFE2
  5663                           fsr1l	equ	0xFE1
  5664                           bsr	equ	0xFE0
  5665                           indf2	equ	0xFDF
  5666                           postinc2	equ	0xFDE
  5667                           postdec2	equ	0xFDD
  5668                           preinc2	equ	0xFDC
  5669                           plusw2	equ	0xFDB
  5670                           fsr2h	equ	0xFDA
  5671                           fsr2l	equ	0xFD9
  5672                           status	equ	0xFD8


Data Sizes:
    Strings     37
    Constant    0
    Data        16
    BSS         160
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160      4      51
    BANK1           256      0     130
    BANK2           256      0       0
    BANK3           244      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    S1018$1$0	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    func$0	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    func$0	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    call@p	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    __funcs_on_exit@arg	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    head.a	PTR void [32] size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    head.f	PTR FTN(PTR void ,)void [32] size(2) Largest target is 1
		 -> call(), 

    head.next	PTR struct fl size(2) Largest target is 0

    head	PTR struct fl size(2) Largest target is 163
		 -> builtin(BANK1[130]), NULL(NULL[0]), 

    __funcs_on_exit@func	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> call(), 

    S1018fl$a	PTR void [32] size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    builtin.a	PTR void [32] size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    S1018fl$f	PTR FTN(PTR void ,)void [32] size(2) Largest target is 1
		 -> call(), 

    builtin.f	PTR FTN(PTR void ,)void [32] size(2) Largest target is 1
		 -> call(), 

    S1018fl$next	PTR struct fl size(2) Largest target is 0

    builtin.next	PTR struct fl size(2) Largest target is 0

    send@buf	PTR void  size(2) Largest target is 17
		 -> write@value(COMRAM[1]), command@value(COMRAM[1]), OledApi_printNum@s(COMRAM[17]), ?_OledApi_printf(COMRAM[1]), 
		 -> STR_2(CODE[5]), 

    send@p	PTR unsigned char  size(2) Largest target is 17
		 -> write@value(COMRAM[1]), command@value(COMRAM[1]), OledApi_printNum@s(COMRAM[17]), ?_OledApi_printf(COMRAM[1]), 
		 -> STR_2(CODE[5]), 

    writeStr@value	PTR const unsigned char  size(2) Largest target is 17
		 -> OledApi_printNum@s(COMRAM[17]), ?_OledApi_printf(COMRAM[1]), STR_2(CODE[5]), 

    OledApi_printStr@s	PTR const unsigned char  size(2) Largest target is 5
		 -> ?_OledApi_printf(COMRAM[1]), STR_2(CODE[5]), 

    OledApi_printf@s	PTR unsigned char  size(2) Largest target is 20
		 -> STR_3(CODE[12]), STR_1(CODE[20]), 

    OledApi_printf@list	PTR void [1] size(2) Largest target is 1
		 -> ?_OledApi_printf(COMRAM[1]), 

    OledApi_createChar@charmap	PTR unsigned char  size(2) Largest target is 8
		 -> ac(BANK0[8]), dc(BANK0[8]), 


Critical Paths under _main in COMRAM

    _main->_OledApi_printf
    _setup->_OledApi_printf
    _OledApi_printf->_OledApi_printNum
    _OledApi_printStr->_OledApi_setCursor
    _OledApi_setCursor->_command
    _OledApi_printSpec->_exit
    _OledApi_printNum->___flge
    _writeStr->_send
    _exit->___funcs_on_exit
    ___funcs_on_exit->_call
    ___flsub->___fladd
    ___flge->___flsub
    _OledApi_init->_begin
    _begin->_OledApi_clear
    _OledApi_clear->_command
    _OledApi_home->_command
    _OledApi_createChar->_command
    _OledApi_createChar->_write
    _write->_send
    _command->_send
    _send->_sendBit
    _ADC_Api_init->_recieve24
    _recieve24->_recieve8
    _command8->ADC_Api@command
    _command24->ADC_Api@command

Critical Paths under _main in BANK0

    _main->_setup

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   41225
                                              2 BANK0      2     2      0
                      _OledApi_clear
                     _OledApi_printf
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                2     2      0   22418
                                              0 BANK0      2     2      0
                       _ADC_Api_init
                 _OledApi_createChar
                       _OledApi_init
                     _OledApi_printf
 ---------------------------------------------------------------------------------
 (2) _OledApi_printf                                      22    11     11   17441
                                             73 COMRAM    22    11     11
                   _OledApi_printNum
                  _OledApi_printSpec
                   _OledApi_printStr
                  _OledApi_setCursor
                           ___xxtofl
                               _exit
                              _write
 ---------------------------------------------------------------------------------
 (3) _OledApi_printStr                                     5     3      2    2469
                                             15 COMRAM     5     3      2
                  _OledApi_setCursor
                           _writeStr
 ---------------------------------------------------------------------------------
 (3) _OledApi_setCursor                                    4     3      1     903
                                             11 COMRAM     4     3      1
                            _command
 ---------------------------------------------------------------------------------
 (3) _OledApi_printSpec                                    1     1      0    1380
                                             12 COMRAM     1     1      0
                               _exit
                              _write
 ---------------------------------------------------------------------------------
 (3) _OledApi_printNum                                    37    32      5   10114
                                             36 COMRAM    37    32      5
                            ___aldiv
                            ___almod
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                               _exit
                           _writeStr
 ---------------------------------------------------------------------------------
 (4) _writeStr                                             3     0      3    1312
                                             10 COMRAM     3     0      3
                               _send
 ---------------------------------------------------------------------------------
 (3) _exit                                                 2     0      2     653
                                             10 COMRAM     2     0      2
                              __Exit
                    ___funcs_on_exit
 ---------------------------------------------------------------------------------
 (4) ___funcs_on_exit                                      8     8      0      99
                                              2 COMRAM     8     8      0
                               _call *
 ---------------------------------------------------------------------------------
 (5) _call                                                 2     0      2      53
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) __Exit                                                2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     523
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    2737
                                             16 COMRAM     8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             16     8      8    2262
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    1744
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8     486
                                             24 COMRAM    12     4      8
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___almod                                             10     2      8     600
                                              0 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     604
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (2) _OledApi_init                                         2     0      2    2950
                                             14 COMRAM     2     0      2
                              _begin
 ---------------------------------------------------------------------------------
 (3) _begin                                                3     2      1    2808
                                             12 COMRAM     2     1      1
                      _OledApi_clear
                       _OledApi_home
                            _command
 ---------------------------------------------------------------------------------
 (4) _OledApi_clear                                        1     1      0    1366
                                             11 COMRAM     1     1      0
                       _OledApi_home
                            _command
 ---------------------------------------------------------------------------------
 (4) _OledApi_home                                         0     0      0     683
                            _command
 ---------------------------------------------------------------------------------
 (2) _OledApi_createChar                                   5     3      2    1631
                                             11 COMRAM     5     3      2
                            _command
                              _write
 ---------------------------------------------------------------------------------
 (3) _write                                                1     1      0     683
                                             10 COMRAM     1     1      0
                               _send
 ---------------------------------------------------------------------------------
 (4) _command                                              1     1      0     683
                                             10 COMRAM     1     1      0
                               _send
 ---------------------------------------------------------------------------------
 (4) _send                                                 9     5      4     660
                                              1 COMRAM     9     5      4
                            _sendBit
 ---------------------------------------------------------------------------------
 (5) _sendBit                                              1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Api_init                                         8     8      0     396
                                             12 COMRAM     8     8      0
                          _command24
                           _command8
                          _isDataRdy
                          _recieve24
 ---------------------------------------------------------------------------------
 (3) _recieve24                                           11     8      3      93
                                              1 COMRAM    11     8      3
                           _recieve8
 ---------------------------------------------------------------------------------
 (4) _recieve8                                             1     1      0       1
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _isDataRdy                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _command8                                             1     1      0      45
                                              2 COMRAM     1     1      0
                     ADC_Api@command
 ---------------------------------------------------------------------------------
 (3) _command24                                            5     2      3     167
                                              2 COMRAM     5     2      3
                     ADC_Api@command
 ---------------------------------------------------------------------------------
 (4) ADC_Api@command                                       2     2      0      23
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OledApi_clear
     _OledApi_home
       _command
         _send
           _sendBit
     _command
       _send
         _sendBit
   _OledApi_printf
     _OledApi_printNum
       ___aldiv
       ___almod
       ___flge
         ___flsub (ARG)
           ___fladd
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
       ___flsub
         ___fladd
         ___xxtofl (ARG)
       ___fltol
       ___xxtofl
       _exit
         __Exit
         ___funcs_on_exit
           _call *
       _writeStr
         _send
           _sendBit
     _OledApi_printSpec
       _exit
         __Exit
         ___funcs_on_exit
           _call *
       _write
         _send
           _sendBit
     _OledApi_printStr
       _OledApi_setCursor
         _command
           _send
             _sendBit
       _writeStr
         _send
           _sendBit
     _OledApi_setCursor
       _command
         _send
           _sendBit
     ___xxtofl
     _exit
       __Exit
       ___funcs_on_exit
         _call *
     _write
       _send
         _sendBit
   _setup
     _ADC_Api_init
       _command24
         ADC_Api@command
       _command8
         ADC_Api@command
       _isDataRdy
       _recieve24
         _recieve8
     _OledApi_createChar
       _command
         _send
           _sendBit
       _write
         _send
           _sendBit
     _OledApi_init
       _begin
         _OledApi_clear
           _OledApi_home
             _command
               _send
                 _sendBit
           _command
             _send
               _sendBit
         _OledApi_home
           _command
             _send
               _sendBit
         _command
           _send
             _sendBit
     _OledApi_printf
       _OledApi_printNum
         ___aldiv
         ___almod
         ___flge
           ___flsub (ARG)
             ___fladd
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
         ___flsub
           ___fladd
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
         _exit
           __Exit
           ___funcs_on_exit
             _call *
         _writeStr
           _send
             _sendBit
       _OledApi_printSpec
         _exit
           __Exit
           ___funcs_on_exit
             _call *
         _write
           _send
             _sendBit
       _OledApi_printStr
         _OledApi_setCursor
           _command
             _send
               _sendBit
         _writeStr
           _send
             _sendBit
       _OledApi_setCursor
         _command
           _send
             _sendBit
       ___xxtofl
       _exit
         __Exit
         ___funcs_on_exit
           _call *
       _write
         _send
           _sendBit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM_1           400      0       0      21        0.0%
BIGRAM             3F3      0       0      22        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      82       7       50.8%
BITBANK3            F4      0       0      12        0.0%
BANK3               F4      0       0      10        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      4      33       5       31.9%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     114      11        0.0%
DATA                 0      0     114       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Mar 22 01:47:31 2020

                _SSPSTATbits 000FC7                           l42 215A                           l35 201E  
                         l91 210E                           l94 2300                           l88 22E0  
                         l97 23C4                           _ac 007E                           _dc 0086  
                __CFG_BOR$ON 000000                  __CFG_BORV$3 000000                writeStr@value 000B  
               __CFG_CP0$OFF 000000                 __CFG_CP1$OFF 000000                 __CFG_CP2$OFF 000000  
               __CFG_CP3$OFF 000000                  __CFG_LVP$ON 000000                          l104 220E  
                        l200 1F90                          l203 2354                          l213 1E52  
                        l214 1DB4                          l206 233A                          l225 231E  
                        l217 1DE8                          l145 20C4                          l209 239A  
                        l226 2320                          l261 1EF4                          l149 22BA  
                        l272 2384                          l280 227E                          l192 14E0  
                        l265 226C                          l169 16EC                          l267 225E  
                        l283 2294                          l277 223E                          l293 236C  
                        l287 206A                          l376 19AC                          l289 2076  
                        l562 1B70                          l389 1CA2                          l567 1BB6  
                        l911 0DAC                          l920 101A                          l921 1008  
                        l825 0A16                          l842 0B30                          l834 0CE6  
                        l826 0A04                          l594 1AB2                          l915 1110  
                        l851 0C00                          l827 09CA                          l852 0BEE  
                        l918 0FA2                          l928 10D2                          l952 1744  
                        l867 2154                          l955 18A0                          l966 1838  
                        l959 17DC                          l975 23AC                          l978 23C6  
                        l995 1D86                 __CFG_CPB$OFF 000000                 __CFG_CPD$OFF 000000  
                        tosl 000FFD                          wreg 000FE8                 ___flmul@aexp 0012  
               ___flmul@bexp 0013                 ___flmul@sign 000D                 ___flmul@temp 0018  
               ___flmul@prod 0014                 ___fltol@exp1 000A                 __CFG_WDT$OFF 000000  
                       l1003 23CC                         l2010 1DD4                         l2002 1DA0  
                       l2020 1E1C                         l2012 1DDA                         l2004 1DA4  
                       l2100 0950                         l2022 1E20                         l2014 1DE2  
                       l2006 1DAC                         l2030 233E                         l2110 0964  
                       l2102 0954                         l2024 1E30                         l2008 1DC4  
                       l2016 1DEE                         l2032 23BE                         l2200 0BE6  
                       l2120 09C2                         l2104 0958                         l2112 0968  
                       l2040 0844                         l2026 1E34                         l2018 1DF6  
                       l2210 0C64                         l2130 09F8                         l2122 09D8  
                       l2114 096C                         l2106 095C                         l2042 0854  
                       l2050 087E                         l2034 0828                         l2028 1E4C  
                       l2300 18C4                         l2220 0CAA                         l2204 0C10  
                       l2212 0C66                         l2140 0A48                         l2132 0A02  
                       l2124 09E4                         l2116 0996                         l2108 0960  
                       l2060 08AE                         l2052 088E                         l2044 0864  
                       l2036 0834                         l2310 18FA                         l2302 18C8  
                       l2230 0CD4                         l2222 0CB8                         l2214 0C76  
                       l2206 0C1C                         l2150 0A84                         l2142 0A58  
                       l2134 0A24                         l2126 09E8                         l2118 09B2  
                       l2070 08EE                         l2062 08BC                         l2054 0894  
                       l2046 0874                         l2038 0842                         l2320 193C  
                       l2312 1910                         l2304 18D6                         l2400 0D76  
                       l2232 0CD6                         l2224 0CBE                         l2216 0C86  
                       l2208 0C2A                         l2160 0ACA                         l2152 0A92  
                       l2144 0A66                         l2136 0A34                         l2128 09F6  
                       l2080 0928                         l2072 08F0                         l2064 08BE  
                       l2056 08A6                         l2048 0876                         l2240 1D0C  
                       l2250 22E2                         l2322 195A                         l2314 1918  
                       l2330 197C                         l2306 18E6                         l2410 0DCC  
                       l2402 0D86                         l2226 0CC0                         l2218 0CA6  
                       l2170 0B46                         l2162 0AFE                         l2154 0A94  
                       l2146 0A74                         l2090 093C                         l2082 092C  
                       l2066 08CE                         l2074 08F8                         l2058 08A8  
                       l2242 1D2E                         l2252 22E8                         l2332 198C  
                       l2324 196A                         l2316 1924                         l2308 18EA  
                       l2340 1BBC                         l2500 1100                         l2420 0E0C  
                       l2404 0D96                         l2228 0CC6                         l2180 0B82  
                       l2172 0B56                         l2164 0B00                         l2156 0A9E  
                       l2148 0A80                         l2092 0940                         l2084 0930  
                       l2076 0908                         l2068 08DE                         l2244 1D5A  
                       l2236 1CA4                         l2260 21FA                         l2254 22FC  
                       l2334 199C                         l2326 196C                         l2318 1932  
                       l2350 1BFC                         l2342 1BCA                         l2510 1AB4  
                       l2430 0E56                         l2422 0E18                         l2414 0DE0  
                       l2406 0D9C                         l2190 0BAE                         l2182 0B84  
                       l2166 0B10                         l2158 0AA4                         l2094 0944  
                       l2086 0934                         l2078 091A                         l2246 1D6A  
                       l2238 1CA8                         l2270 2386                         l2262 2202  
                       l2272 2242                         l2264 2324                         l2328 1976  
                       l2360 1C52                         l2352 1C12                         l2344 1BDA  
                       l2520 1B3E                         l2512 1AE2                         l2440 0EA8  
                       l2432 0E62                         l2424 0E30                         l2416 0DEC  
                       l2408 0DBC                         l2184 0B92                         l2176 0B6A  
                       l2192 0BB0                         l2168 0B20                         l2096 0948  
                       l2088 0938                         l2504 2110                         l2600 180E  
                       l2248 1D72                         l2256 21DE                         l2274 2248  
                       l2290 2292                         l2282 226E                         l2370 1C92  
                       l2362 1C62                         l2354 1C1A                         l2346 1BDE  
                       l2338 1BB8                         l2522 1B50                         l2514 1AF2  
                       l2450 0F26                         l2442 0EB8                         l2434 0E72  
                       l2426 0E3C                         l2418 0DF6                         l2186 0B9A  
                       l2178 0B74                         l2194 0BBE                         l2098 094C  
                       l2506 2120                         l2610 184C                         l2602 181A  
                       l2266 239C                         l2258 21EE                         l2276 224C  
                       l2284 2272                         l2364 1C6C                         l2356 1C26  
                       l2348 1BEC                         l2524 1B5E                         l2516 1B20  
                       l2460 0FA0                         l2452 0F5C                         l2444 0ED4  
                       l2436 0E7E                         l2428 0E48                         l2380 0D04  
                       l2196 0BC2                         l2188 0B9E                         l2540 1A02  
                       l2532 19AE                         l2612 1870                         l2604 1828  
                       l2268 23A0                         l2700 1436                         l2286 2276  
                       l2630 20EE                         l2622 20C6                         l2294 18A2  
                       l2358 1C34                         l2366 1C72                         l2526 1BAE  
                       l2518 1B30                         l2470 1000                         l2462 0FB2  
                       l2454 0F6A                         l2446 0EE0                         l2438 0E8E  
                       l2390 0D4A                         l2382 0D14                         l2374 0CE8  
                       l2198 0BD0                         l2542 1A04                         l2534 19C4  
                       l2614 1880                         l2606 1846                         l2710 14B4  
                       l2702 146A                         l2288 228C                         l2632 20F4  
                       l2624 20DA                         l2296 18A6                         l2368 1C82  
                       l2528 1BB4                         l2480 106E                         l2464 0FC0  
                       l2456 0F88                         l2448 0EFC                         l2392 0D50  
                       l2384 0D24                         l2376 0CF4                         l2544 1A14  
                       l2616 188E                         l2608 1848                         l2712 14CA  
                       l2704 1488                         l2640 2298                         l2720 1F3C  
                       l2730 237E                         l2810 1EBA                         l2634 20FC  
                       l2626 20E4                         l2298 18B4                         l2490 10D6  
                       l2474 102A                         l2482 1072                         l2466 0FC4  
                       l2458 0F92                         l2394 0D56                         l2386 0D34  
                       l2378 0D02                         l2570 1A92                         l2554 1A3E  
                       l2546 1A18                         l2538 19D8                         l2618 1890  
                       l2706 1496                         l2650 1126                         l2642 22A8  
                       l2722 1F4C                         l2714 1EF6                         l2740 221E  
                       l2732 2210                         l2812 1ED6                         l2804 1E94  
                       l2636 2100                         l2628 20EA                         l2492 10E6  
                       l2484 108C                         l2476 1036                         l2468 0FD2  
                       l2396 0D64                         l2388 0D3A                         l2572 1AA2  
                       l2564 1A66                         l2556 1A48                         l2548 1A26  
                       l2580 170E                         l2708 14A8                         l2660 11D8  
                       l2652 114A                         l2644 22B4                         l2724 1F80  
                       l2716 1EFE                         l2820 14E2                         l2900 1F92  
                       l2742 2222                         l2726 2370                         l2814 1EEA  
                       l2806 1E9A                         l2638 2106                         l2494 10F4  
                       l2486 10A0                         l2478 1044                         l2398 0D66  
                       l2566 1A72                         l2558 1A52                         l2590 1786  
                       l2582 1754                         l2670 1272                         l2662 1200  
                       l2654 1194                         l2646 1112                         l2718 1F00  
                       l2830 152C                         l2822 14E6                         l2910 1FE6  
                       l2902 1F9A                         l2728 2378                         l2752 236A  
                       l2744 2356                         l2808 1E9E                         l2496 10F6  
                       l2488 10BA                         l2568 1A82                         l2592 1792  
                       l2584 176A                         l2576 16F0                         l2680 1312  
                       l2672 1278                         l2664 1224                         l2656 11A0  
                       l2648 111E                         l2840 1588                         l2832 1530  
                       l2824 14F2                         l2912 2002                         l2904 1FA4  
                       l2920 2174                         l2738 2218                         l2746 2364  
                       l2770 22BC                         l2498 10FC                         l2594 17C4  
                       l2578 1700                         l2690 13BA                         l2682 134E  
                       l2674 12E4                         l2666 1234                         l2658 11D4  
                       l2850 15C8                         l2842 158E                         l2834 1538  
                       l2826 150E                         l2914 2010                         l2906 1FB0  
                       l2922 218E                         l2764 2034                         l2756 2020  
                       l2780 22CC                         l2772 22C0                         l2596 17C6  
                       l2588 177E                         l2692 13C6                         l2676 12F4  
                       l2684 1382                         l2668 1266                         l2852 15DC  
                       l2844 15AE                         l2836 1568                         l2828 1520  
                       l2908 1FB6                         l2916 2156                         l2766 204A  
                       l2790 1E5E                         l1990 2304                         l2782 22D2  
                       l2774 22C6                         l2598 17D2                         l2694 13DC  
                       l2686 1398                         l2678 1306                         l2862 1602  
                       l2838 1580                         l2870 1658                         l2918 2170  
                       l2768 204E                         l2792 1E60                         l1992 2306  
                       l2784 22D6                         l2776 22C8                         l2696 13EE  
                       l2688 13A8                         l2864 161C                         l2856 15E8  
                       l2848 15BA                         l2872 16A8                         l2794 1E68  
                       l2786 1E56                         l1994 2316                         l2778 22CA  
                       l2698 13FA                         l2866 1636                         l2858 15F6  
                       l2874 16BC                         l2796 1E6C                         l2788 1E5A  
                       l1996 231C                         l2884 207A                         l2876 16CC  
                       l2868 163A                         l2798 1E70                         l1998 1D8A  
                       l2894 2092                         l2886 207E                         l2878 16D0  
                       l2896 20A4                         l2888 208A                         l2898 20A8  
                       l2988 167A                         STR_1 0801                         STR_2 0821  
                       STR_3 0815                         u2000 1C82                         u2001 1C7E  
                       u2010 0D02                         u2011 0CFE                         u2100 0FA0  
                       u2020 0D14                         u2101 0F9C                         u2021 0D10  
                       u2110 0FC0                         u2030 0D24                         u2111 0FBC  
                       u2031 0D20                         u1400 1E16                         u2200 1AE2  
                       u2120 0FD2                         u2040 0D64                         u2201 1ADE  
                       u2121 0FCE                         u2041 0D60                         u1410 1E30  
                       u2210 1B20                         u2130 1000                         u2050 0D76  
                       u1411 1E2C                         u2211 1B1C                         u2131 0FFC  
                       u2051 0D72                         u1420 1E4C                         u2220 1B3E  
                       u2140 1016                         u2060 0D86                         u1500 091A  
                       u2300 1A82                         u1421 1E48                         u2221 1B3A  
                       u2141 1012                         u2061 0D82                         u1501 0916  
                       u2301 1A7E                         u2230 1B5E                         u2150 102A  
                       u2070 0DBC                         u1510 0928                         u1430 0842  
                       u2310 1A92                         _LATB 000F8A                         u1407 1E0C  
                       u2231 1B5A                         u2151 1026                         u2071 0DB8  
                       u1511 0924                         u1431 083E                         u2311 1A8E  
                       _LATC 000F8B                         u1360 2316                         u2240 1BAE  
                       u2160 1044                         u2080 0DCC                         u1600 0A66  
                       u1520 0996                         u1440 0854                         u2400 1880  
                       u2320 1700                         u1361 2312                         u2241 1BAA  
                       u2161 1040                         u2081 0DC8                         u1601 0A62  
                       u1521 0992                         u1441 0850                         u2401 187C  
                       u2321 16FC                         u1370 1D9C                         u2170 108C  
                       u2090 0F46                         u1610 0A74                         u1530 09AE  
                       u1450 0864                         u2250 19C4                         u2410 188E  
                       u2330 170E                         u1371 1D98                         u2171 1088  
                       u1611 0A70                         u1531 09A8                         u1451 0860  
                       u2251 19C0                         u2411 188A                         u2331 170A  
                       u1380 1DC4                         u2180 10BA                         u1700 0BBE  
                       u1620 0A92                         u1540 09B0                         u1460 08A6  
                       u2260 19F8                         u2340 176A                         u2500 13A8  
                       u2420 22A8                         u1381 1DC0                         u2181 10B6  
                       u1701 0BBA                         u1621 0A8E                         u1461 08A2  
                       u2341 1766                         u2501 13A4                         u2421 22A4  
                       u1390 1DD4                         u2190 10F4                         u1710 0BD0  
                       u1630 0ACA                         u1550 09D8                         u1470 08BC  
                       u2270 1A26                         u2350 17C0                         u2510 13BA  
                       u1391 1DD0                         u2191 10F0                         u2095 0F3C  
                       u1711 0BCC                         u1631 0AC6                         u1551 09D4  
                       u1471 08B8                         u2271 1A22                         u2351 17BC  
                       u2511 13B6                         u2431 1118                         u2600 2364  
                       u1800 0CB8                         u1720 0BE6                         u1640 0B10  
                       u1560 09F6                         u1480 08CE                         u2280 1A3A  
                       u2360 180A                         u2520 13EE                         u2440 1200  
                       u2601 2360                         u1801 0CB4                         u1721 0BE2  
                       u1641 0B0C                         u1561 09F2                         u1481 08CA  
                       u2281 1A36                         u2265 19EE                         u2361 1806  
                       u2521 13EA                         u2441 11FC                         u2610 206A  
                       u1810 0CD4                         u1730 0BFC                         u1650 0B46  
                       u1570 0A16                         u1490 08DE                         u2290 1A62  
                       u2370 1828                         u2530 1488                         u2450 1234  
                       u2611 2066                         u1811 0CD0                         u1731 0BF8  
                       u1651 0B42                         u1571 0A12                         u1491 08DA  
                       u2291 1A5E                         u2371 1824                         u2531 1484  
                       u2451 1230                         u2620 1EBA                         u2700 20C4  
                       u1900 18D6                         u1740 0C10                         u1660 0B56  
                       u1580 0A24                         u2380 1838                         u2540 1496  
                       u2460 1266                         u2621 1EB6                         u2701 20C0  
                       u1901 18D2                         u1741 0C0C                         u1661 0B52  
                       u1581 0A20                         u2381 1834                         u2541 1492  
                       u2461 1262                         u2630 1EEA                         u1910 1910  
                       u1750 0C2A                         u1670 0B82                         u1590 0A34  
                       u2390 1846                         u1830 1D5A                         u2550 14A8  
                       u2470 12E4                         u2631 1EE6                         u1911 190C  
                       u1751 0C26                         u1671 0B7E                         u1591 0A30  
                       u2391 1842                         u1831 1D56                         u2551 14A4  
                       u2471 12E0                         u1920 1932                         u1760 0C64  
                       u1680 0B92                         u1840 1D86                         u2480 1306  
                       u2560 1F2C                         u2640 150E                         u1921 192E  
                       u1761 0C60                         u1681 0B8E                         u1841 1D82  
                       u2481 1302                         u2641 150A                         u1930 195A  
                       u1770 0C76                         u1690 0BAE                         u2490 1398  
                       u1850 21EE                         u2570 1F3C                         u2650 1520  
                       u1931 1956                         u1771 0C72                         u1691 0BAA  
                       u2491 1394                         u1851 21EA                         u2571 1F38  
                       u2651 151C                         u1860 225A                         u1940 198C  
                       u1780 0C86                         u1828 1D1A                         u2580 1F4C  
                       u2660 161C                         u1861 2256                         u1941 1988  
                       u1781 0C82                         u1829 1D2E                         u2581 1F48  
                       u2661 1618                         u2717 2180                         u1870 226C  
                       u2590 223E                         u1950 1BCA                         u1790 0CA6  
                       u2670 1636                         u1871 2268                         u2591 223A  
                       u1951 1BC6                         u1791 0CA2                         u2567 1F22  
                       u2671 1632                         u2727 1FF2                         u1880 228C  
                       u1960 1BEC                         u2680 16B8                         u1881 2288  
                       u2737 20CC                         u1961 1BE8                         u2681 16B4  
                       u1890 18B4                         u1970 1C12                         u2690 16EC  
                       u2747 22EE                         u1891 18B0                         u1971 1C0E  
                       u2691 16E8                         u1980 1C34                         u2757 1E7A  
                       u1981 1C30                         u1990 1C52                         u1991 1C4E  
                       _call 23CC                         _head 0073                         _main 2156  
                       _exit 239C                         _send 1D88                         fsr0h 000FEA  
                       _slot 0071                         indf0 000FEF                         fsr2h 000FDA  
                       fsr0l 000FE9                         indf2 000FDF                         fsr1l 000FE1  
                       fsr2l 000FD9       __size_of_OledApi_clear 0020                         prodh 000FF4  
                       prodl 000FF3                         start 0000          OledApi_createChar@i 000F  
              __CFG_IESO$OFF 000000                __CFG_MCLRE$ON 000000                 ___param_bank 000000  
      __size_of_ADC_Api_init 00A2    __size_of_OledApi_printNum 03D0                 command@value 000B  
  __size_of_OledApi_printStr 009C                __CFG_PLLDIV$1 000000               __CFG_CCP2MX$ON 000000  
                      ?_call 0001                ___fltol@sign1 0009              __end_of___aldiv 19AE  
            __end_of___almod 1CA4              __end_of___fladd 0CE8                        ?_main 0001  
                      ?_exit 000B                        ?_send 0002              __end_of___flmul 1112  
            __end_of___flsub 2156              __end_of___fltol 1AB4                __CFG_USBDIV$1 000000  
                      _TRISB 000F93                        _TRISC 000F94                __CFG_PWRT$OFF 000000  
              __CFG_WRT0$OFF 000000                __CFG_WRT1$OFF 000000                __CFG_WRT2$OFF 000000  
              __CFG_WRT3$OFF 000000                recieve24@code 0008               __CFG_EBTR0$OFF 000000  
             __CFG_FCMEN$OFF 000000               __CFG_EBTR1$OFF 000000               __CFG_EBTR2$OFF 000000  
                      __Exit 23C6               __CFG_EBTR3$OFF 000000                command8@_code 0003  
            __end_of_command 2356                __CFG_WRTB$OFF 000000                __CFG_WRTC$OFF 000000  
              __CFG_WRTD$OFF 000000                        _begin 20C6               __CFG_EBTRB$OFF 000000  
                      call@p 0001                        _setup 1F92                ?_OledApi_home 0001  
              ?_OledApi_init 000F              __end_of_sendBit 2322                        _write 2322  
                      pclath 000FFA                        tablat 000FF5                        send@p 0007  
               _ADC_Api_init 1E54                        status 000FD8      __size_of_OledApi_printf 020C  
             __CFG_PBADEN$ON 000000          _OledApi_printf$1292 0057              __initialization 219A  
               __end_of_call 23CE                 __end_of_main 219A                 __end_of_exit 23AE  
               __end_of_send 1E54     __size_of___funcs_on_exit 00E4                       ??_call 0003  
                     ??_main 0090                       ??_exit 000D                _OledApi_clear 22E2  
                     ??_send 0006                __activetblptr 000002               command24@_code 0003  
                     ?__Exit 0001                       ?_begin 000D               ??_OledApi_home 000C  
             ??_OledApi_init 0011                       ?_setup 0001                       ?_write 0001  
               __displaymode 007A                       _SSPBUF 000FC9             __end_of___xxtofl 18A2  
             __CFG_XINST$OFF 000000             __end_of_command8 2386                       ___flge 1AB4  
                  ??___aldiv 0009                    ??___almod 0009                    ??___fladd 0009  
             __CFG_STVREN$ON 000000                    ??___flmul 0009                    ??___flsub 0019  
                  ??___fltol 0005                       clear_0 21C0                       clear_1 21CC  
             ?_OledApi_clear 0001      __size_ofADC_Api@command 002E             __end_of_recieve8 2296  
                  ??_command 000B                    ??_sendBit 0001                 __mediumconst 0000  
                     tblptrh 000FF7                       tblptrl 000FF6                       tblptru 000FF8  
              send@head_sent 0009         ___funcs_on_exit@func 0007                   ___flge@ff1 0019  
                 ___flge@ff2 001D             __end_of_writeStr 239C                 ___xxtofl@arg 000B  
               ___xxtofl@exp 000A                 ___xxtofl@val 0001                   __accesstop 0060  
    __end_of__initialization 21D2                ___rparam_used 000001                   ___fltol@f1 0001  
             __pcstackCOMRAM 0001             _OledApi_printNum 1112        _OledApi_setCursor$266 000E  
              __end_of__Exit 23CC             _OledApi_printStr 1EF6                 __pidataBANK0 23AE  
              __end_of_begin 2110                __end_of_setup 2020                __end_of_write 233C  
         __size_of_isDataRdy 0018            ??___funcs_on_exit 0003                      ??__Exit 0003  
         __size_of_command24 0030                      ??_begin 000E                      ??_setup 008E  
                    ??_write 000B                   __pbssBANK0 0060                   __pbssBANK1 0100  
             _OledApi_printf 14E2  __size_of_OledApi_createChar 004E    OledApi_printf@findingSpec 005B  
      OledApi_printNum@F2917 0060           __size_of_recieve24 0058           OledApi@_enable_pin 0092  
                    ?___flge 0019         __end_of_OledApi_home 23C6         __end_of_OledApi_init 22E2  
            ??_OledApi_clear 000C              OledApi_printf@s 004A        OledApi_printNum@fract 0040  
      OledApi_printNum@whole 0044                    ?___xxtofl 0001                      _SSPCON1 000FC6  
                  ?_command8 0001       __end_of_OledApi_printf 16EE        OledApi_printStr@count 0014  
            __CFG_VREGEN$OFF 000000                    ?_recieve8 0001            __end_of_isDataRdy 236E  
                    __Hparam 0000            OledApi_printf@dec 005D            OledApi_printNum@c 0048  
          OledApi_printNum@i 003E            OledApi_printNum@s 002D                      __Lparam 0000  
          OledApi_printStr@s 0010            __end_of_command24 2240                      ___aldiv 18A2  
            __size_of___flge 0104                      ___almod 1BB8                      ___fladd 0828  
                    ___flmul 0CE8                      ___flsub 2110                      ___fltol 19AE  
  OledApi_createChar@charmap 000C                 __psmallconst 0800               ADC_Api@command 2240  
                    __pcinit 219A                      __ramtop 0800                      __ptext0 2156  
                    __ptext1 1F92                      __ptext2 14E2                      __ptext3 1EF6  
                    __ptext4 21DC                      __ptext5 2296                      __ptext6 1112  
                    __ptext7 2386                      __ptext8 239C                      __ptext9 1CA4  
                  ?_writeStr 000B                      _command 233C                      _builtin 0100  
                 ??___xxtofl 0005                      _sendBit 2302             ___aldiv@dividend 0001  
            __displaycontrol 007B            __end_of_recieve24 2078                      fp__call 0000  
                 ??_command8 0003              ?_OledApi_printf 004A         end_of_initialization 21D2  
        ADC_Api_init@_en_pin 0012                __Lmediumconst 0000                      send@buf 0002  
                 ??_recieve8 0001             ___aldiv@quotient 000B                      postdec1 000FE5  
                    postdec2 000FDD       __end_ofADC_Api@command 226E                      postinc0 000FEE  
                    postinc2 000FDE                   ??_writeStr 000E         ADC_Api@command@_code 0002  
                ___fladd@grs 0010                ___xxtofl@sign 0009     __end_of_OledApi_printNum 14E2  
   __end_of_OledApi_printStr 1F92                   command24@i 0006                  ___flmul@grs 000E  
          _OledApi_setCursor 21DC      OledApi@_displayfunction 0078           ?_OledApi_setCursor 000C  
      __size_of_OledApi_home 0008        __size_of_OledApi_init 0026            _OledApi_printSpec 2296  
            ___funcs_on_exit 1CA4              ?ADC_Api@command 0001          ??_OledApi_setCursor 000D  
             __end_of___flge 1BB8           ?_OledApi_printSpec 0001          ??_OledApi_printSpec 000D  
        start_initialization 219A                  __enable_pin 007D    __end_of_OledApi_setCursor 2210  
               _OledApi_home 23BE                 _OledApi_init 22BC          OledApi_printNum@dec 0029  
        OledApi_printNum@num 0025          OledApi_printf@count 005C    __end_of_OledApi_printSpec 22BC  
                   ??___flge 0021           OledApi_init@enable 000F                  __pdataBANK0 007E  
           __CFG_LPT1OSC$OFF 000000          ___funcs_on_exit@arg 0009                    ___fladd@a 0005  
                  ___fladd@b 0001                    ___flmul@a 0005                    ___flmul@b 0001  
                  ___flsub@a 0015                    ___flsub@b 0011                __pcstackBANK0 008E  
                 recieve24@i 000B            __size_of___xxtofl 01B4                ?_ADC_Api_init 0001  
          __size_of_command8 0018   __end_of_OledApi_createChar 20C6      __end_of___funcs_on_exit 1D88  
                  __pnvBANK0 0092            __size_of_recieve8 0028                    _isDataRdy 2356  
                   ?___aldiv 0001                     ?___almod 0001                     ?___fladd 0001  
                   ?___flmul 0001                     ?___flsub 0011                     ?___fltol 0001  
                  _command24 2210        __end_of_OledApi_clear 2302             ___almod@dividend 0001  
                   ?_command 0001                    begin@cols 0001                    begin@rows 000D  
                __smallconst 0800             ??_OledApi_printf 0055            __size_of_writeStr 0016  
                   ?_sendBit 0001               __size_of__Exit 0006               __size_of_begin 004A  
 __size_of_OledApi_setCursor 0034               __size_of_setup 008E               __size_of_write 001A  
             ??_ADC_Api_init 000D                    _recieve24 2020              ___aldiv@divisor 0005  
            ___aldiv@counter 0009          OledApi@_displaymode 0076       OledApi_printSpec@schar 000D  
 __size_of_OledApi_printSpec 0026                     _PIR1bits 000F9E             __CFG_WDTPS$32768 000000  
                 ?_isDataRdy 0001                ADC_Api_init@i 0013                   ?_command24 0003  
                 _ADCON1bits 000FC1                  writeStr@len 000D       OledApi@_displaycontrol 0077  
                  main@count 0079            ?_OledApi_printNum 0025            ?_OledApi_printStr 0010  
                  copy_data0 21AE                   ?_recieve24 0002           ??_OledApi_printNum 002A  
         ??_OledApi_printStr 0012             ?___funcs_on_exit 0001             ??ADC_Api@command 0001  
                   __Exit@ec 0001           OledApi_printf@args 004C           OledApi_printf@list 005E  
                   __Hrparam 0000                     __Lrparam 0000             __size_of___aldiv 010C  
           __size_of___almod 00EC             __size_of___fladd 04C0             __size_of___flmul 042A  
           __size_of___flsub 0046             __size_of___fltol 0106                     ___en_pin 0075  
           __size_of_command 001A                     ___xxtofl 16EE                    send@count 0004  
           __size_of_sendBit 0020                     __ptext10 23CC                     __ptext11 23C6  
                   __ptext20 22BC                     __ptext12 16EE                     __ptext21 20C6  
                   __ptext13 19AE                     __ptext30 2020                     __ptext22 22E2  
                   __ptext14 2110                     __ptext31 226E                     __ptext23 23BE  
                   __ptext15 0828                     __ptext32 2356                     __ptext24 2078  
                   __ptext16 0CE8                     __ptext33 236E                     __ptext25 2322  
                   __ptext17 1AB4                     __ptext34 2210                     __ptext26 233C  
                   __ptext18 1BB8                     __ptext35 2240                     __ptext27 1D88  
                   __ptext19 18A2                     __ptext36 0000                     __ptext28 2302  
                   __ptext29 1E54                     _command8 236E   OledApi_createChar@location 000E  
            ___almod@divisor 0005              ___almod@counter 0009         OledApi_setCursor@col 000D  
       OledApi_setCursor@row 000C                __size_of_call 0002                __size_of_main 0044  
              __size_of_exit 0012                __size_of_send 00CC                     _recieve8 226E  
                 write@value 000B                  ??_isDataRdy 0001             __displayfunction 007C  
                ??_command24 0006         __end_of_ADC_Api_init 1EF6                     _writeStr 2386  
      __CFG_CPUDIV$OSC1_PLL2 000000                     exit@code 000B                  ??_recieve24 0005  
                   sendBit@b 0001                     send@mask 000A                     send@mode 0006  
                 _OSCCONbits 000FD3           _OledApi_createChar 2078          __CFG_FOSC$INTOSC_EC 000000  
        ?_OledApi_createChar 000C                 ___aldiv@sign 000A                  _SSPCON1bits 000FC6  
              ___fladd@signs 000D                 ___almod@sign 000A                 ___fladd@aexp 000E  
               ___fladd@bexp 000F         ??_OledApi_createChar 000E  
