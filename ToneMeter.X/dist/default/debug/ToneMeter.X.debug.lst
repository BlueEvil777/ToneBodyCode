

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Mar 26 12:48:34 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    55  0000                     
    56                           ; Version 2.10
    57                           ; Generated 31/07/2019 GMT
    58                           ; 
    59                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC18F2550 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90  0000                     
    91                           	psect	idataCOMRAM
    92  002486                     __pidataCOMRAM:
    93                           	opt callstack 0
    94                           
    95                           ;initializer for _G_SPI_Api_u8Flags
    96  002486  07                 	db	7
    97                           
    98                           	psect	idataBANK0
    99  002466                     __pidataBANK0:
   100                           	opt callstack 0
   101                           
   102                           ;initializer for _ac
   103  002466  00                 	db	0
   104  002467  00                 	db	0
   105  002468  00                 	db	0
   106  002469  0A                 	db	10
   107  00246A  15                 	db	21
   108  00246B  00                 	db	0
   109  00246C  00                 	db	0
   110  00246D  00                 	db	0
   111                           
   112                           ;initializer for _dc
   113  00246E  00                 	db	0
   114  00246F  00                 	db	0
   115  002470  1F                 	db	31
   116  002471  00                 	db	0
   117  002472  00                 	db	0
   118  002473  1B                 	db	27
   119  002474  00                 	db	0
   120  002475  00                 	db	0
   121  0000                     _PORTC	set	3970
   122  0000                     _LATB	set	3978
   123  0000                     _TRISB	set	3987
   124  0000                     _TRISC	set	3988
   125  0000                     _LATC	set	3979
   126  0000                     _SSPCON1bits	set	4038
   127  0000                     _ADCON1bits	set	4033
   128  0000                     _OSCCONbits	set	4051
   129                           
   130                           	psect	smallconst
   131  000800                     __psmallconst:
   132                           	opt callstack 0
   133  000800  00                 	db	0
   134  000801                     STR_2:
   135  000801  53                 	db	83	;'S'
   136  000802  65                 	db	101	;'e'
   137  000803  63                 	db	99	;'c'
   138  000804  6F                 	db	111	;'o'
   139  000805  6E                 	db	110	;'n'
   140  000806  64                 	db	100	;'d'
   141  000807  73                 	db	115	;'s'
   142  000808  3A                 	db	58	;':'
   143  000809  20                 	db	32
   144  00080A  25                 	db	37
   145  00080B  64                 	db	100	;'d'
   146  00080C  00                 	db	0
   147  00080D                     STR_1:
   148  00080D  48                 	db	72	;'H'
   149  00080E  49                 	db	73	;'I'
   150  00080F  00                 	db	0
   151                           
   152                           ; #config settings
   153  000810  00                 	db	0	; dummy byte at the end
   154  0000                     
   155                           	psect	cinit
   156  0020B4                     __pcinit:
   157                           	opt callstack 0
   158  0020B4                     start_initialization:
   159                           	opt callstack 0
   160  0020B4                     __initialization:
   161                           	opt callstack 0
   162                           
   163                           ; Initialize objects allocated to BANK0 (16 bytes)
   164                           ; load TBLPTR registers with __pidataBANK0
   165  0020B4  0E66               	movlw	low __pidataBANK0
   166  0020B6  6EF6               	movwf	tblptrl,c
   167  0020B8  0E24               	movlw	high __pidataBANK0
   168  0020BA  6EF7               	movwf	tblptrh,c
   169  0020BC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   170  0020BE  6EF8               	movwf	tblptru,c
   171  0020C0  EE00  F085         	lfsr	0,__pdataBANK0
   172  0020C4  EE10 F010          	lfsr	1,16
   173  0020C8                     copy_data0:
   174  0020C8  0009               	tblrd		*+
   175  0020CA  CFF5 FFEE          	movff	tablat,postinc0
   176  0020CE  50E5               	movf	postdec1,w,c
   177  0020D0  50E1               	movf	fsr1l,w,c
   178  0020D2  E1FA               	bnz	copy_data0
   179                           
   180                           ; Initialize objects allocated to COMRAM (1 bytes)
   181                           ; load TBLPTR registers with __pidataCOMRAM
   182  0020D4  0E86               	movlw	low __pidataCOMRAM
   183  0020D6  6EF6               	movwf	tblptrl,c
   184  0020D8  0E24               	movlw	high __pidataCOMRAM
   185  0020DA  6EF7               	movwf	tblptrh,c
   186  0020DC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   187  0020DE  6EF8               	movwf	tblptru,c
   188  0020E0  0009               	tblrd		*+	;fetch initializer
   189  0020E2  CFF5 F05F          	movff	tablat,__pdataCOMRAM
   190                           
   191                           ; Clear objects allocated to BANK1 (130 bytes)
   192  0020E6  EE01  F000         	lfsr	0,__pbssBANK1
   193  0020EA  0E82               	movlw	130
   194  0020EC                     clear_0:
   195  0020EC  6AEE               	clrf	postinc0,c
   196  0020EE  06E8               	decf	wreg,f,c
   197  0020F0  E1FD               	bnz	clear_0
   198                           
   199                           ; Clear objects allocated to BANK0 (37 bytes)
   200  0020F2  EE00  F060         	lfsr	0,__pbssBANK0
   201  0020F6  0E25               	movlw	37
   202  0020F8                     clear_1:
   203  0020F8  6AEE               	clrf	postinc0,c
   204  0020FA  06E8               	decf	wreg,f,c
   205  0020FC  E1FD               	bnz	clear_1
   206                           
   207                           ; Clear objects allocated to COMRAM (3 bytes)
   208  0020FE  6A5E               	clrf	(__pbssCOMRAM+2)& (0+255),c
   209  002100  6A5D               	clrf	(__pbssCOMRAM+1)& (0+255),c
   210  002102  6A5C               	clrf	__pbssCOMRAM& (0+255),c
   211  002104                     end_of_initialization:
   212                           	opt callstack 0
   213  002104                     __end_of__initialization:
   214                           	opt callstack 0
   215  002104  0E00               	movlw	low (__Lmediumconst shr (0+16))
   216  002106  6EF8               	movwf	tblptru,c
   217  002108  0100               	movlb	0
   218  00210A  EF36  F011         	goto	_main	;jump to C main() function
   219                           
   220                           	psect	bssCOMRAM
   221  00005C                     __pbssCOMRAM:
   222                           	opt callstack 0
   223  00005C                     OledApi@_displaymode:
   224                           	opt callstack 0
   225  00005C                     	ds	1
   226  00005D                     OledApi@_displaycontrol:
   227                           	opt callstack 0
   228  00005D                     	ds	1
   229  00005E                     main@count:
   230                           	opt callstack 0
   231  00005E                     	ds	1
   232                           
   233                           	psect	dataCOMRAM
   234  00005F                     __pdataCOMRAM:
   235                           	opt callstack 0
   236  00005F                     _G_SPI_Api_u8Flags:
   237                           	opt callstack 0
   238  00005F                     	ds	1
   239                           
   240                           	psect	bssBANK0
   241  000060                     __pbssBANK0:
   242                           	opt callstack 0
   243  000060                     	ds	17
   244  000071                     ___config24:
   245                           	opt callstack 0
   246  000071                     	ds	3
   247  000074                     ___config8:
   248                           	opt callstack 0
   249  000074                     	ds	3
   250  000077                     ___SPIconfig:
   251                           	opt callstack 0
   252  000077                     	ds	3
   253  00007A                     _slot:
   254                           	opt callstack 0
   255  00007A                     	ds	2
   256  00007C                     _head:
   257                           	opt callstack 0
   258  00007C                     	ds	2
   259  00007E                     OledApi@_displayfunction:
   260                           	opt callstack 0
   261  00007E                     	ds	1
   262  00007F                     	ds	1
   263  000080                     	ds	1
   264  000081                     	ds	1
   265  000082                     ___config:
   266                           	opt callstack 0
   267  000082                     	ds	3
   268                           
   269                           	psect	dataBANK0
   270  000085                     __pdataBANK0:
   271                           	opt callstack 0
   272  000085                     _ac:
   273                           	opt callstack 0
   274  000085                     	ds	8
   275  00008D                     _dc:
   276                           	opt callstack 0
   277  00008D                     	ds	8
   278                           
   279                           	psect	bssBANK1
   280  000100                     __pbssBANK1:
   281                           	opt callstack 0
   282  000100                     _builtin:
   283                           	opt callstack 0
   284  000100                     	ds	130
   285                           
   286                           	psect	cstackCOMRAM
   287  000001                     __pcstackCOMRAM:
   288                           	opt callstack 0
   289  000001                     ??_OledApi_init:
   290  000001                     ??_ADC_Api_init:
   291  000001                     ?___fladd:
   292                           	opt callstack 0
   293  000001                     ?___flmul:
   294                           	opt callstack 0
   295  000001                     ?___aldiv:
   296                           	opt callstack 0
   297  000001                     ?___almod:
   298                           	opt callstack 0
   299  000001                     ?___fltol:
   300                           	opt callstack 0
   301  000001                     ?___xxtofl:
   302                           	opt callstack 0
   303  000001                     DIGITAL_WRITE@port:
   304                           	opt callstack 0
   305  000001                     __Exit@ec:
   306                           	opt callstack 0
   307  000001                     call@p:
   308                           	opt callstack 0
   309  000001                     ___aldiv@dividend:
   310                           	opt callstack 0
   311  000001                     ___almod@dividend:
   312                           	opt callstack 0
   313  000001                     ___fltol@f1:
   314                           	opt callstack 0
   315  000001                     ___fladd@b:
   316                           	opt callstack 0
   317  000001                     ___flmul@b:
   318                           	opt callstack 0
   319  000001                     ___xxtofl@val:
   320                           	opt callstack 0
   321                           
   322                           ; 4 bytes @ 0x0
   323  000001                     	ds	1
   324  000002                     OledApi_init@_enable:
   325                           	opt callstack 0
   326                           
   327                           ; 1 bytes @ 0x1
   328  000002                     	ds	1
   329  000003                     ??___funcs_on_exit:
   330  000003                     DIGITAL_WRITE@pin:
   331                           	opt callstack 0
   332  000003                     ADC_Api_init@_en_pin:
   333                           	opt callstack 0
   334                           
   335                           ; 1 bytes @ 0x2
   336  000003                     	ds	1
   337  000004                     DIGITAL_WRITE@val:
   338                           	opt callstack 0
   339                           
   340                           ; 1 bytes @ 0x3
   341  000004                     	ds	1
   342  000005                     ??_DIGITAL_WRITE:
   343  000005                     ??___fltol:
   344  000005                     ??___xxtofl:
   345  000005                     ___aldiv@divisor:
   346                           	opt callstack 0
   347  000005                     ___almod@divisor:
   348                           	opt callstack 0
   349  000005                     ___fladd@a:
   350                           	opt callstack 0
   351  000005                     ___flmul@a:
   352                           	opt callstack 0
   353                           
   354                           ; 4 bytes @ 0x4
   355  000005                     	ds	1
   356  000006                     SPI_Api_sendBit@val:
   357                           	opt callstack 0
   358  000006                     SPI_Api_setSpiDevice@_config:
   359                           	opt callstack 0
   360                           
   361                           ; 3 bytes @ 0x5
   362  000006                     	ds	1
   363  000007                     ___funcs_on_exit@func:
   364                           	opt callstack 0
   365  000007                     SPI_Api_sendWord@word:
   366                           	opt callstack 0
   367                           
   368                           ; 4 bytes @ 0x6
   369  000007                     	ds	2
   370  000009                     ??___fladd:
   371  000009                     ??___flmul:
   372  000009                     SPI_Api_setSpiDevice@mask:
   373                           	opt callstack 0
   374  000009                     ___aldiv@counter:
   375                           	opt callstack 0
   376  000009                     ___almod@counter:
   377                           	opt callstack 0
   378  000009                     ___fltol@sign1:
   379                           	opt callstack 0
   380  000009                     ___xxtofl@sign:
   381                           	opt callstack 0
   382  000009                     ___funcs_on_exit@arg:
   383                           	opt callstack 0
   384                           
   385                           ; 2 bytes @ 0x8
   386  000009                     	ds	1
   387  00000A                     ___aldiv@sign:
   388                           	opt callstack 0
   389  00000A                     ___almod@sign:
   390                           	opt callstack 0
   391  00000A                     ___fltol@exp1:
   392                           	opt callstack 0
   393  00000A                     ___xxtofl@exp:
   394                           	opt callstack 0
   395                           
   396                           ; 1 bytes @ 0x9
   397  00000A                     	ds	1
   398  00000B                     ??_SPI_Api_sendWord:
   399  00000B                     exit@code:
   400                           	opt callstack 0
   401  00000B                     ___aldiv@quotient:
   402                           	opt callstack 0
   403  00000B                     ___xxtofl@arg:
   404                           	opt callstack 0
   405                           
   406                           ; 4 bytes @ 0xA
   407  00000B                     	ds	2
   408  00000D                     ___fladd@signs:
   409                           	opt callstack 0
   410  00000D                     ___flmul@sign:
   411                           	opt callstack 0
   412                           
   413                           ; 1 bytes @ 0xC
   414  00000D                     	ds	1
   415  00000E                     ___fladd@aexp:
   416                           	opt callstack 0
   417  00000E                     ___flmul@grs:
   418                           	opt callstack 0
   419                           
   420                           ; 4 bytes @ 0xD
   421  00000E                     	ds	1
   422  00000F                     ___fladd@bexp:
   423                           	opt callstack 0
   424  00000F                     SPI_Api_sendWord@mask:
   425                           	opt callstack 0
   426                           
   427                           ; 4 bytes @ 0xE
   428  00000F                     	ds	1
   429  000010                     ___fladd@grs:
   430                           	opt callstack 0
   431                           
   432                           ; 1 bytes @ 0xF
   433  000010                     	ds	1
   434  000011                     ?___flsub:
   435                           	opt callstack 0
   436  000011                     ___flsub@b:
   437                           	opt callstack 0
   438                           
   439                           ; 4 bytes @ 0x10
   440  000011                     	ds	1
   441  000012                     ___flmul@aexp:
   442                           	opt callstack 0
   443                           
   444                           ; 1 bytes @ 0x11
   445  000012                     	ds	1
   446  000013                     ___flmul@bexp:
   447                           	opt callstack 0
   448  000013                     send@buf:
   449                           	opt callstack 0
   450                           
   451                           ; 2 bytes @ 0x12
   452  000013                     	ds	1
   453  000014                     ___flmul@prod:
   454                           	opt callstack 0
   455                           
   456                           ; 4 bytes @ 0x13
   457  000014                     	ds	1
   458  000015                     send@count:
   459                           	opt callstack 0
   460  000015                     ___flsub@a:
   461                           	opt callstack 0
   462                           
   463                           ; 4 bytes @ 0x14
   464  000015                     	ds	2
   465  000017                     ??_send:
   466                           
   467                           ; 1 bytes @ 0x16
   468  000017                     	ds	1
   469  000018                     send@mode:
   470                           	opt callstack 0
   471  000018                     ___flmul@temp:
   472                           	opt callstack 0
   473                           
   474                           ; 2 bytes @ 0x17
   475  000018                     	ds	1
   476  000019                     send@word:
   477                           	opt callstack 0
   478  000019                     ___flge@ff1:
   479                           	opt callstack 0
   480                           
   481                           ; 4 bytes @ 0x18
   482  000019                     	ds	4
   483  00001D                     send@p:
   484                           	opt callstack 0
   485  00001D                     ___flge@ff2:
   486                           	opt callstack 0
   487                           
   488                           ; 4 bytes @ 0x1C
   489  00001D                     	ds	2
   490  00001F                     send@head_sent:
   491                           	opt callstack 0
   492                           
   493                           ; 1 bytes @ 0x1E
   494  00001F                     	ds	1
   495  000020                     command@value:
   496                           	opt callstack 0
   497  000020                     write@value:
   498                           	opt callstack 0
   499  000020                     writeStr@value:
   500                           	opt callstack 0
   501                           
   502                           ; 2 bytes @ 0x1F
   503  000020                     	ds	1
   504  000021                     ??_OledApi_clear:
   505  000021                     ??___flge:
   506  000021                     OledApi_setCursor@row:
   507                           	opt callstack 0
   508  000021                     OledApi_printSpec@schar:
   509                           	opt callstack 0
   510  000021                     OledApi_createChar@charmap:
   511                           	opt callstack 0
   512                           
   513                           ; 2 bytes @ 0x20
   514  000021                     	ds	1
   515  000022                     OledApi_begin@rows:
   516                           	opt callstack 0
   517  000022                     OledApi_setCursor@col:
   518                           	opt callstack 0
   519  000022                     writeStr@len:
   520                           	opt callstack 0
   521                           
   522                           ; 1 bytes @ 0x21
   523  000022                     	ds	1
   524  000023                     OledApi_createChar@location:
   525                           	opt callstack 0
   526  000023                     _OledApi_setCursor$310:
   527                           	opt callstack 0
   528                           
   529                           ; 2 bytes @ 0x22
   530  000023                     	ds	1
   531  000024                     OledApi_createChar@i:
   532                           	opt callstack 0
   533                           
   534                           ; 2 bytes @ 0x23
   535  000024                     	ds	1
   536  000025                     OledApi_printStr@s:
   537                           	opt callstack 0
   538  000025                     OledApi_printNum@num:
   539                           	opt callstack 0
   540                           
   541                           ; 4 bytes @ 0x24
   542  000025                     	ds	2
   543  000027                     ??_OledApi_printStr:
   544                           
   545                           ; 1 bytes @ 0x26
   546  000027                     	ds	2
   547  000029                     OledApi_printNum@dec:
   548                           	opt callstack 0
   549  000029                     OledApi_printStr@count:
   550                           	opt callstack 0
   551                           
   552                           ; 1 bytes @ 0x28
   553  000029                     	ds	1
   554  00002A                     ??_OledApi_printNum:
   555  00002A                     ??_setup:
   556                           
   557                           ; 1 bytes @ 0x29
   558  00002A                     	ds	3
   559  00002D                     OledApi_printNum@s:
   560                           	opt callstack 0
   561                           
   562                           ; 17 bytes @ 0x2C
   563  00002D                     	ds	17
   564  00003E                     OledApi_printNum@i:
   565                           	opt callstack 0
   566                           
   567                           ; 2 bytes @ 0x3D
   568  00003E                     	ds	2
   569  000040                     OledApi_printNum@fract:
   570                           	opt callstack 0
   571                           
   572                           ; 4 bytes @ 0x3F
   573  000040                     	ds	4
   574  000044                     OledApi_printNum@whole:
   575                           	opt callstack 0
   576                           
   577                           ; 4 bytes @ 0x43
   578  000044                     	ds	4
   579  000048                     OledApi_printNum@c:
   580                           	opt callstack 0
   581                           
   582                           ; 2 bytes @ 0x47
   583  000048                     	ds	2
   584  00004A                     ?_OledApi_printf:
   585                           	opt callstack 0
   586  00004A                     OledApi_printf@s:
   587                           	opt callstack 0
   588                           
   589                           ; 2 bytes @ 0x49
   590  00004A                     	ds	2
   591  00004C                     OledApi_printf@args:
   592                           	opt callstack 0
   593                           
   594                           ; 1 bytes @ 0x4B
   595  00004C                     	ds	3
   596  00004F                     ??_OledApi_printf:
   597                           
   598                           ; 1 bytes @ 0x4E
   599  00004F                     	ds	2
   600  000051                     _OledApi_printf$1149:
   601                           	opt callstack 0
   602                           
   603                           ; 4 bytes @ 0x50
   604  000051                     	ds	4
   605  000055                     OledApi_printf@findingSpec:
   606                           	opt callstack 0
   607                           
   608                           ; 1 bytes @ 0x54
   609  000055                     	ds	1
   610  000056                     OledApi_printf@count:
   611                           	opt callstack 0
   612                           
   613                           ; 1 bytes @ 0x55
   614  000056                     	ds	1
   615  000057                     OledApi_printf@dec:
   616                           	opt callstack 0
   617                           
   618                           ; 1 bytes @ 0x56
   619  000057                     	ds	1
   620  000058                     OledApi_printf@list:
   621                           	opt callstack 0
   622                           
   623                           ; 2 bytes @ 0x57
   624  000058                     	ds	2
   625  00005A                     ??_main:
   626                           
   627                           ; 1 bytes @ 0x59
   628  00005A                     	ds	2
   629                           
   630 ;;
   631 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   632 ;;
   633 ;; *************** function _main *****************
   634 ;; Defined at:
   635 ;;		line 63 in file "main.c"
   636 ;; Parameters:    Size  Location     Type
   637 ;;		None
   638 ;; Auto vars:     Size  Location     Type
   639 ;;		None
   640 ;; Return value:  Size  Location     Type
   641 ;;                  1    wreg      void 
   642 ;; Registers used:
   643 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   644 ;; Tracked objects:
   645 ;;		On entry : 0/0
   646 ;;		On exit  : 0/0
   647 ;;		Unchanged: 0/0
   648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   649 ;;      Params:         0       0       0       0       0       0       0       0       0
   650 ;;      Locals:         0       0       0       0       0       0       0       0       0
   651 ;;      Temps:          2       0       0       0       0       0       0       0       0
   652 ;;      Totals:         2       0       0       0       0       0       0       0       0
   653 ;;Total ram usage:        2 bytes
   654 ;; Hardware stack levels required when called:    9
   655 ;; This function calls:
   656 ;;		_OledApi_clear
   657 ;;		_OledApi_printf
   658 ;;		_setup
   659 ;; This function is called by:
   660 ;;		Startup code after reset
   661 ;; This function uses a non-reentrant model
   662 ;;
   663                           
   664                           	psect	text0
   665  00226C                     __ptext0:
   666                           	opt callstack 0
   667  00226C                     _main:
   668                           	opt callstack 22
   669  00226C                     
   670                           ;main.c: 65:     setup();
   671  00226C  ECE4  F00F         	call	_setup	;wreg free
   672  002270                     l2905:
   673                           
   674                           ;main.c: 69:         OledApi_printf("Seconds: %d", 1, (int)count++);
   675  002270  0E01               	movlw	low STR_2
   676  002272  6E4A               	movwf	OledApi_printf@s^0,c
   677  002274  0E08               	movlw	high STR_2
   678  002276  6E4B               	movwf	(OledApi_printf@s+1)^0,c
   679  002278  0E01               	movlw	1
   680  00227A  6E4C               	movwf	OledApi_printf@args^0,c
   681  00227C  C05E  F04D         	movff	main@count,?_OledApi_printf+3
   682  002280  6A4E               	clrf	(?_OledApi_printf+4)^0,c
   683  002282  EC66  F00A         	call	_OledApi_printf	;wreg free
   684  002286  2A5E               	incf	main@count^0,f,c
   685  002288                     
   686                           ;main.c: 70:         _delay((unsigned long)((1000)*(8000000/4000.0)));
   687  002288  0E0B               	movlw	11
   688  00228A  6E5B               	movwf	(??_main+1)^0,c
   689  00228C  0E26               	movlw	38
   690  00228E  6E5A               	movwf	??_main^0,c
   691  002290  0E5E               	movlw	94
   692  002292                     u2797:
   693  002292  2EE8               	decfsz	wreg,f,c
   694  002294  D7FE               	bra	u2797
   695  002296  2E5A               	decfsz	??_main^0,f,c
   696  002298  D7FC               	bra	u2797
   697  00229A  2E5B               	decfsz	(??_main+1)^0,f,c
   698  00229C  D7FA               	bra	u2797
   699  00229E                     
   700                           ;main.c: 71:         OledApi_clear();
   701  00229E  ECCF  F011         	call	_OledApi_clear	;wreg free
   702  0022A2  EF38  F011         	goto	l2905
   703  0022A6  EF00  F000         	goto	start
   704  0022AA                     __end_of_main:
   705                           	opt callstack 0
   706                           
   707 ;; *************** function _setup *****************
   708 ;; Defined at:
   709 ;;		line 45 in file "main.c"
   710 ;; Parameters:    Size  Location     Type
   711 ;;		None
   712 ;; Auto vars:     Size  Location     Type
   713 ;;		None
   714 ;; Return value:  Size  Location     Type
   715 ;;                  1    wreg      void 
   716 ;; Registers used:
   717 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   718 ;; Tracked objects:
   719 ;;		On entry : 0/0
   720 ;;		On exit  : 0/0
   721 ;;		Unchanged: 0/0
   722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   723 ;;      Params:         0       0       0       0       0       0       0       0       0
   724 ;;      Locals:         0       0       0       0       0       0       0       0       0
   725 ;;      Temps:          2       0       0       0       0       0       0       0       0
   726 ;;      Totals:         2       0       0       0       0       0       0       0       0
   727 ;;Total ram usage:        2 bytes
   728 ;; Hardware stack levels used:    1
   729 ;; Hardware stack levels required when called:    8
   730 ;; This function calls:
   731 ;;		_ADC_Api_config
   732 ;;		_ADC_Api_init
   733 ;;		_OledApi_begin
   734 ;;		_OledApi_createChar
   735 ;;		_OledApi_init
   736 ;;		_OledApi_printStr
   737 ;;		_OledApi_setCursor
   738 ;; This function is called by:
   739 ;;		_main
   740 ;; This function uses a non-reentrant model
   741 ;;
   742                           
   743                           	psect	text1
   744  001FC8                     __ptext1:
   745                           	opt callstack 0
   746  001FC8                     _setup:
   747                           	opt callstack 22
   748  001FC8                     
   749                           ;main.c: 47:     OSCCONbits.IRCF = 111;
   750  001FC8  0E70               	movlw	112
   751  001FCA  12D3               	iorwf	211,f,c	;volatile
   752                           
   753                           ;main.c: 49:     ADCON1bits.PCFG = 0b1111;
   754  001FCC  0E0F               	movlw	15
   755  001FCE  12C1               	iorwf	193,f,c	;volatile
   756  001FD0                     
   757                           ;main.c: 50:     SSPCON1bits.SSPEN = 1;
   758  001FD0  8AC6               	bsf	198,5,c	;volatile
   759                           
   760                           ;main.c: 51:     SSPCON1bits.SSPM = 0b0010;
   761  001FD2  50C6               	movf	198,w,c	;volatile
   762  001FD4  0BF0               	andlw	-16
   763  001FD6  0902               	iorlw	2
   764  001FD8  6EC6               	movwf	198,c	;volatile
   765  001FDA                     
   766                           ;main.c: 52:     OledApi_init(0x40);
   767  001FDA  0E40               	movlw	64
   768  001FDC  EC55  F011         	call	_OledApi_init
   769  001FE0                     
   770                           ;main.c: 53:     ADC_Api_init(0x80);
   771  001FE0  0E80               	movlw	128
   772  001FE2  ECF6  F010         	call	_ADC_Api_init
   773  001FE6                     
   774                           ;main.c: 54:     OledApi_begin(16,2);
   775  001FE6  0E02               	movlw	2
   776  001FE8  6E22               	movwf	OledApi_begin@rows^0,c
   777  001FEA  0E10               	movlw	16
   778  001FEC  ECA3  F011         	call	_OledApi_begin
   779  001FF0                     
   780                           ;main.c: 55:     ADC_Api_config();
   781  001FF0  ECAE  F010         	call	_ADC_Api_config	;wreg free
   782  001FF4                     
   783                           ;main.c: 56:     OledApi_setCursor(5,1);
   784  001FF4  0E01               	movlw	1
   785  001FF6  6E21               	movwf	OledApi_setCursor@row^0,c
   786  001FF8  0E05               	movlw	5
   787  001FFA  EC6F  F011         	call	_OledApi_setCursor
   788  001FFE                     
   789                           ;main.c: 57:     OledApi_printStr("HI");
   790  001FFE  0E0D               	movlw	low STR_1
   791  002000  6E25               	movwf	OledApi_printStr@s^0,c
   792  002002  0E08               	movlw	high STR_1
   793  002004  6E26               	movwf	(OledApi_printStr@s+1)^0,c
   794  002006  EC96  F00F         	call	_OledApi_printStr	;wreg free
   795  00200A                     
   796                           ;main.c: 58:     _delaywdt((unsigned long)((2000)*(8000000/4000.0)));
   797  00200A  0E10               	movlw	16
   798  00200C  6E2B               	movwf	(??_setup+1)^0,c
   799  00200E  0E3B               	movlw	59
   800  002010  6E2A               	movwf	??_setup^0,c
   801  002012  0E99               	movlw	153
   802  002014                     u2807:
   803  002014  0004               	clrwdt	
   804  002016  2EE8               	decfsz	wreg,f,c
   805  002018  D7FD               	bra	u2807
   806  00201A  2E2A               	decfsz	??_setup^0,f,c
   807  00201C  D7FB               	bra	u2807
   808  00201E  2E2B               	decfsz	(??_setup+1)^0,f,c
   809  002020  D7F9               	bra	u2807
   810  002022  0004               	clrwdt	
   811  002024  F000               	nop	
   812  002026                     
   813                           ;main.c: 59:     OledApi_createChar(0, dc);
   814  002026  0E8D               	movlw	low _dc
   815  002028  6E21               	movwf	OledApi_createChar@charmap^0,c
   816  00202A  0E00               	movlw	high _dc
   817  00202C  6E22               	movwf	(OledApi_createChar@charmap+1)^0,c
   818  00202E  0E00               	movlw	0
   819  002030  EC87  F010         	call	_OledApi_createChar
   820  002034                     
   821                           ;main.c: 60:     OledApi_createChar(1, ac);
   822  002034  0E85               	movlw	low _ac
   823  002036  6E21               	movwf	OledApi_createChar@charmap^0,c
   824  002038  0E00               	movlw	high _ac
   825  00203A  6E22               	movwf	(OledApi_createChar@charmap+1)^0,c
   826  00203C  0E01               	movlw	1
   827  00203E  EC87  F010         	call	_OledApi_createChar
   828  002042  0012               	return		;funcret
   829  002044                     __end_of_setup:
   830                           	opt callstack 0
   831                           
   832 ;; *************** function _OledApi_init *****************
   833 ;; Defined at:
   834 ;;		line 14 in file "OledApi.c"
   835 ;; Parameters:    Size  Location     Type
   836 ;;  _enable         1    wreg     unsigned char 
   837 ;; Auto vars:     Size  Location     Type
   838 ;;  _enable         1    1[COMRAM] unsigned char 
   839 ;; Return value:  Size  Location     Type
   840 ;;                  1    wreg      void 
   841 ;; Registers used:
   842 ;;		wreg, status,2, status,0, cstack
   843 ;; Tracked objects:
   844 ;;		On entry : 0/0
   845 ;;		On exit  : 0/0
   846 ;;		Unchanged: 0/0
   847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   848 ;;      Params:         0       0       0       0       0       0       0       0       0
   849 ;;      Locals:         1       0       0       0       0       0       0       0       0
   850 ;;      Temps:          1       0       0       0       0       0       0       0       0
   851 ;;      Totals:         2       0       0       0       0       0       0       0       0
   852 ;;Total ram usage:        2 bytes
   853 ;; Hardware stack levels used:    1
   854 ;; Hardware stack levels required when called:    1
   855 ;; This function calls:
   856 ;;		_SPI_Api_initialize
   857 ;; This function is called by:
   858 ;;		_setup
   859 ;; This function uses a non-reentrant model
   860 ;;
   861                           
   862                           	psect	text2
   863  0022AA                     __ptext2:
   864                           	opt callstack 0
   865  0022AA                     _OledApi_init:
   866                           	opt callstack 28
   867                           
   868                           ;incstack = 0
   869                           ;OledApi_init@_enable stored from wreg
   870  0022AA  6E02               	movwf	OledApi_init@_enable^0,c
   871  0022AC                     
   872                           ;OledApi.c: 14: void OledApi_init(uint8_t _enable);OledApi.c: 15: {;OledApi.c: 19:   _di
      +                          splayfunction = 0x00;
   873  0022AC  0E00               	movlw	0
   874  0022AE  0100               	movlb	0	; () banked
   875  0022B0  6F7E               	movwf	OledApi@_displayfunction& (0+255),b
   876  0022B2                     
   877                           ; BSR set to: 0
   878                           ;OledApi.c: 24:     __SPIconfig.u8EnablePin = _enable;
   879  0022B2  C002  F077         	movff	OledApi_init@_enable,___SPIconfig
   880  0022B6                     
   881                           ; BSR set to: 0
   882                           ;OledApi.c: 25:     __SPIconfig.u8SPIBits = 8;
   883  0022B6  0E08               	movlw	8
   884  0022B8  6F79               	movwf	(___SPIconfig+2)& (0+255),b
   885  0022BA                     
   886                           ; BSR set to: 0
   887                           ;OledApi.c: 26:     TRISC &= ~_enable;
   888  0022BA  5002               	movf	OledApi_init@_enable^0,w,c	;volatile
   889  0022BC  0AFF               	xorlw	255
   890  0022BE  1694               	andwf	148,f,c	;volatile
   891  0022C0                     
   892                           ; BSR set to: 0
   893                           ;OledApi.c: 27:  LATC |= _enable;
   894  0022C0  5002               	movf	OledApi_init@_enable^0,w,c	;volatile
   895  0022C2  128B               	iorwf	139,f,c	;volatile
   896  0022C4                     
   897                           ; BSR set to: 0
   898                           ;OledApi.c: 33:     SPI_Api_initialize();
   899  0022C4  ECDF  F011         	call	_SPI_Api_initialize	;wreg free
   900  0022C8                     
   901                           ;OledApi.c: 34:     _delaywdt((unsigned long)((1)*(8000000/4000.0)));
   902  0022C8  0E02               	movlw	2
   903  0022CA  6E01               	movwf	??_OledApi_init^0,c
   904  0022CC  0EF2               	movlw	242
   905  0022CE                     u2817:
   906  0022CE  0004               	clrwdt	
   907  0022D0  2EE8               	decfsz	wreg,f,c
   908  0022D2  D7FD               	bra	u2817
   909  0022D4  2E01               	decfsz	??_OledApi_init^0,f,c
   910  0022D6  D7FB               	bra	u2817
   911  0022D8  0004               	clrwdt	
   912  0022DA  F000               	nop	
   913  0022DC  0012               	return		;funcret
   914  0022DE                     __end_of_OledApi_init:
   915                           	opt callstack 0
   916                           
   917 ;; *************** function _OledApi_createChar *****************
   918 ;; Defined at:
   919 ;;		line 161 in file "OledApi.c"
   920 ;; Parameters:    Size  Location     Type
   921 ;;  location        1    wreg     unsigned char 
   922 ;;  charmap         2   32[COMRAM] PTR unsigned char 
   923 ;;		 -> ac(8), dc(8), 
   924 ;; Auto vars:     Size  Location     Type
   925 ;;  location        1   34[COMRAM] unsigned char 
   926 ;;  i               2   35[COMRAM] int 
   927 ;; Return value:  Size  Location     Type
   928 ;;                  1    wreg      void 
   929 ;; Registers used:
   930 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   931 ;; Tracked objects:
   932 ;;		On entry : 0/0
   933 ;;		On exit  : 0/0
   934 ;;		Unchanged: 0/0
   935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   936 ;;      Params:         2       0       0       0       0       0       0       0       0
   937 ;;      Locals:         3       0       0       0       0       0       0       0       0
   938 ;;      Temps:          0       0       0       0       0       0       0       0       0
   939 ;;      Totals:         5       0       0       0       0       0       0       0       0
   940 ;;Total ram usage:        5 bytes
   941 ;; Hardware stack levels used:    1
   942 ;; Hardware stack levels required when called:    5
   943 ;; This function calls:
   944 ;;		_command
   945 ;;		_write
   946 ;; This function is called by:
   947 ;;		_setup
   948 ;; This function uses a non-reentrant model
   949 ;;
   950                           
   951                           	psect	text3
   952  00210E                     __ptext3:
   953                           	opt callstack 0
   954  00210E                     _OledApi_createChar:
   955                           	opt callstack 24
   956                           
   957                           ;incstack = 0
   958                           ;OledApi_createChar@location stored from wreg
   959  00210E  6E23               	movwf	OledApi_createChar@location^0,c
   960  002110                     
   961                           ;OledApi.c: 162:  location &= 0x7;
   962  002110  0E07               	movlw	7
   963  002112  1623               	andwf	OledApi_createChar@location^0,f,c
   964  002114                     
   965                           ;OledApi.c: 163:  command(0x40 | (location << 3));
   966  002114  3823               	swapf	OledApi_createChar@location^0,w,c
   967  002116  42E8               	rrncf	wreg,f,c
   968  002118  0BF8               	andlw	248
   969  00211A  0940               	iorlw	64
   970  00211C  ECED  F011         	call	_command
   971  002120                     
   972                           ;OledApi.c: 164:  for (int i=0; i<8; i++) {
   973  002120  0E00               	movlw	0
   974  002122  6E25               	movwf	(OledApi_createChar@i+1)^0,c
   975  002124  0E00               	movlw	0
   976  002126  6E24               	movwf	OledApi_createChar@i^0,c
   977  002128                     l2737:
   978                           
   979                           ;OledApi.c: 165:   write(charmap[i]);
   980  002128  5024               	movf	OledApi_createChar@i^0,w,c
   981  00212A  2421               	addwf	OledApi_createChar@charmap^0,w,c
   982  00212C  6ED9               	movwf	fsr2l,c
   983  00212E  5025               	movf	(OledApi_createChar@i+1)^0,w,c
   984  002130  2022               	addwfc	(OledApi_createChar@charmap+1)^0,w,c
   985  002132  6EDA               	movwf	fsr2h,c
   986  002134  50DF               	movf	indf2,w,c
   987  002136  ECFA  F011         	call	_write
   988  00213A                     
   989                           ;OledApi.c: 166:  }
   990  00213A  4A24               	infsnz	OledApi_createChar@i^0,f,c
   991  00213C  2A25               	incf	(OledApi_createChar@i+1)^0,f,c
   992  00213E  BE25               	btfsc	(OledApi_createChar@i+1)^0,7,c
   993  002140  EFAB  F010         	goto	u2541
   994  002144  5025               	movf	(OledApi_createChar@i+1)^0,w,c
   995  002146  E109               	bnz	u2540
   996  002148  0E08               	movlw	8
   997  00214A  5C24               	subwf	OledApi_createChar@i^0,w,c
   998  00214C  A0D8               	btfss	status,0,c
   999  00214E  EFAB  F010         	goto	u2541
  1000  002152  EFAD  F010         	goto	u2540
  1001  002156                     u2541:
  1002  002156  EF94  F010         	goto	l2737
  1003  00215A                     u2540:
  1004  00215A  0012               	return		;funcret
  1005  00215C                     __end_of_OledApi_createChar:
  1006                           	opt callstack 0
  1007                           
  1008 ;; *************** function _OledApi_begin *****************
  1009 ;; Defined at:
  1010 ;;		line 39 in file "OledApi.c"
  1011 ;; Parameters:    Size  Location     Type
  1012 ;;  cols            1    wreg     unsigned char 
  1013 ;;  rows            1   33[COMRAM] unsigned char 
  1014 ;; Auto vars:     Size  Location     Type
  1015 ;;  cols            1    0[COMRAM] unsigned char 
  1016 ;; Return value:  Size  Location     Type
  1017 ;;                  1    wreg      void 
  1018 ;; Registers used:
  1019 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1020 ;; Tracked objects:
  1021 ;;		On entry : 0/0
  1022 ;;		On exit  : 0/0
  1023 ;;		Unchanged: 0/0
  1024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1025 ;;      Params:         1       0       0       0       0       0       0       0       0
  1026 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1027 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1028 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1029 ;;Total ram usage:        1 bytes
  1030 ;; Hardware stack levels used:    1
  1031 ;; Hardware stack levels required when called:    7
  1032 ;; This function calls:
  1033 ;;		_OledApi_clear
  1034 ;;		_OledApi_home
  1035 ;;		_command
  1036 ;; This function is called by:
  1037 ;;		_setup
  1038 ;; This function uses a non-reentrant model
  1039 ;;
  1040                           
  1041                           	psect	text4
  1042  002346                     __ptext4:
  1043                           	opt callstack 0
  1044  002346                     _OledApi_begin:
  1045                           	opt callstack 22
  1046  002346                     
  1047                           ;OledApi.c: 39: void OledApi_begin(uint8_t cols, uint8_t rows);OledApi.c: 40: {;OledApi.
      +                          c: 45:  command(0x28 | _displayfunction | 0x00);
  1048  002346  0100               	movlb	0	; () banked
  1049  002348  517E               	movf	OledApi@_displayfunction& (0+255),w,b
  1050  00234A  0928               	iorlw	40
  1051  00234C  ECED  F011         	call	_command
  1052                           
  1053                           ;OledApi.c: 48:  command(0x08 | 0x00);
  1054  002350  0E08               	movlw	8
  1055  002352  ECED  F011         	call	_command
  1056                           
  1057                           ;OledApi.c: 51:  OledApi_clear();
  1058  002356  ECCF  F011         	call	_OledApi_clear	;wreg free
  1059  00235A                     
  1060                           ;OledApi.c: 54:  _displaymode = 0x02 | 0x00;
  1061  00235A  0E02               	movlw	2
  1062  00235C  6E5C               	movwf	OledApi@_displaymode^0,c
  1063  00235E                     
  1064                           ;OledApi.c: 55:  command(0x04 | _displaymode);
  1065  00235E  505C               	movf	OledApi@_displaymode^0,w,c
  1066  002360  0904               	iorlw	4
  1067  002362  ECED  F011         	call	_command
  1068  002366                     
  1069                           ;OledApi.c: 58:  OledApi_home();
  1070  002366  EC3B  F012         	call	_OledApi_home	;wreg free
  1071  00236A                     
  1072                           ;OledApi.c: 61:  _displaycontrol = 0x04 | 0x00;
  1073  00236A  0E04               	movlw	4
  1074  00236C  6E5D               	movwf	OledApi@_displaycontrol^0,c
  1075                           
  1076                           ;OledApi.c: 62:  command(0x08 | _displaycontrol);
  1077  00236E  505D               	movf	OledApi@_displaycontrol^0,w,c
  1078  002370  0908               	iorlw	8
  1079  002372  ECED  F011         	call	_command
  1080  002376  0012               	return		;funcret
  1081  002378                     __end_of_OledApi_begin:
  1082                           	opt callstack 0
  1083                           
  1084 ;; *************** function _OledApi_clear *****************
  1085 ;; Defined at:
  1086 ;;		line 69 in file "OledApi.c"
  1087 ;; Parameters:    Size  Location     Type
  1088 ;;		None
  1089 ;; Auto vars:     Size  Location     Type
  1090 ;;		None
  1091 ;; Return value:  Size  Location     Type
  1092 ;;                  1    wreg      void 
  1093 ;; Registers used:
  1094 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1095 ;; Tracked objects:
  1096 ;;		On entry : 0/0
  1097 ;;		On exit  : 0/0
  1098 ;;		Unchanged: 0/0
  1099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1100 ;;      Params:         0       0       0       0       0       0       0       0       0
  1101 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1102 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1103 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1104 ;;Total ram usage:        1 bytes
  1105 ;; Hardware stack levels used:    1
  1106 ;; Hardware stack levels required when called:    6
  1107 ;; This function calls:
  1108 ;;		_OledApi_home
  1109 ;;		_command
  1110 ;; This function is called by:
  1111 ;;		_main
  1112 ;;		_OledApi_begin
  1113 ;; This function uses a non-reentrant model
  1114 ;;
  1115                           
  1116                           	psect	text5
  1117  00239E                     __ptext5:
  1118                           	opt callstack 0
  1119  00239E                     _OledApi_clear:
  1120                           	opt callstack 22
  1121  00239E                     
  1122                           ;OledApi.c: 71:  command(0x01);
  1123  00239E  0E01               	movlw	1
  1124  0023A0  ECED  F011         	call	_command
  1125  0023A4                     
  1126                           ;OledApi.c: 72:  _delaywdt((unsigned long)((1)*(8000000/4000.0)));
  1127  0023A4  0E02               	movlw	2
  1128  0023A6  6E21               	movwf	??_OledApi_clear^0,c
  1129  0023A8  0EF2               	movlw	242
  1130  0023AA                     u2827:
  1131  0023AA  0004               	clrwdt	
  1132  0023AC  2EE8               	decfsz	wreg,f,c
  1133  0023AE  D7FD               	bra	u2827
  1134  0023B0  2E21               	decfsz	??_OledApi_clear^0,f,c
  1135  0023B2  D7FB               	bra	u2827
  1136  0023B4  0004               	clrwdt	
  1137  0023B6  F000               	nop	
  1138  0023B8                     
  1139                           ;OledApi.c: 73:  OledApi_home();
  1140  0023B8  EC3B  F012         	call	_OledApi_home	;wreg free
  1141  0023BC  0012               	return		;funcret
  1142  0023BE                     __end_of_OledApi_clear:
  1143                           	opt callstack 0
  1144                           
  1145 ;; *************** function _OledApi_home *****************
  1146 ;; Defined at:
  1147 ;;		line 76 in file "OledApi.c"
  1148 ;; Parameters:    Size  Location     Type
  1149 ;;		None
  1150 ;; Auto vars:     Size  Location     Type
  1151 ;;		None
  1152 ;; Return value:  Size  Location     Type
  1153 ;;                  1    wreg      void 
  1154 ;; Registers used:
  1155 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1156 ;; Tracked objects:
  1157 ;;		On entry : 0/0
  1158 ;;		On exit  : 0/0
  1159 ;;		Unchanged: 0/0
  1160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1161 ;;      Params:         0       0       0       0       0       0       0       0       0
  1162 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1163 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1164 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1165 ;;Total ram usage:        0 bytes
  1166 ;; Hardware stack levels used:    1
  1167 ;; Hardware stack levels required when called:    5
  1168 ;; This function calls:
  1169 ;;		_command
  1170 ;; This function is called by:
  1171 ;;		_OledApi_begin
  1172 ;;		_OledApi_clear
  1173 ;; This function uses a non-reentrant model
  1174 ;;
  1175                           
  1176                           	psect	text6
  1177  002476                     __ptext6:
  1178                           	opt callstack 0
  1179  002476                     _OledApi_home:
  1180                           	opt callstack 23
  1181  002476                     
  1182                           ;OledApi.c: 78:  command(0x02);
  1183  002476  0E02               	movlw	2
  1184  002478  ECED  F011         	call	_command
  1185  00247C  0012               	return		;funcret
  1186  00247E                     __end_of_OledApi_home:
  1187                           	opt callstack 0
  1188                           
  1189 ;; *************** function _ADC_Api_init *****************
  1190 ;; Defined at:
  1191 ;;		line 19 in file "ADC_Api.c"
  1192 ;; Parameters:    Size  Location     Type
  1193 ;;  _en_pin         1    wreg     unsigned char 
  1194 ;; Auto vars:     Size  Location     Type
  1195 ;;  _en_pin         1    2[COMRAM] unsigned char 
  1196 ;; Return value:  Size  Location     Type
  1197 ;;                  1    wreg      void 
  1198 ;; Registers used:
  1199 ;;		wreg, status,2, status,0, cstack
  1200 ;; Tracked objects:
  1201 ;;		On entry : 0/0
  1202 ;;		On exit  : 0/0
  1203 ;;		Unchanged: 0/0
  1204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1205 ;;      Params:         0       0       0       0       0       0       0       0       0
  1206 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1207 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1208 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1209 ;;Total ram usage:        3 bytes
  1210 ;; Hardware stack levels used:    1
  1211 ;; Hardware stack levels required when called:    1
  1212 ;; This function calls:
  1213 ;;		_SPI_Api_initialize
  1214 ;; This function is called by:
  1215 ;;		_setup
  1216 ;; This function uses a non-reentrant model
  1217 ;;
  1218                           
  1219                           	psect	text7
  1220  0021EC                     __ptext7:
  1221                           	opt callstack 0
  1222  0021EC                     _ADC_Api_init:
  1223                           	opt callstack 28
  1224                           
  1225                           ;incstack = 0
  1226                           ;ADC_Api_init@_en_pin stored from wreg
  1227  0021EC  6E03               	movwf	ADC_Api_init@_en_pin^0,c
  1228  0021EE                     
  1229                           ;ADC_Api.c: 21:     __config8.u8EnablePin = __config24.u8EnablePin = _en_pin;
  1230  0021EE  C003  F071         	movff	ADC_Api_init@_en_pin,___config24
  1231  0021F2  C071  F074         	movff	___config24,___config8
  1232  0021F6                     
  1233                           ;ADC_Api.c: 22:     __config8.u8SPIBits = 8;
  1234  0021F6  0E08               	movlw	8
  1235  0021F8  0100               	movlb	0	; () banked
  1236  0021FA  6F76               	movwf	(___config8+2)& (0+255),b
  1237  0021FC                     
  1238                           ; BSR set to: 0
  1239                           ;ADC_Api.c: 23:     __config24.u8SPIBits = 24;
  1240  0021FC  0E18               	movlw	24
  1241  0021FE  6F73               	movwf	(___config24+2)& (0+255),b
  1242  002200                     
  1243                           ; BSR set to: 0
  1244                           ;ADC_Api.c: 26:     SPI_Api_initialize();
  1245  002200  ECDF  F011         	call	_SPI_Api_initialize	;wreg free
  1246  002204                     
  1247                           ;ADC_Api.c: 27:     TRISB &= ~_en_pin;
  1248  002204  5003               	movf	ADC_Api_init@_en_pin^0,w,c	;volatile
  1249  002206  0AFF               	xorlw	255
  1250  002208  1693               	andwf	147,f,c	;volatile
  1251  00220A                     
  1252                           ;ADC_Api.c: 28:     LATB |= _en_pin;
  1253  00220A  5003               	movf	ADC_Api_init@_en_pin^0,w,c	;volatile
  1254  00220C  128A               	iorwf	138,f,c	;volatile
  1255  00220E                     
  1256                           ;ADC_Api.c: 33:     _delaywdt((unsigned long)((600)*(8000000/4000.0)));
  1257  00220E  0E05               	movlw	5
  1258  002210  6E02               	movwf	(??_ADC_Api_init+1)^0,c
  1259  002212  0E92               	movlw	146
  1260  002214  6E01               	movwf	??_ADC_Api_init^0,c
  1261  002216  0E93               	movlw	147
  1262  002218                     u2837:
  1263  002218  0004               	clrwdt	
  1264  00221A  2EE8               	decfsz	wreg,f,c
  1265  00221C  D7FD               	bra	u2837
  1266  00221E  2E01               	decfsz	??_ADC_Api_init^0,f,c
  1267  002220  D7FB               	bra	u2837
  1268  002222  2E02               	decfsz	(??_ADC_Api_init+1)^0,f,c
  1269  002224  D7F9               	bra	u2837
  1270  002226  0004               	clrwdt	
  1271  002228  F000               	nop	
  1272  00222A  0012               	return		;funcret
  1273  00222C                     __end_of_ADC_Api_init:
  1274                           	opt callstack 0
  1275                           
  1276 ;; *************** function _SPI_Api_initialize *****************
  1277 ;; Defined at:
  1278 ;;		line 15 in file "SPI_Api.c"
  1279 ;; Parameters:    Size  Location     Type
  1280 ;;		None
  1281 ;; Auto vars:     Size  Location     Type
  1282 ;;		None
  1283 ;; Return value:  Size  Location     Type
  1284 ;;                  1    wreg      void 
  1285 ;; Registers used:
  1286 ;;		status,2, status,0
  1287 ;; Tracked objects:
  1288 ;;		On entry : 0/0
  1289 ;;		On exit  : 0/0
  1290 ;;		Unchanged: 0/0
  1291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1292 ;;      Params:         0       0       0       0       0       0       0       0       0
  1293 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1294 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1295 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1296 ;;Total ram usage:        0 bytes
  1297 ;; Hardware stack levels used:    1
  1298 ;; This function calls:
  1299 ;;		Nothing
  1300 ;; This function is called by:
  1301 ;;		_OledApi_init
  1302 ;;		_ADC_Api_init
  1303 ;; This function uses a non-reentrant model
  1304 ;;
  1305                           
  1306                           	psect	text8
  1307  0023BE                     __ptext8:
  1308                           	opt callstack 0
  1309  0023BE                     _SPI_Api_initialize:
  1310                           	opt callstack 28
  1311  0023BE                     
  1312                           ;SPI_Api.c: 18:     if(!(_Bool)(G_SPI_Api_u8Flags & 0x01))
  1313  0023BE  B05F               	btfsc	_G_SPI_Api_u8Flags^0,0,c
  1314  0023C0  EFE4  F011         	goto	u1971
  1315  0023C4  EFE6  F011         	goto	u1970
  1316  0023C8                     u1971:
  1317  0023C8  EFE8  F011         	goto	l2337
  1318  0023CC                     u1970:
  1319  0023CC  EFEC  F011         	goto	l285
  1320  0023D0                     l2337:
  1321                           
  1322                           ;SPI_Api.c: 24:     TRISC &= ~0x01;
  1323  0023D0  9094               	bcf	148,0,c	;volatile
  1324                           
  1325                           ;SPI_Api.c: 25:     TRISC |= 0x02;
  1326  0023D2  8294               	bsf	148,1,c	;volatile
  1327                           
  1328                           ;SPI_Api.c: 26:     TRISC &= ~0x04;
  1329  0023D4  9494               	bcf	148,2,c	;volatile
  1330                           
  1331                           ;SPI_Api.c: 29:     G_SPI_Api_u8Flags &= ~0x01;
  1332  0023D6  905F               	bcf	_G_SPI_Api_u8Flags^0,0,c
  1333  0023D8                     l285:
  1334  0023D8  0012               	return		;funcret
  1335  0023DA                     __end_of_SPI_Api_initialize:
  1336                           	opt callstack 0
  1337                           
  1338 ;; *************** function _ADC_Api_config *****************
  1339 ;; Defined at:
  1340 ;;		line 36 in file "ADC_Api.c"
  1341 ;; Parameters:    Size  Location     Type
  1342 ;;		None
  1343 ;; Auto vars:     Size  Location     Type
  1344 ;;		None
  1345 ;; Return value:  Size  Location     Type
  1346 ;;                  1    wreg      void 
  1347 ;; Registers used:
  1348 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1349 ;; Tracked objects:
  1350 ;;		On entry : 0/0
  1351 ;;		On exit  : 0/0
  1352 ;;		Unchanged: 0/0
  1353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1354 ;;      Params:         0       0       0       0       0       0       0       0       0
  1355 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1356 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1357 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1358 ;;Total ram usage:        0 bytes
  1359 ;; Hardware stack levels used:    1
  1360 ;; Hardware stack levels required when called:    3
  1361 ;; This function calls:
  1362 ;;		_SPI_Api_sendWord
  1363 ;;		_SPI_Api_setSpiDevice
  1364 ;; This function is called by:
  1365 ;;		_setup
  1366 ;; This function uses a non-reentrant model
  1367 ;;
  1368                           
  1369                           	psect	text9
  1370  00215C                     __ptext9:
  1371                           	opt callstack 0
  1372  00215C                     _ADC_Api_config:
  1373                           	opt callstack 26
  1374  00215C                     
  1375                           ;ADC_Api.c: 39:     SPI_Api_setSpiDevice(__config8);
  1376  00215C  C074  F006         	movff	___config8,SPI_Api_setSpiDevice@_config
  1377  002160  C075  F007         	movff	___config8+1,SPI_Api_setSpiDevice@_config+1
  1378  002164  C076  F008         	movff	___config8+2,SPI_Api_setSpiDevice@_config+2
  1379  002168  EC22  F010         	call	_SPI_Api_setSpiDevice	;wreg free
  1380                           
  1381                           ;ADC_Api.c: 40:     SPI_Api_sendWord(0x80 | 0x4);
  1382  00216C  0E84               	movlw	132
  1383  00216E  6E07               	movwf	SPI_Api_sendWord@word^0,c
  1384  002170  0E00               	movlw	0
  1385  002172  6E08               	movwf	(SPI_Api_sendWord@word+1)^0,c
  1386  002174  0E00               	movlw	0
  1387  002176  6E09               	movwf	(SPI_Api_sendWord@word+2)^0,c
  1388  002178  0E00               	movlw	0
  1389  00217A  6E0A               	movwf	(SPI_Api_sendWord@word+3)^0,c
  1390  00217C  EC28  F00F         	call	_SPI_Api_sendWord	;wreg free
  1391                           
  1392                           ;ADC_Api.c: 41:     SPI_Api_setSpiDevice(__config24);
  1393  002180  C071  F006         	movff	___config24,SPI_Api_setSpiDevice@_config
  1394  002184  C072  F007         	movff	___config24+1,SPI_Api_setSpiDevice@_config+1
  1395  002188  C073  F008         	movff	___config24+2,SPI_Api_setSpiDevice@_config+2
  1396  00218C  EC22  F010         	call	_SPI_Api_setSpiDevice	;wreg free
  1397                           
  1398                           ;ADC_Api.c: 42:     SPI_Api_sendWord(0x00040000 | 0x00009000 | 0x00000020);
  1399  002190  0E20               	movlw	32
  1400  002192  6E07               	movwf	SPI_Api_sendWord@word^0,c
  1401  002194  0E90               	movlw	144
  1402  002196  6E08               	movwf	(SPI_Api_sendWord@word+1)^0,c
  1403  002198  0E04               	movlw	4
  1404  00219A  6E09               	movwf	(SPI_Api_sendWord@word+2)^0,c
  1405  00219C  0E00               	movlw	0
  1406  00219E  6E0A               	movwf	(SPI_Api_sendWord@word+3)^0,c
  1407  0021A0  EC28  F00F         	call	_SPI_Api_sendWord	;wreg free
  1408  0021A4  0012               	return		;funcret
  1409  0021A6                     __end_of_ADC_Api_config:
  1410                           	opt callstack 0
  1411                           
  1412 ;; *************** function _OledApi_printf *****************
  1413 ;; Defined at:
  1414 ;;		line 177 in file "OledApi.c"
  1415 ;; Parameters:    Size  Location     Type
  1416 ;;  s               2   73[COMRAM] PTR unsigned char 
  1417 ;;		 -> STR_2(12), 
  1418 ;;  args            1   75[COMRAM] unsigned char 
  1419 ;; Auto vars:     Size  Location     Type
  1420 ;;  dec             1   86[COMRAM] unsigned char 
  1421 ;;  findingSpec     1   84[COMRAM] unsigned char 
  1422 ;;  list            2   87[COMRAM] PTR void [1]
  1423 ;;		 -> ?_OledApi_printf(1), 
  1424 ;;  count           1   85[COMRAM] unsigned char 
  1425 ;; Return value:  Size  Location     Type
  1426 ;;                  1    wreg      void 
  1427 ;; Registers used:
  1428 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1429 ;; Tracked objects:
  1430 ;;		On entry : 0/0
  1431 ;;		On exit  : 0/0
  1432 ;;		Unchanged: 0/0
  1433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1434 ;;      Params:         5       0       0       0       0       0       0       0       0
  1435 ;;      Locals:         9       0       0       0       0       0       0       0       0
  1436 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1437 ;;      Totals:        16       0       0       0       0       0       0       0       0
  1438 ;;Total ram usage:       16 bytes
  1439 ;; Hardware stack levels used:    1
  1440 ;; Hardware stack levels required when called:    7
  1441 ;; This function calls:
  1442 ;;		_OledApi_printNum
  1443 ;;		_OledApi_printSpec
  1444 ;;		_OledApi_printStr
  1445 ;;		_OledApi_setCursor
  1446 ;;		___xxtofl
  1447 ;;		_exit
  1448 ;;		_write
  1449 ;; This function is called by:
  1450 ;;		_main
  1451 ;; This function uses a non-reentrant model
  1452 ;;
  1453                           
  1454                           	psect	text10
  1455  0014CC                     __ptext10:
  1456                           	opt callstack 0
  1457  0014CC                     _OledApi_printf:
  1458                           	opt callstack 23
  1459  0014CC                     
  1460                           ;OledApi.c: 177: void OledApi_printf(char* s, uint8_t args, ...);OledApi.c: 178: {;OledA
      +                          pi.c: 179:     uint8_t count = 0;
  1461  0014CC  0E00               	movlw	0
  1462  0014CE  6E56               	movwf	OledApi_printf@count^0,c
  1463  0014D0                     
  1464                           ;OledApi.c: 180:     va_list list;;OledApi.c: 181:     *list = __va_start();
  1465  0014D0  0E4D               	movlw	low (?_OledApi_printf+3)
  1466  0014D2  6E58               	movwf	OledApi_printf@list^0,c
  1467  0014D4  0E00               	movlw	high (?_OledApi_printf+3)
  1468  0014D6  6E59               	movwf	(OledApi_printf@list+1)^0,c
  1469                           
  1470                           ;OledApi.c: 183:     while(*s)
  1471  0014D8  EF5D  F00B         	goto	l2897
  1472  0014DC                     l2843:
  1473                           
  1474                           ;OledApi.c: 184:     {;OledApi.c: 185:         if(*s == '%')
  1475  0014DC  C04A  FFF6         	movff	OledApi_printf@s,tblptrl
  1476  0014E0  C04B  FFF7         	movff	OledApi_printf@s+1,tblptrh
  1477  0014E4                     	if	0	;tblptru may be non-zero
  1478  0014E4                     	endif
  1479  0014E4                     	if	0	;tblptru may be non-zero
  1480  0014E4                     	endif
  1481  0014E4  0008               	tblrd		*
  1482  0014E6  50F5               	movf	tablat,w,c
  1483  0014E8  0A25               	xorlw	37
  1484  0014EA  A4D8               	btfss	status,2,c
  1485  0014EC  EF7A  F00A         	goto	u2691
  1486  0014F0  EF7C  F00A         	goto	u2690
  1487  0014F4                     u2691:
  1488  0014F4  EF53  F00B         	goto	l2893
  1489  0014F8                     u2690:
  1490  0014F8                     
  1491                           ;OledApi.c: 186:         {;OledApi.c: 188:             if(count == args)
  1492  0014F8  504C               	movf	OledApi_printf@args^0,w,c
  1493  0014FA  1856               	xorwf	OledApi_printf@count^0,w,c
  1494  0014FC  A4D8               	btfss	status,2,c
  1495  0014FE  EF83  F00A         	goto	u2701
  1496  001502  EF85  F00A         	goto	u2700
  1497  001506                     u2701:
  1498  001506  EF8B  F00A         	goto	l2849
  1499  00150A                     u2700:
  1500  00150A                     
  1501                           ;OledApi.c: 189:             {;OledApi.c: 190:                 exit(1);
  1502  00150A  0E00               	movlw	0
  1503  00150C  6E0C               	movwf	(exit@code+1)^0,c
  1504  00150E  0E01               	movlw	1
  1505  001510  6E0B               	movwf	exit@code^0,c
  1506  001512  EC2A  F012         	call	_exit	;wreg free
  1507  001516                     l2849:
  1508                           
  1509                           ;OledApi.c: 192:             uint8_t dec = 0, findingSpec;
  1510  001516  0E00               	movlw	0
  1511  001518  6E57               	movwf	OledApi_printf@dec^0,c
  1512  00151A                     l2851:
  1513                           
  1514                           ;OledApi.c: 194:             {;OledApi.c: 195:                 findingSpec = 0;
  1515  00151A  0E00               	movlw	0
  1516  00151C  6E55               	movwf	OledApi_printf@findingSpec^0,c
  1517                           
  1518                           ;OledApi.c: 196:                 switch(*(++s))
  1519  00151E  EF21  F00B         	goto	l2889
  1520  001522                     l2853:
  1521                           
  1522                           ;OledApi.c: 199:                         OledApi_printNum((*(int *)__va_arg(*(int **)lis
      +                          t, (int)0)), dec);
  1523  001522  C058  FFD9         	movff	OledApi_printf@list,fsr2l
  1524  001526  C059  FFDA         	movff	OledApi_printf@list+1,fsr2h
  1525  00152A  CFDE F001          	movff	postinc2,___xxtofl@val
  1526  00152E  CFDD F002          	movff	postdec2,___xxtofl@val+1
  1527  001532  0E00               	movlw	0
  1528  001534  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  1529  001536  0EFF               	movlw	-1
  1530  001538  6E03               	movwf	(___xxtofl@val+2)^0,c
  1531  00153A  6E04               	movwf	(___xxtofl@val+3)^0,c
  1532  00153C  0E01               	movlw	1
  1533  00153E  EC6C  F00B         	call	___xxtofl
  1534  001542  C001  F051         	movff	?___xxtofl,_OledApi_printf$1149
  1535  001546  C002  F052         	movff	?___xxtofl+1,_OledApi_printf$1149+1
  1536  00154A  C003  F053         	movff	?___xxtofl+2,_OledApi_printf$1149+2
  1537  00154E  C004  F054         	movff	?___xxtofl+3,_OledApi_printf$1149+3
  1538  001552                     
  1539                           ;OledApi.c: 199:                         OledApi_printNum((*(int *)__va_arg(*(int **)lis
      +                          t, (int)0)), dec);
  1540  001552  C051  F025         	movff	_OledApi_printf$1149,OledApi_printNum@num
  1541  001556  C052  F026         	movff	_OledApi_printf$1149+1,OledApi_printNum@num+1
  1542  00155A  C053  F027         	movff	_OledApi_printf$1149+2,OledApi_printNum@num+2
  1543  00155E  C054  F028         	movff	_OledApi_printf$1149+3,OledApi_printNum@num+3
  1544  001562  C057  F029         	movff	OledApi_printf@dec,OledApi_printNum@dec
  1545  001566  EC7E  F008         	call	_OledApi_printNum	;wreg free
  1546  00156A  0E02               	movlw	2
  1547  00156C  2658               	addwf	OledApi_printf@list^0,f,c
  1548  00156E  0E00               	movlw	0
  1549  001570  2259               	addwfc	(OledApi_printf@list+1)^0,f,c
  1550  001572                     l2859:
  1551                           
  1552                           ;OledApi.c: 200:                         count++;
  1553  001572  2A56               	incf	OledApi_printf@count^0,f,c
  1554                           
  1555                           ;OledApi.c: 201:                         break;
  1556  001574  EF49  F00B         	goto	l2891
  1557  001578                     l2861:
  1558                           
  1559                           ;OledApi.c: 203:                         OledApi_printNum((*(double *)__va_arg(*(double 
      +                          **)list, (double)0)), dec);
  1560  001578  C058  FFD9         	movff	OledApi_printf@list,fsr2l
  1561  00157C  C059  FFDA         	movff	OledApi_printf@list+1,fsr2h
  1562  001580  CFDE F025          	movff	postinc2,OledApi_printNum@num
  1563  001584  CFDE F026          	movff	postinc2,OledApi_printNum@num+1
  1564  001588  CFDE F027          	movff	postinc2,OledApi_printNum@num+2
  1565  00158C  CFDE F028          	movff	postinc2,OledApi_printNum@num+3
  1566  001590  C057  F029         	movff	OledApi_printf@dec,OledApi_printNum@dec
  1567  001594  EC7E  F008         	call	_OledApi_printNum	;wreg free
  1568  001598  0E04               	movlw	4
  1569  00159A  2658               	addwf	OledApi_printf@list^0,f,c
  1570  00159C  0E00               	movlw	0
  1571  00159E  2259               	addwfc	(OledApi_printf@list+1)^0,f,c
  1572  0015A0  EFB9  F00A         	goto	l2859
  1573  0015A4                     l2867:
  1574                           
  1575                           ;OledApi.c: 207:                         OledApi_setCursor(0,1);
  1576  0015A4  0E01               	movlw	1
  1577  0015A6  6E21               	movwf	OledApi_setCursor@row^0,c
  1578  0015A8  0E00               	movlw	0
  1579  0015AA  EC6F  F011         	call	_OledApi_setCursor
  1580                           
  1581                           ;OledApi.c: 208:                         break;
  1582  0015AE  EF49  F00B         	goto	l2891
  1583  0015B2                     l2869:
  1584                           
  1585                           ;OledApi.c: 210:                         OledApi_printStr((*(uint8_t* *)__va_arg(*(uint8
      +                          _t* **)list, (uint8_t*)0)));
  1586  0015B2  C058  FFD9         	movff	OledApi_printf@list,fsr2l
  1587  0015B6  C059  FFDA         	movff	OledApi_printf@list+1,fsr2h
  1588  0015BA  CFDE F025          	movff	postinc2,OledApi_printStr@s
  1589  0015BE  CFDD F026          	movff	postdec2,OledApi_printStr@s+1
  1590  0015C2  EC96  F00F         	call	_OledApi_printStr	;wreg free
  1591  0015C6  0E02               	movlw	2
  1592  0015C8  2658               	addwf	OledApi_printf@list^0,f,c
  1593  0015CA  0E00               	movlw	0
  1594  0015CC  2259               	addwfc	(OledApi_printf@list+1)^0,f,c
  1595  0015CE  EFB9  F00A         	goto	l2859
  1596  0015D2                     l2875:
  1597                           
  1598                           ;OledApi.c: 214:                         OledApi_printSpec((*(int *)__va_arg(*(int **)li
      +                          st, (int)0)));
  1599  0015D2  C058  FFD9         	movff	OledApi_printf@list,fsr2l
  1600  0015D6  C059  FFDA         	movff	OledApi_printf@list+1,fsr2h
  1601  0015DA  50DF               	movf	indf2,w,c
  1602  0015DC  ECBC  F011         	call	_OledApi_printSpec
  1603  0015E0  0E02               	movlw	2
  1604  0015E2  2658               	addwf	OledApi_printf@list^0,f,c
  1605  0015E4  0E00               	movlw	0
  1606  0015E6  2259               	addwfc	(OledApi_printf@list+1)^0,f,c
  1607  0015E8  EFB9  F00A         	goto	l2859
  1608  0015EC                     l2881:
  1609                           
  1610                           ;OledApi.c: 218:                         if(*s >= '0' && *s <= '9')
  1611  0015EC  C04A  FFF6         	movff	OledApi_printf@s,tblptrl
  1612  0015F0  C04B  FFF7         	movff	OledApi_printf@s+1,tblptrh
  1613  0015F4                     	if	0	;tblptru may be non-zero
  1614  0015F4                     	endif
  1615  0015F4                     	if	0	;tblptru may be non-zero
  1616  0015F4                     	endif
  1617  0015F4  0E2F               	movlw	47
  1618  0015F6  0008               	tblrd		*
  1619  0015F8  64F5               	cpfsgt	tablat,c
  1620  0015FA  EF01  F00B         	goto	u2711
  1621  0015FE  EF03  F00B         	goto	u2710
  1622  001602                     u2711:
  1623  001602  EF49  F00B         	goto	l2891
  1624  001606                     u2710:
  1625  001606  C04A  FFF6         	movff	OledApi_printf@s,tblptrl
  1626  00160A  C04B  FFF7         	movff	OledApi_printf@s+1,tblptrh
  1627  00160E                     	if	0	;tblptru may be non-zero
  1628  00160E                     	endif
  1629  00160E                     	if	0	;tblptru may be non-zero
  1630  00160E                     	endif
  1631  00160E  0E3A               	movlw	58
  1632  001610  0008               	tblrd		*
  1633  001612  60F5               	cpfslt	tablat,c
  1634  001614  EF0E  F00B         	goto	u2721
  1635  001618  EF10  F00B         	goto	u2720
  1636  00161C                     u2721:
  1637  00161C  EF49  F00B         	goto	l2891
  1638  001620                     u2720:
  1639  001620                     
  1640                           ;OledApi.c: 219:                         {;OledApi.c: 220:                             f
      +                          indingSpec = 1;
  1641  001620  0E01               	movlw	1
  1642  001622  6E55               	movwf	OledApi_printf@findingSpec^0,c
  1643  001624                     
  1644                           ;OledApi.c: 221:                             dec = dec*10 + (*s-'0');
  1645  001624  C04A  FFF6         	movff	OledApi_printf@s,tblptrl
  1646  001628  C04B  FFF7         	movff	OledApi_printf@s+1,tblptrh
  1647  00162C                     	if	0	;tblptru may be non-zero
  1648  00162C                     	endif
  1649  00162C                     	if	0	;tblptru may be non-zero
  1650  00162C                     	endif
  1651  00162C  0008               	tblrd		*
  1652  00162E  CFF5 F04F          	movff	tablat,??_OledApi_printf
  1653  001632  5057               	movf	OledApi_printf@dec^0,w,c
  1654  001634  0D0A               	mullw	10
  1655  001636  50F3               	movf	243,w,c
  1656  001638  244F               	addwf	??_OledApi_printf^0,w,c
  1657  00163A  0FD0               	addlw	208
  1658  00163C  6E57               	movwf	OledApi_printf@dec^0,c
  1659  00163E  EF49  F00B         	goto	l2891
  1660  001642                     l2889:
  1661  001642  4A4A               	infsnz	OledApi_printf@s^0,f,c
  1662  001644  2A4B               	incf	(OledApi_printf@s+1)^0,f,c
  1663  001646  C04A  FFF6         	movff	OledApi_printf@s,tblptrl
  1664  00164A  C04B  FFF7         	movff	OledApi_printf@s+1,tblptrh
  1665  00164E                     	if	0	;tblptru may be non-zero
  1666  00164E                     	endif
  1667  00164E                     	if	0	;tblptru may be non-zero
  1668  00164E                     	endif
  1669  00164E  0008               	tblrd		*
  1670  001650  50F5               	movf	tablat,w,c
  1671  001652  6E4F               	movwf	??_OledApi_printf^0,c
  1672  001654  6A50               	clrf	(??_OledApi_printf+1)^0,c
  1673                           
  1674                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1675                           ; Switch size 1, requested type "simple"
  1676                           ; Number of cases is 1, Range of values is 0 to 0
  1677                           ; switch strategies available:
  1678                           ; Name         Instructions Cycles
  1679                           ; simple_byte            4     3 (average)
  1680                           ;	Chosen strategy is simple_byte
  1681  001656  5050               	movf	(??_OledApi_printf+1)^0,w,c
  1682  001658  0A00               	xorlw	0	; case 0
  1683  00165A  B4D8               	btfsc	status,2,c
  1684  00165C  EF32  F00B         	goto	l2995
  1685  001660  EFF6  F00A         	goto	l2881
  1686  001664                     l2995:
  1687                           
  1688                           ; Switch size 1, requested type "simple"
  1689                           ; Number of cases is 5, Range of values is 99 to 115
  1690                           ; switch strategies available:
  1691                           ; Name         Instructions Cycles
  1692                           ; simple_byte           16     9 (average)
  1693                           ;	Chosen strategy is simple_byte
  1694  001664  504F               	movf	??_OledApi_printf^0,w,c
  1695  001666  0A63               	xorlw	99	; case 99
  1696  001668  B4D8               	btfsc	status,2,c
  1697  00166A  EFE9  F00A         	goto	l2875
  1698  00166E  0A07               	xorlw	7	; case 100
  1699  001670  B4D8               	btfsc	status,2,c
  1700  001672  EF91  F00A         	goto	l2853
  1701  001676  0A02               	xorlw	2	; case 102
  1702  001678  B4D8               	btfsc	status,2,c
  1703  00167A  EFBC  F00A         	goto	l2861
  1704  00167E  0A08               	xorlw	8	; case 110
  1705  001680  B4D8               	btfsc	status,2,c
  1706  001682  EFD2  F00A         	goto	l2867
  1707  001686  0A1D               	xorlw	29	; case 115
  1708  001688  B4D8               	btfsc	status,2,c
  1709  00168A  EFD9  F00A         	goto	l2869
  1710  00168E  EFF6  F00A         	goto	l2881
  1711  001692                     l2891:
  1712                           
  1713                           ;OledApi.c: 224:             }while(findingSpec);
  1714  001692  5055               	movf	OledApi_printf@findingSpec^0,w,c
  1715  001694  A4D8               	btfss	status,2,c
  1716  001696  EF4F  F00B         	goto	u2731
  1717  00169A  EF51  F00B         	goto	u2730
  1718  00169E                     u2731:
  1719  00169E  EF8D  F00A         	goto	l2851
  1720  0016A2                     u2730:
  1721  0016A2  EF5B  F00B         	goto	l2895
  1722  0016A6                     l2893:
  1723                           
  1724                           ;OledApi.c: 227:         {;OledApi.c: 228:             write(*s);
  1725  0016A6  C04A  FFF6         	movff	OledApi_printf@s,tblptrl
  1726  0016AA  C04B  FFF7         	movff	OledApi_printf@s+1,tblptrh
  1727  0016AE                     	if	0	;tblptru may be non-zero
  1728  0016AE                     	endif
  1729  0016AE                     	if	0	;tblptru may be non-zero
  1730  0016AE                     	endif
  1731  0016AE  0008               	tblrd		*
  1732  0016B0  50F5               	movf	tablat,w,c
  1733  0016B2  ECFA  F011         	call	_write
  1734  0016B6                     l2895:
  1735                           
  1736                           ;OledApi.c: 230:         s++;
  1737  0016B6  4A4A               	infsnz	OledApi_printf@s^0,f,c
  1738  0016B8  2A4B               	incf	(OledApi_printf@s+1)^0,f,c
  1739  0016BA                     l2897:
  1740                           
  1741                           ;OledApi.c: 183:     while(*s)
  1742  0016BA  C04A  FFF6         	movff	OledApi_printf@s,tblptrl
  1743  0016BE  C04B  FFF7         	movff	OledApi_printf@s+1,tblptrh
  1744  0016C2                     	if	0	;tblptru may be non-zero
  1745  0016C2                     	endif
  1746  0016C2                     	if	0	;tblptru may be non-zero
  1747  0016C2                     	endif
  1748  0016C2  0008               	tblrd		*
  1749  0016C4  50F5               	movf	tablat,w,c
  1750  0016C6  0900               	iorlw	0
  1751  0016C8  A4D8               	btfss	status,2,c
  1752  0016CA  EF69  F00B         	goto	u2741
  1753  0016CE  EF6B  F00B         	goto	u2740
  1754  0016D2                     u2741:
  1755  0016D2  EF6E  F00A         	goto	l2843
  1756  0016D6                     u2740:
  1757  0016D6  0012               	return		;funcret
  1758  0016D8                     __end_of_OledApi_printf:
  1759                           	opt callstack 0
  1760                           
  1761 ;; *************** function _OledApi_printStr *****************
  1762 ;; Defined at:
  1763 ;;		line 292 in file "OledApi.c"
  1764 ;; Parameters:    Size  Location     Type
  1765 ;;  s               2   36[COMRAM] PTR const unsigned char 
  1766 ;;		 -> ?_OledApi_printf(1), STR_1(3), 
  1767 ;; Auto vars:     Size  Location     Type
  1768 ;;  count           1   40[COMRAM] unsigned char 
  1769 ;; Return value:  Size  Location     Type
  1770 ;;                  1    wreg      void 
  1771 ;; Registers used:
  1772 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1773 ;; Tracked objects:
  1774 ;;		On entry : 0/0
  1775 ;;		On exit  : 0/0
  1776 ;;		Unchanged: 0/0
  1777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1778 ;;      Params:         2       0       0       0       0       0       0       0       0
  1779 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1780 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1781 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1782 ;;Total ram usage:        5 bytes
  1783 ;; Hardware stack levels used:    1
  1784 ;; Hardware stack levels required when called:    6
  1785 ;; This function calls:
  1786 ;;		_OledApi_setCursor
  1787 ;;		_writeStr
  1788 ;; This function is called by:
  1789 ;;		_setup
  1790 ;;		_OledApi_printf
  1791 ;; This function uses a non-reentrant model
  1792 ;;
  1793                           
  1794                           	psect	text11
  1795  001F2C                     __ptext11:
  1796                           	opt callstack 0
  1797  001F2C                     _OledApi_printStr:
  1798                           	opt callstack 23
  1799  001F2C                     
  1800                           ;OledApi.c: 292: void OledApi_printStr(const char* s);OledApi.c: 293: {;OledApi.c: 294: 
      +                              uint8_t count = 0;
  1801  001F2C  0E00               	movlw	0
  1802  001F2E  6E29               	movwf	OledApi_printStr@count^0,c
  1803                           
  1804                           ;OledApi.c: 295:     while(s[count])
  1805  001F30  EF9B  F00F         	goto	l2719
  1806  001F34                     l2717:
  1807                           
  1808                           ;OledApi.c: 296:     {;OledApi.c: 297:         count++;
  1809  001F34  2A29               	incf	OledApi_printStr@count^0,f,c
  1810  001F36                     l2719:
  1811                           
  1812                           ;OledApi.c: 295:     while(s[count])
  1813  001F36  5029               	movf	OledApi_printStr@count^0,w,c
  1814  001F38  2425               	addwf	OledApi_printStr@s^0,w,c
  1815  001F3A  6E27               	movwf	??_OledApi_printStr^0,c
  1816  001F3C  0E00               	movlw	0
  1817  001F3E  2026               	addwfc	(OledApi_printStr@s+1)^0,w,c
  1818  001F40  6E28               	movwf	(??_OledApi_printStr+1)^0,c
  1819  001F42  C027  FFF6         	movff	??_OledApi_printStr,tblptrl
  1820  001F46  C028  FFF7         	movff	??_OledApi_printStr+1,tblptrh
  1821  001F4A  6AF8               	clrf	tblptru,c
  1822  001F4C  0E07               	movlw	(high __ramtop+-1)
  1823  001F4E  64F7               	cpfsgt	tblptrh,c
  1824  001F50  D003               	bra	u2517
  1825  001F52  0008               	tblrd		*
  1826  001F54  50F5               	movf	tablat,w,c
  1827  001F56  D005               	bra	u2510
  1828  001F58                     u2517:
  1829  001F58  CFF6 FFE9          	movff	tblptrl,fsr0l
  1830  001F5C  CFF7 FFEA          	movff	tblptrh,fsr0h
  1831  001F60  50EF               	movf	indf0,w,c
  1832  001F62                     u2510:
  1833  001F62  0900               	iorlw	0
  1834  001F64  A4D8               	btfss	status,2,c
  1835  001F66  EFB7  F00F         	goto	u2521
  1836  001F6A  EFB9  F00F         	goto	u2520
  1837  001F6E                     u2521:
  1838  001F6E  EF9A  F00F         	goto	l2717
  1839  001F72                     u2520:
  1840  001F72                     
  1841                           ;OledApi.c: 299:     if(count > 16)
  1842  001F72  0E10               	movlw	16
  1843  001F74  6429               	cpfsgt	OledApi_printStr@count^0,c
  1844  001F76  EFBF  F00F         	goto	u2531
  1845  001F7A  EFC1  F00F         	goto	u2530
  1846  001F7E                     u2531:
  1847  001F7E  EFDB  F00F         	goto	l2725
  1848  001F82                     u2530:
  1849  001F82                     
  1850                           ;OledApi.c: 300:     {;OledApi.c: 301:         writeStr(s, 16);
  1851  001F82  C025  F020         	movff	OledApi_printStr@s,writeStr@value
  1852  001F86  C026  F021         	movff	OledApi_printStr@s+1,writeStr@value+1
  1853  001F8A  0E10               	movlw	16
  1854  001F8C  6E22               	movwf	writeStr@len^0,c
  1855  001F8E  EC1F  F012         	call	_writeStr	;wreg free
  1856                           
  1857                           ;OledApi.c: 302:         OledApi_setCursor(0,1);
  1858  001F92  0E01               	movlw	1
  1859  001F94  6E21               	movwf	OledApi_setCursor@row^0,c
  1860  001F96  0E00               	movlw	0
  1861  001F98  EC6F  F011         	call	_OledApi_setCursor
  1862                           
  1863                           ;OledApi.c: 303:         writeStr(s+16, count - 16);
  1864  001F9C  0E10               	movlw	16
  1865  001F9E  2425               	addwf	OledApi_printStr@s^0,w,c
  1866  001FA0  6E20               	movwf	writeStr@value^0,c
  1867  001FA2  0E00               	movlw	0
  1868  001FA4  2026               	addwfc	(OledApi_printStr@s+1)^0,w,c
  1869  001FA6  6E21               	movwf	(writeStr@value+1)^0,c
  1870  001FA8  5029               	movf	OledApi_printStr@count^0,w,c
  1871  001FAA  0FF0               	addlw	240
  1872  001FAC  6E22               	movwf	writeStr@len^0,c
  1873  001FAE  EC1F  F012         	call	_writeStr	;wreg free
  1874                           
  1875                           ;OledApi.c: 304:     }
  1876  001FB2  EFE3  F00F         	goto	l223
  1877  001FB6                     l2725:
  1878                           
  1879                           ;OledApi.c: 306:     {;OledApi.c: 307:         writeStr(s, count);
  1880  001FB6  C025  F020         	movff	OledApi_printStr@s,writeStr@value
  1881  001FBA  C026  F021         	movff	OledApi_printStr@s+1,writeStr@value+1
  1882  001FBE  C029  F022         	movff	OledApi_printStr@count,writeStr@len
  1883  001FC2  EC1F  F012         	call	_writeStr	;wreg free
  1884  001FC6                     l223:
  1885  001FC6  0012               	return		;funcret
  1886  001FC8                     __end_of_OledApi_printStr:
  1887                           	opt callstack 0
  1888                           
  1889 ;; *************** function _OledApi_setCursor *****************
  1890 ;; Defined at:
  1891 ;;		line 81 in file "OledApi.c"
  1892 ;; Parameters:    Size  Location     Type
  1893 ;;  col             1    wreg     unsigned char 
  1894 ;;  row             1   32[COMRAM] unsigned char 
  1895 ;; Auto vars:     Size  Location     Type
  1896 ;;  col             1   33[COMRAM] unsigned char 
  1897 ;; Return value:  Size  Location     Type
  1898 ;;                  1    wreg      void 
  1899 ;; Registers used:
  1900 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1901 ;; Tracked objects:
  1902 ;;		On entry : 0/0
  1903 ;;		On exit  : 0/0
  1904 ;;		Unchanged: 0/0
  1905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1906 ;;      Params:         1       0       0       0       0       0       0       0       0
  1907 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1908 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1909 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1910 ;;Total ram usage:        4 bytes
  1911 ;; Hardware stack levels used:    1
  1912 ;; Hardware stack levels required when called:    5
  1913 ;; This function calls:
  1914 ;;		_command
  1915 ;; This function is called by:
  1916 ;;		_setup
  1917 ;;		_OledApi_printf
  1918 ;;		_OledApi_printStr
  1919 ;; This function uses a non-reentrant model
  1920 ;;
  1921                           
  1922                           	psect	text12
  1923  0022DE                     __ptext12:
  1924                           	opt callstack 0
  1925  0022DE                     _OledApi_setCursor:
  1926                           	opt callstack 24
  1927                           
  1928                           ;incstack = 0
  1929                           ;OledApi_setCursor@col stored from wreg
  1930  0022DE  6E22               	movwf	OledApi_setCursor@col^0,c
  1931  0022E0                     
  1932                           ;OledApi.c: 81: void OledApi_setCursor(uint8_t col, uint8_t row);OledApi.c: 82: {;OledAp
      +                          i.c: 85:  command(0x80 | (row ? 0x40 : 0x00) | (col & 0x3F));
  1933  0022E0  5021               	movf	OledApi_setCursor@row^0,w,c
  1934  0022E2  A4D8               	btfss	status,2,c
  1935  0022E4  EF76  F011         	goto	u1961
  1936  0022E8  EF78  F011         	goto	u1960
  1937  0022EC                     u1961:
  1938  0022EC  EF7E  F011         	goto	l2323
  1939  0022F0                     u1960:
  1940  0022F0  0E00               	movlw	0
  1941  0022F2  6E24               	movwf	(_OledApi_setCursor$310+1)^0,c
  1942  0022F4  0E00               	movlw	0
  1943  0022F6  6E23               	movwf	_OledApi_setCursor$310^0,c
  1944  0022F8  EF82  F011         	goto	l2325
  1945  0022FC                     l2323:
  1946  0022FC  0E00               	movlw	0
  1947  0022FE  6E24               	movwf	(_OledApi_setCursor$310+1)^0,c
  1948  002300  0E40               	movlw	64
  1949  002302  6E23               	movwf	_OledApi_setCursor$310^0,c
  1950  002304                     l2325:
  1951  002304  5022               	movf	OledApi_setCursor@col^0,w,c
  1952  002306  0B3F               	andlw	63
  1953  002308  1023               	iorwf	_OledApi_setCursor$310^0,w,c
  1954  00230A  0980               	iorlw	128
  1955  00230C  ECED  F011         	call	_command
  1956  002310  0012               	return		;funcret
  1957  002312                     __end_of_OledApi_setCursor:
  1958                           	opt callstack 0
  1959                           
  1960 ;; *************** function _command *****************
  1961 ;; Defined at:
  1962 ;;		line 313 in file "OledApi.c"
  1963 ;; Parameters:    Size  Location     Type
  1964 ;;  value           1    wreg     unsigned char 
  1965 ;; Auto vars:     Size  Location     Type
  1966 ;;  value           1   31[COMRAM] unsigned char 
  1967 ;; Return value:  Size  Location     Type
  1968 ;;                  1    wreg      void 
  1969 ;; Registers used:
  1970 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1971 ;; Tracked objects:
  1972 ;;		On entry : 0/0
  1973 ;;		On exit  : 0/0
  1974 ;;		Unchanged: 0/0
  1975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1976 ;;      Params:         0       0       0       0       0       0       0       0       0
  1977 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1978 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1979 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1980 ;;Total ram usage:        1 bytes
  1981 ;; Hardware stack levels used:    1
  1982 ;; Hardware stack levels required when called:    4
  1983 ;; This function calls:
  1984 ;;		_send
  1985 ;; This function is called by:
  1986 ;;		_OledApi_begin
  1987 ;;		_OledApi_clear
  1988 ;;		_OledApi_home
  1989 ;;		_OledApi_setCursor
  1990 ;;		_OledApi_createChar
  1991 ;;		_OledApi_noDisplay
  1992 ;;		_OledApi_display
  1993 ;;		_OledApi_noCursor
  1994 ;;		_OledApi_cursor
  1995 ;;		_OledApi_noBlink
  1996 ;;		_OledApi_blink
  1997 ;;		_OledApi_scrollDisplayLeft
  1998 ;;		_OledApi_scrollDisplayRight
  1999 ;;		_OledApi_leftToRight
  2000 ;;		_OledApi_rightToLeft
  2001 ;;		_OledApi_autoscroll
  2002 ;;		_OledApi_noAutoscroll
  2003 ;; This function uses a non-reentrant model
  2004 ;;
  2005                           
  2006                           	psect	text13
  2007  0023DA                     __ptext13:
  2008                           	opt callstack 0
  2009  0023DA                     _command:
  2010                           	opt callstack 24
  2011                           
  2012                           ;incstack = 0
  2013                           ;command@value stored from wreg
  2014  0023DA  6E20               	movwf	command@value^0,c
  2015  0023DC                     
  2016                           ;OledApi.c: 314:  send(0, &value, 1);
  2017  0023DC  0E20               	movlw	low command@value
  2018  0023DE  6E13               	movwf	send@buf^0,c
  2019  0023E0  0E00               	movlw	high command@value
  2020  0023E2  6E14               	movwf	(send@buf+1)^0,c
  2021  0023E4  0E00               	movlw	0
  2022  0023E6  6E16               	movwf	(send@count+1)^0,c
  2023  0023E8  0E01               	movlw	1
  2024  0023EA  6E15               	movwf	send@count^0,c
  2025  0023EC  0E00               	movlw	0
  2026  0023EE  ECB9  F00E         	call	_send
  2027  0023F2  0012               	return		;funcret
  2028  0023F4                     __end_of_command:
  2029                           	opt callstack 0
  2030                           
  2031 ;; *************** function _OledApi_printSpec *****************
  2032 ;; Defined at:
  2033 ;;		line 169 in file "OledApi.c"
  2034 ;; Parameters:    Size  Location     Type
  2035 ;;  schar           1    wreg     unsigned char 
  2036 ;; Auto vars:     Size  Location     Type
  2037 ;;  schar           1   32[COMRAM] unsigned char 
  2038 ;; Return value:  Size  Location     Type
  2039 ;;                  1    wreg      void 
  2040 ;; Registers used:
  2041 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
  2042 ;; Tracked objects:
  2043 ;;		On entry : 0/0
  2044 ;;		On exit  : 0/0
  2045 ;;		Unchanged: 0/0
  2046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2047 ;;      Params:         0       0       0       0       0       0       0       0       0
  2048 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2049 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2050 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2051 ;;Total ram usage:        1 bytes
  2052 ;; Hardware stack levels used:    1
  2053 ;; Hardware stack levels required when called:    5
  2054 ;; This function calls:
  2055 ;;		_exit
  2056 ;;		_write
  2057 ;; This function is called by:
  2058 ;;		_OledApi_printf
  2059 ;; This function uses a non-reentrant model
  2060 ;;
  2061                           
  2062                           	psect	text14
  2063  002378                     __ptext14:
  2064                           	opt callstack 0
  2065  002378                     _OledApi_printSpec:
  2066                           	opt callstack 24
  2067                           
  2068                           ;incstack = 0
  2069                           ;OledApi_printSpec@schar stored from wreg
  2070  002378  6E21               	movwf	OledApi_printSpec@schar^0,c
  2071  00237A                     
  2072                           ;OledApi.c: 169: void OledApi_printSpec(uint8_t schar);OledApi.c: 170: {;OledApi.c: 171:
      +                               if(schar > 7){
  2073  00237A  0E07               	movlw	7
  2074  00237C  6421               	cpfsgt	OledApi_printSpec@schar^0,c
  2075  00237E  EFC3  F011         	goto	u2551
  2076  002382  EFC5  F011         	goto	u2550
  2077  002386                     u2551:
  2078  002386  EFCB  F011         	goto	l2747
  2079  00238A                     u2550:
  2080  00238A                     
  2081                           ;OledApi.c: 172:         exit(1);
  2082  00238A  0E00               	movlw	0
  2083  00238C  6E0C               	movwf	(exit@code+1)^0,c
  2084  00238E  0E01               	movlw	1
  2085  002390  6E0B               	movwf	exit@code^0,c
  2086  002392  EC2A  F012         	call	_exit	;wreg free
  2087  002396                     l2747:
  2088                           
  2089                           ;OledApi.c: 174:     write(schar);
  2090  002396  5021               	movf	OledApi_printSpec@schar^0,w,c
  2091  002398  ECFA  F011         	call	_write
  2092  00239C  0012               	return		;funcret
  2093  00239E                     __end_of_OledApi_printSpec:
  2094                           	opt callstack 0
  2095                           
  2096 ;; *************** function _write *****************
  2097 ;; Defined at:
  2098 ;;		line 318 in file "OledApi.c"
  2099 ;; Parameters:    Size  Location     Type
  2100 ;;  value           1    wreg     unsigned char 
  2101 ;; Auto vars:     Size  Location     Type
  2102 ;;  value           1   31[COMRAM] unsigned char 
  2103 ;; Return value:  Size  Location     Type
  2104 ;;                  1    wreg      void 
  2105 ;; Registers used:
  2106 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2107 ;; Tracked objects:
  2108 ;;		On entry : 0/0
  2109 ;;		On exit  : 0/0
  2110 ;;		Unchanged: 0/0
  2111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2112 ;;      Params:         0       0       0       0       0       0       0       0       0
  2113 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2114 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2115 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2116 ;;Total ram usage:        1 bytes
  2117 ;; Hardware stack levels used:    1
  2118 ;; Hardware stack levels required when called:    4
  2119 ;; This function calls:
  2120 ;;		_send
  2121 ;; This function is called by:
  2122 ;;		_OledApi_createChar
  2123 ;;		_OledApi_printSpec
  2124 ;;		_OledApi_printf
  2125 ;; This function uses a non-reentrant model
  2126 ;;
  2127                           
  2128                           	psect	text15
  2129  0023F4                     __ptext15:
  2130                           	opt callstack 0
  2131  0023F4                     _write:
  2132                           	opt callstack 24
  2133                           
  2134                           ;incstack = 0
  2135                           ;write@value stored from wreg
  2136  0023F4  6E20               	movwf	write@value^0,c
  2137  0023F6                     
  2138                           ;OledApi.c: 318: static void write(uint8_t value);OledApi.c: 319: {;OledApi.c: 320:  sen
      +                          d(1, &value, 1);
  2139  0023F6  0E20               	movlw	low write@value
  2140  0023F8  6E13               	movwf	send@buf^0,c
  2141  0023FA  0E00               	movlw	high write@value
  2142  0023FC  6E14               	movwf	(send@buf+1)^0,c
  2143  0023FE  0E00               	movlw	0
  2144  002400  6E16               	movwf	(send@count+1)^0,c
  2145  002402  0E01               	movlw	1
  2146  002404  6E15               	movwf	send@count^0,c
  2147  002406  0E01               	movlw	1
  2148  002408  ECB9  F00E         	call	_send
  2149  00240C  0012               	return		;funcret
  2150  00240E                     __end_of_write:
  2151                           	opt callstack 0
  2152                           
  2153 ;; *************** function _OledApi_printNum *****************
  2154 ;; Defined at:
  2155 ;;		line 236 in file "OledApi.c"
  2156 ;; Parameters:    Size  Location     Type
  2157 ;;  num             4   36[COMRAM] float 
  2158 ;;  dec             1   40[COMRAM] char 
  2159 ;; Auto vars:     Size  Location     Type
  2160 ;;  i               2   61[COMRAM] int 
  2161 ;;  s              17   44[COMRAM] unsigned char [17]
  2162 ;;  whole           4   67[COMRAM] long 
  2163 ;;  fract           4   63[COMRAM] long 
  2164 ;;  c               2   71[COMRAM] int 
  2165 ;; Return value:  Size  Location     Type
  2166 ;;                  1    wreg      void 
  2167 ;; Registers used:
  2168 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2169 ;; Tracked objects:
  2170 ;;		On entry : 0/0
  2171 ;;		On exit  : 0/0
  2172 ;;		Unchanged: 0/0
  2173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2174 ;;      Params:         5       0       0       0       0       0       0       0       0
  2175 ;;      Locals:        29       0       0       0       0       0       0       0       0
  2176 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2177 ;;      Totals:        37       0       0       0       0       0       0       0       0
  2178 ;;Total ram usage:       37 bytes
  2179 ;; Hardware stack levels used:    1
  2180 ;; Hardware stack levels required when called:    5
  2181 ;; This function calls:
  2182 ;;		___aldiv
  2183 ;;		___almod
  2184 ;;		___flge
  2185 ;;		___flmul
  2186 ;;		___flsub
  2187 ;;		___fltol
  2188 ;;		___xxtofl
  2189 ;;		_exit
  2190 ;;		_writeStr
  2191 ;; This function is called by:
  2192 ;;		_OledApi_printf
  2193 ;; This function uses a non-reentrant model
  2194 ;;
  2195                           
  2196                           	psect	text16
  2197  0010FC                     __ptext16:
  2198                           	opt callstack 0
  2199  0010FC                     _OledApi_printNum:
  2200                           	opt callstack 24
  2201  0010FC                     
  2202                           ;OledApi.c: 236: void OledApi_printNum(float num, int8_t dec);OledApi.c: 237: {;OledApi.
      +                          c: 238:     int32_t whole, fract;;OledApi.c: 239:     uint8_t s[17] = {};
  2203  0010FC  EE20  F02D         	lfsr	2,OledApi_printNum@s
  2204  001100  0E10               	movlw	16
  2205  001102                     u2561:
  2206  001102  6ADE               	clrf	postinc2,c
  2207  001104  06E8               	decf	wreg,f,c
  2208  001106  E2FD               	bc	u2561
  2209  001108                     
  2210                           ;OledApi.c: 240:     int c = 16;
  2211  001108  0E00               	movlw	0
  2212  00110A  6E49               	movwf	(OledApi_printNum@c+1)^0,c
  2213  00110C  0E10               	movlw	16
  2214  00110E  6E48               	movwf	OledApi_printNum@c^0,c
  2215  001110                     
  2216                           ;OledApi.c: 242:     whole = (int32_t) num;
  2217  001110  C025  F001         	movff	OledApi_printNum@num,___fltol@f1
  2218  001114  C026  F002         	movff	OledApi_printNum@num+1,___fltol@f1+1
  2219  001118  C027  F003         	movff	OledApi_printNum@num+2,___fltol@f1+2
  2220  00111C  C028  F004         	movff	OledApi_printNum@num+3,___fltol@f1+3
  2221  001120  ECCC  F00C         	call	___fltol	;wreg free
  2222  001124  C001  F044         	movff	?___fltol,OledApi_printNum@whole
  2223  001128  C002  F045         	movff	?___fltol+1,OledApi_printNum@whole+1
  2224  00112C  C003  F046         	movff	?___fltol+2,OledApi_printNum@whole+2
  2225  001130  C004  F047         	movff	?___fltol+3,OledApi_printNum@whole+3
  2226  001134                     
  2227                           ;OledApi.c: 243:     num -= whole;
  2228  001134  C025  F011         	movff	OledApi_printNum@num,___flsub@b
  2229  001138  C026  F012         	movff	OledApi_printNum@num+1,___flsub@b+1
  2230  00113C  C027  F013         	movff	OledApi_printNum@num+2,___flsub@b+2
  2231  001140  C028  F014         	movff	OledApi_printNum@num+3,___flsub@b+3
  2232  001144  C044  F001         	movff	OledApi_printNum@whole,___xxtofl@val
  2233  001148  C045  F002         	movff	OledApi_printNum@whole+1,___xxtofl@val+1
  2234  00114C  C046  F003         	movff	OledApi_printNum@whole+2,___xxtofl@val+2
  2235  001150  C047  F004         	movff	OledApi_printNum@whole+3,___xxtofl@val+3
  2236  001154  0E01               	movlw	1
  2237  001156  EC6C  F00B         	call	___xxtofl
  2238  00115A  C001  F015         	movff	?___xxtofl,___flsub@a
  2239  00115E  C002  F016         	movff	?___xxtofl+1,___flsub@a+1
  2240  001162  C003  F017         	movff	?___xxtofl+2,___flsub@a+2
  2241  001166  C004  F018         	movff	?___xxtofl+3,___flsub@a+3
  2242  00116A  ECD3  F010         	call	___flsub	;wreg free
  2243  00116E  C011  F025         	movff	?___flsub,OledApi_printNum@num
  2244  001172  C012  F026         	movff	?___flsub+1,OledApi_printNum@num+1
  2245  001176  C013  F027         	movff	?___flsub+2,OledApi_printNum@num+2
  2246  00117A  C014  F028         	movff	?___flsub+3,OledApi_printNum@num+3
  2247  00117E                     
  2248                           ;OledApi.c: 245:     for(int i = 0; i < dec; i++)
  2249  00117E  0E00               	movlw	0
  2250  001180  6E3F               	movwf	(OledApi_printNum@i+1)^0,c
  2251  001182  0E00               	movlw	0
  2252  001184  6E3E               	movwf	OledApi_printNum@i^0,c
  2253  001186  EFE1  F008         	goto	l2763
  2254  00118A                     l2759:
  2255                           
  2256                           ;OledApi.c: 246:     {;OledApi.c: 247:         num *= 10;
  2257  00118A  C025  F001         	movff	OledApi_printNum@num,___flmul@b
  2258  00118E  C026  F002         	movff	OledApi_printNum@num+1,___flmul@b+1
  2259  001192  C027  F003         	movff	OledApi_printNum@num+2,___flmul@b+2
  2260  001196  C028  F004         	movff	OledApi_printNum@num+3,___flmul@b+3
  2261  00119A  0E00               	movlw	0
  2262  00119C  6E05               	movwf	___flmul@a^0,c
  2263  00119E  0E00               	movlw	0
  2264  0011A0  6E06               	movwf	(___flmul@a+1)^0,c
  2265  0011A2  0E20               	movlw	32
  2266  0011A4  6E07               	movwf	(___flmul@a+2)^0,c
  2267  0011A6  0E41               	movlw	65
  2268  0011A8  6E08               	movwf	(___flmul@a+3)^0,c
  2269  0011AA  EC69  F006         	call	___flmul	;wreg free
  2270  0011AE  C001  F025         	movff	?___flmul,OledApi_printNum@num
  2271  0011B2  C002  F026         	movff	?___flmul+1,OledApi_printNum@num+1
  2272  0011B6  C003  F027         	movff	?___flmul+2,OledApi_printNum@num+2
  2273  0011BA  C004  F028         	movff	?___flmul+3,OledApi_printNum@num+3
  2274  0011BE                     
  2275                           ;OledApi.c: 248:     }
  2276  0011BE  4A3E               	infsnz	OledApi_printNum@i^0,f,c
  2277  0011C0  2A3F               	incf	(OledApi_printNum@i+1)^0,f,c
  2278  0011C2                     l2763:
  2279  0011C2  C029  F02A         	movff	OledApi_printNum@dec,??_OledApi_printNum
  2280  0011C6  6A2B               	clrf	(??_OledApi_printNum+1)^0,c
  2281  0011C8  BE2A               	btfsc	??_OledApi_printNum^0,7,c
  2282  0011CA  062B               	decf	(??_OledApi_printNum+1)^0,f,c
  2283  0011CC  502A               	movf	??_OledApi_printNum^0,w,c
  2284  0011CE  5C3E               	subwf	OledApi_printNum@i^0,w,c
  2285  0011D0  503F               	movf	(OledApi_printNum@i+1)^0,w,c
  2286  0011D2  0A80               	xorlw	128
  2287  0011D4  6E2C               	movwf	(??_OledApi_printNum+2)^0,c
  2288  0011D6  502B               	movf	(??_OledApi_printNum+1)^0,w,c
  2289  0011D8  0A80               	xorlw	128
  2290  0011DA  582C               	subwfb	(??_OledApi_printNum+2)^0,w,c
  2291  0011DC  A0D8               	btfss	status,0,c
  2292  0011DE  EFF3  F008         	goto	u2571
  2293  0011E2  EFF5  F008         	goto	u2570
  2294  0011E6                     u2571:
  2295  0011E6  EFC5  F008         	goto	l2759
  2296  0011EA                     u2570:
  2297  0011EA                     
  2298                           ;OledApi.c: 249:     fract = (int32_t) num;
  2299  0011EA  C025  F001         	movff	OledApi_printNum@num,___fltol@f1
  2300  0011EE  C026  F002         	movff	OledApi_printNum@num+1,___fltol@f1+1
  2301  0011F2  C027  F003         	movff	OledApi_printNum@num+2,___fltol@f1+2
  2302  0011F6  C028  F004         	movff	OledApi_printNum@num+3,___fltol@f1+3
  2303  0011FA  ECCC  F00C         	call	___fltol	;wreg free
  2304  0011FE  C001  F040         	movff	?___fltol,OledApi_printNum@fract
  2305  001202  C002  F041         	movff	?___fltol+1,OledApi_printNum@fract+1
  2306  001206  C003  F042         	movff	?___fltol+2,OledApi_printNum@fract+2
  2307  00120A  C004  F043         	movff	?___fltol+3,OledApi_printNum@fract+3
  2308  00120E                     
  2309                           ;OledApi.c: 251:     if(dec == 0)
  2310  00120E  5029               	movf	OledApi_printNum@dec^0,w,c
  2311  001210  A4D8               	btfss	status,2,c
  2312  001212  EF0D  F009         	goto	u2581
  2313  001216  EF0F  F009         	goto	u2580
  2314  00121A                     u2581:
  2315  00121A  EF31  F009         	goto	l2775
  2316  00121E                     u2580:
  2317  00121E                     
  2318                           ;OledApi.c: 252:     {;OledApi.c: 253:         if(num >= 0.5)
  2319  00121E  C025  F019         	movff	OledApi_printNum@num,___flge@ff1
  2320  001222  C026  F01A         	movff	OledApi_printNum@num+1,___flge@ff1+1
  2321  001226  C027  F01B         	movff	OledApi_printNum@num+2,___flge@ff1+2
  2322  00122A  C028  F01C         	movff	OledApi_printNum@num+3,___flge@ff1+3
  2323  00122E  0E00               	movlw	0
  2324  001230  6E1D               	movwf	___flge@ff2^0,c
  2325  001232  0E00               	movlw	0
  2326  001234  6E1E               	movwf	(___flge@ff2+1)^0,c
  2327  001236  0E00               	movlw	0
  2328  001238  6E1F               	movwf	(___flge@ff2+2)^0,c
  2329  00123A  0E3F               	movlw	63
  2330  00123C  6E20               	movwf	(___flge@ff2+3)^0,c
  2331  00123E  EC4F  F00D         	call	___flge	;wreg free
  2332  001242  A0D8               	btfss	status,0,c
  2333  001244  EF26  F009         	goto	u2591
  2334  001248  EF28  F009         	goto	u2590
  2335  00124C                     u2591:
  2336  00124C  EF2E  F009         	goto	l2773
  2337  001250                     u2590:
  2338  001250                     
  2339                           ;OledApi.c: 254:         {;OledApi.c: 255:             whole++;
  2340  001250  0E01               	movlw	1
  2341  001252  2644               	addwf	OledApi_printNum@whole^0,f,c
  2342  001254  0E00               	movlw	0
  2343  001256  2245               	addwfc	(OledApi_printNum@whole+1)^0,f,c
  2344  001258  2246               	addwfc	(OledApi_printNum@whole+2)^0,f,c
  2345  00125A  2247               	addwfc	(OledApi_printNum@whole+3)^0,f,c
  2346  00125C                     l2773:
  2347                           
  2348                           ;OledApi.c: 257:         dec = -1;
  2349  00125C  6829               	setf	OledApi_printNum@dec^0,c
  2350                           
  2351                           ;OledApi.c: 258:     }
  2352  00125E  EFB6  F009         	goto	l2787
  2353  001262                     l2775:
  2354  001262  C040  F001         	movff	OledApi_printNum@fract,___xxtofl@val
  2355  001266  C041  F002         	movff	OledApi_printNum@fract+1,___xxtofl@val+1
  2356  00126A  C042  F003         	movff	OledApi_printNum@fract+2,___xxtofl@val+2
  2357  00126E  C043  F004         	movff	OledApi_printNum@fract+3,___xxtofl@val+3
  2358  001272  0E01               	movlw	1
  2359  001274  EC6C  F00B         	call	___xxtofl
  2360  001278  C001  F015         	movff	?___xxtofl,___flsub@a
  2361  00127C  C002  F016         	movff	?___xxtofl+1,___flsub@a+1
  2362  001280  C003  F017         	movff	?___xxtofl+2,___flsub@a+2
  2363  001284  C004  F018         	movff	?___xxtofl+3,___flsub@a+3
  2364  001288  C025  F011         	movff	OledApi_printNum@num,___flsub@b
  2365  00128C  C026  F012         	movff	OledApi_printNum@num+1,___flsub@b+1
  2366  001290  C027  F013         	movff	OledApi_printNum@num+2,___flsub@b+2
  2367  001294  C028  F014         	movff	OledApi_printNum@num+3,___flsub@b+3
  2368  001298  ECD3  F010         	call	___flsub	;wreg free
  2369  00129C  C011  F019         	movff	?___flsub,___flge@ff1
  2370  0012A0  C012  F01A         	movff	?___flsub+1,___flge@ff1+1
  2371  0012A4  C013  F01B         	movff	?___flsub+2,___flge@ff1+2
  2372  0012A8  C014  F01C         	movff	?___flsub+3,___flge@ff1+3
  2373  0012AC  0E00               	movlw	0
  2374  0012AE  6E1D               	movwf	___flge@ff2^0,c
  2375  0012B0  0E00               	movlw	0
  2376  0012B2  6E1E               	movwf	(___flge@ff2+1)^0,c
  2377  0012B4  0E00               	movlw	0
  2378  0012B6  6E1F               	movwf	(___flge@ff2+2)^0,c
  2379  0012B8  0E3F               	movlw	63
  2380  0012BA  6E20               	movwf	(___flge@ff2+3)^0,c
  2381  0012BC  EC4F  F00D         	call	___flge	;wreg free
  2382  0012C0  A0D8               	btfss	status,0,c
  2383  0012C2  EF65  F009         	goto	u2601
  2384  0012C6  EF67  F009         	goto	u2600
  2385  0012CA                     u2601:
  2386  0012CA  EFB6  F009         	goto	l2787
  2387  0012CE                     u2600:
  2388  0012CE                     
  2389                           ;OledApi.c: 260:     {;OledApi.c: 261:         fract++;
  2390  0012CE  0E01               	movlw	1
  2391  0012D0  2640               	addwf	OledApi_printNum@fract^0,f,c
  2392  0012D2  0E00               	movlw	0
  2393  0012D4  2241               	addwfc	(OledApi_printNum@fract+1)^0,f,c
  2394  0012D6  2242               	addwfc	(OledApi_printNum@fract+2)^0,f,c
  2395  0012D8  2243               	addwfc	(OledApi_printNum@fract+3)^0,f,c
  2396  0012DA  EFB6  F009         	goto	l2787
  2397  0012DE                     l2779:
  2398                           
  2399                           ;OledApi.c: 265:     {;OledApi.c: 266:         if(c == 0) exit(1);
  2400  0012DE  5048               	movf	OledApi_printNum@c^0,w,c
  2401  0012E0  1049               	iorwf	(OledApi_printNum@c+1)^0,w,c
  2402  0012E2  A4D8               	btfss	status,2,c
  2403  0012E4  EF76  F009         	goto	u2611
  2404  0012E8  EF78  F009         	goto	u2610
  2405  0012EC                     u2611:
  2406  0012EC  EF7E  F009         	goto	l2783
  2407  0012F0                     u2610:
  2408  0012F0  0E00               	movlw	0
  2409  0012F2  6E0C               	movwf	(exit@code+1)^0,c
  2410  0012F4  0E01               	movlw	1
  2411  0012F6  6E0B               	movwf	exit@code^0,c
  2412  0012F8  EC2A  F012         	call	_exit	;wreg free
  2413  0012FC                     l2783:
  2414                           
  2415                           ;OledApi.c: 267:         s[--c] = '0' + (fract % 10);
  2416  0012FC  0648               	decf	OledApi_printNum@c^0,f,c
  2417  0012FE  A0D8               	btfss	status,0,c
  2418  001300  0649               	decf	(OledApi_printNum@c+1)^0,f,c
  2419  001302  0E2D               	movlw	low OledApi_printNum@s
  2420  001304  2448               	addwf	OledApi_printNum@c^0,w,c
  2421  001306  6ED9               	movwf	fsr2l,c
  2422  001308  0E00               	movlw	high OledApi_printNum@s
  2423  00130A  2049               	addwfc	(OledApi_printNum@c+1)^0,w,c
  2424  00130C  6EDA               	movwf	fsr2h,c
  2425  00130E  C040  F001         	movff	OledApi_printNum@fract,___almod@dividend
  2426  001312  C041  F002         	movff	OledApi_printNum@fract+1,___almod@dividend+1
  2427  001316  C042  F003         	movff	OledApi_printNum@fract+2,___almod@dividend+2
  2428  00131A  C043  F004         	movff	OledApi_printNum@fract+3,___almod@dividend+3
  2429  00131E  0E0A               	movlw	10
  2430  001320  6E05               	movwf	___almod@divisor^0,c
  2431  001322  0E00               	movlw	0
  2432  001324  6E06               	movwf	(___almod@divisor+1)^0,c
  2433  001326  0E00               	movlw	0
  2434  001328  6E07               	movwf	(___almod@divisor+2)^0,c
  2435  00132A  0E00               	movlw	0
  2436  00132C  6E08               	movwf	(___almod@divisor+3)^0,c
  2437  00132E  ECD1  F00D         	call	___almod	;wreg free
  2438  001332  5001               	movf	?___almod^0,w,c
  2439  001334  0F30               	addlw	48
  2440  001336  6EDF               	movwf	indf2,c
  2441  001338                     
  2442                           ;OledApi.c: 268:         fract /= 10;
  2443  001338  C040  F001         	movff	OledApi_printNum@fract,___aldiv@dividend
  2444  00133C  C041  F002         	movff	OledApi_printNum@fract+1,___aldiv@dividend+1
  2445  001340  C042  F003         	movff	OledApi_printNum@fract+2,___aldiv@dividend+2
  2446  001344  C043  F004         	movff	OledApi_printNum@fract+3,___aldiv@dividend+3
  2447  001348  0E0A               	movlw	10
  2448  00134A  6E05               	movwf	___aldiv@divisor^0,c
  2449  00134C  0E00               	movlw	0
  2450  00134E  6E06               	movwf	(___aldiv@divisor+1)^0,c
  2451  001350  0E00               	movlw	0
  2452  001352  6E07               	movwf	(___aldiv@divisor+2)^0,c
  2453  001354  0E00               	movlw	0
  2454  001356  6E08               	movwf	(___aldiv@divisor+3)^0,c
  2455  001358  EC46  F00C         	call	___aldiv	;wreg free
  2456  00135C  C001  F040         	movff	?___aldiv,OledApi_printNum@fract
  2457  001360  C002  F041         	movff	?___aldiv+1,OledApi_printNum@fract+1
  2458  001364  C003  F042         	movff	?___aldiv+2,OledApi_printNum@fract+2
  2459  001368  C004  F043         	movff	?___aldiv+3,OledApi_printNum@fract+3
  2460  00136C                     l2787:
  2461                           
  2462                           ;OledApi.c: 264:     while(dec-- > 0)
  2463  00136C  0629               	decf	OledApi_printNum@dec^0,f,c
  2464  00136E  2829               	incf	OledApi_printNum@dec^0,w,c
  2465  001370  0A80               	xorlw	128
  2466  001372  0F7F               	addlw	-129
  2467  001374  B0D8               	btfsc	status,0,c
  2468  001376  EFBF  F009         	goto	u2621
  2469  00137A  EFC1  F009         	goto	u2620
  2470  00137E                     u2621:
  2471  00137E  EF6F  F009         	goto	l2779
  2472  001382                     u2620:
  2473  001382                     
  2474                           ;OledApi.c: 270:     if(dec == -1)
  2475  001382  2829               	incf	OledApi_printNum@dec^0,w,c
  2476  001384  A4D8               	btfss	status,2,c
  2477  001386  EFC7  F009         	goto	u2631
  2478  00138A  EFC9  F009         	goto	u2630
  2479  00138E                     u2631:
  2480  00138E  EFE3  F009         	goto	l2797
  2481  001392                     u2630:
  2482  001392                     
  2483                           ;OledApi.c: 271:     {;OledApi.c: 272:         if(c == 0) exit(1);
  2484  001392  5048               	movf	OledApi_printNum@c^0,w,c
  2485  001394  1049               	iorwf	(OledApi_printNum@c+1)^0,w,c
  2486  001396  A4D8               	btfss	status,2,c
  2487  001398  EFD0  F009         	goto	u2641
  2488  00139C  EFD2  F009         	goto	u2640
  2489  0013A0                     u2641:
  2490  0013A0  EFD8  F009         	goto	l2795
  2491  0013A4                     u2640:
  2492  0013A4  0E00               	movlw	0
  2493  0013A6  6E0C               	movwf	(exit@code+1)^0,c
  2494  0013A8  0E01               	movlw	1
  2495  0013AA  6E0B               	movwf	exit@code^0,c
  2496  0013AC  EC2A  F012         	call	_exit	;wreg free
  2497  0013B0                     l2795:
  2498                           
  2499                           ;OledApi.c: 273:         s[--c] = '.';
  2500  0013B0  0648               	decf	OledApi_printNum@c^0,f,c
  2501  0013B2  A0D8               	btfss	status,0,c
  2502  0013B4  0649               	decf	(OledApi_printNum@c+1)^0,f,c
  2503  0013B6  0E2D               	movlw	low OledApi_printNum@s
  2504  0013B8  2448               	addwf	OledApi_printNum@c^0,w,c
  2505  0013BA  6ED9               	movwf	fsr2l,c
  2506  0013BC  0E00               	movlw	high OledApi_printNum@s
  2507  0013BE  2049               	addwfc	(OledApi_printNum@c+1)^0,w,c
  2508  0013C0  6EDA               	movwf	fsr2h,c
  2509  0013C2  0E2E               	movlw	46
  2510  0013C4  6EDF               	movwf	indf2,c
  2511  0013C6                     l2797:
  2512                           
  2513                           ;OledApi.c: 277:     {;OledApi.c: 278:         if(c == 0) exit(1);
  2514  0013C6  5048               	movf	OledApi_printNum@c^0,w,c
  2515  0013C8  1049               	iorwf	(OledApi_printNum@c+1)^0,w,c
  2516  0013CA  A4D8               	btfss	status,2,c
  2517  0013CC  EFEA  F009         	goto	u2651
  2518  0013D0  EFEC  F009         	goto	u2650
  2519  0013D4                     u2651:
  2520  0013D4  EFF2  F009         	goto	l2801
  2521  0013D8                     u2650:
  2522  0013D8  0E00               	movlw	0
  2523  0013DA  6E0C               	movwf	(exit@code+1)^0,c
  2524  0013DC  0E01               	movlw	1
  2525  0013DE  6E0B               	movwf	exit@code^0,c
  2526  0013E0  EC2A  F012         	call	_exit	;wreg free
  2527  0013E4                     l2801:
  2528                           
  2529                           ;OledApi.c: 279:         s[--c] = '0' + (whole % 10);
  2530  0013E4  0648               	decf	OledApi_printNum@c^0,f,c
  2531  0013E6  A0D8               	btfss	status,0,c
  2532  0013E8  0649               	decf	(OledApi_printNum@c+1)^0,f,c
  2533  0013EA  0E2D               	movlw	low OledApi_printNum@s
  2534  0013EC  2448               	addwf	OledApi_printNum@c^0,w,c
  2535  0013EE  6ED9               	movwf	fsr2l,c
  2536  0013F0  0E00               	movlw	high OledApi_printNum@s
  2537  0013F2  2049               	addwfc	(OledApi_printNum@c+1)^0,w,c
  2538  0013F4  6EDA               	movwf	fsr2h,c
  2539  0013F6  C044  F001         	movff	OledApi_printNum@whole,___almod@dividend
  2540  0013FA  C045  F002         	movff	OledApi_printNum@whole+1,___almod@dividend+1
  2541  0013FE  C046  F003         	movff	OledApi_printNum@whole+2,___almod@dividend+2
  2542  001402  C047  F004         	movff	OledApi_printNum@whole+3,___almod@dividend+3
  2543  001406  0E0A               	movlw	10
  2544  001408  6E05               	movwf	___almod@divisor^0,c
  2545  00140A  0E00               	movlw	0
  2546  00140C  6E06               	movwf	(___almod@divisor+1)^0,c
  2547  00140E  0E00               	movlw	0
  2548  001410  6E07               	movwf	(___almod@divisor+2)^0,c
  2549  001412  0E00               	movlw	0
  2550  001414  6E08               	movwf	(___almod@divisor+3)^0,c
  2551  001416  ECD1  F00D         	call	___almod	;wreg free
  2552  00141A  5001               	movf	?___almod^0,w,c
  2553  00141C  0F30               	addlw	48
  2554  00141E  6EDF               	movwf	indf2,c
  2555  001420                     
  2556                           ;OledApi.c: 280:         whole /= 10;
  2557  001420  C044  F001         	movff	OledApi_printNum@whole,___aldiv@dividend
  2558  001424  C045  F002         	movff	OledApi_printNum@whole+1,___aldiv@dividend+1
  2559  001428  C046  F003         	movff	OledApi_printNum@whole+2,___aldiv@dividend+2
  2560  00142C  C047  F004         	movff	OledApi_printNum@whole+3,___aldiv@dividend+3
  2561  001430  0E0A               	movlw	10
  2562  001432  6E05               	movwf	___aldiv@divisor^0,c
  2563  001434  0E00               	movlw	0
  2564  001436  6E06               	movwf	(___aldiv@divisor+1)^0,c
  2565  001438  0E00               	movlw	0
  2566  00143A  6E07               	movwf	(___aldiv@divisor+2)^0,c
  2567  00143C  0E00               	movlw	0
  2568  00143E  6E08               	movwf	(___aldiv@divisor+3)^0,c
  2569  001440  EC46  F00C         	call	___aldiv	;wreg free
  2570  001444  C001  F044         	movff	?___aldiv,OledApi_printNum@whole
  2571  001448  C002  F045         	movff	?___aldiv+1,OledApi_printNum@whole+1
  2572  00144C  C003  F046         	movff	?___aldiv+2,OledApi_printNum@whole+2
  2573  001450  C004  F047         	movff	?___aldiv+3,OledApi_printNum@whole+3
  2574  001454                     
  2575                           ;OledApi.c: 281:     }while(whole > 0);
  2576  001454  BE47               	btfsc	(OledApi_printNum@whole+3)^0,7,c
  2577  001456  EF39  F00A         	goto	u2660
  2578  00145A  5047               	movf	(OledApi_printNum@whole+3)^0,w,c
  2579  00145C  1046               	iorwf	(OledApi_printNum@whole+2)^0,w,c
  2580  00145E  1045               	iorwf	(OledApi_printNum@whole+1)^0,w,c
  2581  001460  E106               	bnz	u2661
  2582  001462  0444               	decf	OledApi_printNum@whole^0,w,c
  2583  001464  B0D8               	btfsc	status,0,c
  2584  001466  EF37  F00A         	goto	u2661
  2585  00146A  EF39  F00A         	goto	u2660
  2586  00146E                     u2661:
  2587  00146E  EFE3  F009         	goto	l2797
  2588  001472                     u2660:
  2589  001472                     
  2590                           ;OledApi.c: 283:     if(num < 0)
  2591  001472  BE28               	btfsc	(OledApi_printNum@num+3)^0,7,c
  2592  001474  EF40  F00A         	goto	u2670
  2593  001478  EF3E  F00A         	goto	u2671
  2594  00147C                     u2671:
  2595  00147C  EF5A  F00A         	goto	l2815
  2596  001480                     u2670:
  2597  001480                     
  2598                           ;OledApi.c: 284:     {;OledApi.c: 285:         if(c == 0) exit(1);
  2599  001480  5048               	movf	OledApi_printNum@c^0,w,c
  2600  001482  1049               	iorwf	(OledApi_printNum@c+1)^0,w,c
  2601  001484  A4D8               	btfss	status,2,c
  2602  001486  EF47  F00A         	goto	u2681
  2603  00148A  EF49  F00A         	goto	u2680
  2604  00148E                     u2681:
  2605  00148E  EF4F  F00A         	goto	l2813
  2606  001492                     u2680:
  2607  001492  0E00               	movlw	0
  2608  001494  6E0C               	movwf	(exit@code+1)^0,c
  2609  001496  0E01               	movlw	1
  2610  001498  6E0B               	movwf	exit@code^0,c
  2611  00149A  EC2A  F012         	call	_exit	;wreg free
  2612  00149E                     l2813:
  2613                           
  2614                           ;OledApi.c: 286:         s[--c] = '-';
  2615  00149E  0648               	decf	OledApi_printNum@c^0,f,c
  2616  0014A0  A0D8               	btfss	status,0,c
  2617  0014A2  0649               	decf	(OledApi_printNum@c+1)^0,f,c
  2618  0014A4  0E2D               	movlw	low OledApi_printNum@s
  2619  0014A6  2448               	addwf	OledApi_printNum@c^0,w,c
  2620  0014A8  6ED9               	movwf	fsr2l,c
  2621  0014AA  0E00               	movlw	high OledApi_printNum@s
  2622  0014AC  2049               	addwfc	(OledApi_printNum@c+1)^0,w,c
  2623  0014AE  6EDA               	movwf	fsr2h,c
  2624  0014B0  0E2D               	movlw	45
  2625  0014B2  6EDF               	movwf	indf2,c
  2626  0014B4                     l2815:
  2627                           
  2628                           ;OledApi.c: 289:     writeStr(s+c, 16-c);
  2629  0014B4  0E2D               	movlw	low OledApi_printNum@s
  2630  0014B6  2448               	addwf	OledApi_printNum@c^0,w,c
  2631  0014B8  6E20               	movwf	writeStr@value^0,c
  2632  0014BA  0E00               	movlw	high OledApi_printNum@s
  2633  0014BC  2049               	addwfc	(OledApi_printNum@c+1)^0,w,c
  2634  0014BE  6E21               	movwf	(writeStr@value+1)^0,c
  2635  0014C0  5048               	movf	OledApi_printNum@c^0,w,c
  2636  0014C2  0810               	sublw	16
  2637  0014C4  6E22               	movwf	writeStr@len^0,c
  2638  0014C6  EC1F  F012         	call	_writeStr	;wreg free
  2639  0014CA  0012               	return		;funcret
  2640  0014CC                     __end_of_OledApi_printNum:
  2641                           	opt callstack 0
  2642                           
  2643 ;; *************** function _writeStr *****************
  2644 ;; Defined at:
  2645 ;;		line 324 in file "OledApi.c"
  2646 ;; Parameters:    Size  Location     Type
  2647 ;;  value           2   31[COMRAM] PTR const unsigned char 
  2648 ;;		 -> OledApi_printNum@s(17), ?_OledApi_printf(1), STR_1(3), 
  2649 ;;  len             1   33[COMRAM] unsigned char 
  2650 ;; Auto vars:     Size  Location     Type
  2651 ;;		None
  2652 ;; Return value:  Size  Location     Type
  2653 ;;                  1    wreg      void 
  2654 ;; Registers used:
  2655 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2656 ;; Tracked objects:
  2657 ;;		On entry : 0/0
  2658 ;;		On exit  : 0/0
  2659 ;;		Unchanged: 0/0
  2660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2661 ;;      Params:         3       0       0       0       0       0       0       0       0
  2662 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2663 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2664 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2665 ;;Total ram usage:        3 bytes
  2666 ;; Hardware stack levels used:    1
  2667 ;; Hardware stack levels required when called:    4
  2668 ;; This function calls:
  2669 ;;		_send
  2670 ;; This function is called by:
  2671 ;;		_OledApi_printNum
  2672 ;;		_OledApi_printStr
  2673 ;; This function uses a non-reentrant model
  2674 ;;
  2675                           
  2676                           	psect	text17
  2677  00243E                     __ptext17:
  2678                           	opt callstack 0
  2679  00243E                     _writeStr:
  2680                           	opt callstack 24
  2681  00243E                     
  2682                           ;OledApi.c: 324: static void writeStr(const uint8_t *value, uint8_t len);OledApi.c: 325:
      +                           {;OledApi.c: 326:  send(1, value, len);
  2683  00243E  C020  F013         	movff	writeStr@value,send@buf
  2684  002442  C021  F014         	movff	writeStr@value+1,send@buf+1
  2685  002446  C022  F015         	movff	writeStr@len,send@count
  2686  00244A  6A16               	clrf	(send@count+1)^0,c
  2687  00244C  0E01               	movlw	1
  2688  00244E  ECB9  F00E         	call	_send
  2689  002452  0012               	return		;funcret
  2690  002454                     __end_of_writeStr:
  2691                           	opt callstack 0
  2692                           
  2693 ;; *************** function _send *****************
  2694 ;; Defined at:
  2695 ;;		line 337 in file "OledApi.c"
  2696 ;; Parameters:    Size  Location     Type
  2697 ;;  mode            1    wreg     unsigned char 
  2698 ;;  buf             2   18[COMRAM] PTR void 
  2699 ;;		 -> write@value(1), command@value(1), OledApi_printNum@s(17), ?_OledApi_printf(1), 
  2700 ;;		 -> STR_1(3), 
  2701 ;;  count           2   20[COMRAM] unsigned int 
  2702 ;; Auto vars:     Size  Location     Type
  2703 ;;  mode            1   23[COMRAM] unsigned char 
  2704 ;;  word            4   24[COMRAM] unsigned long 
  2705 ;;  p               2   28[COMRAM] PTR unsigned char 
  2706 ;;		 -> write@value(1), command@value(1), OledApi_printNum@s(17), ?_OledApi_printf(1), 
  2707 ;;		 -> STR_1(3), 
  2708 ;;  head_sent       1   30[COMRAM] unsigned char 
  2709 ;; Return value:  Size  Location     Type
  2710 ;;                  1    wreg      void 
  2711 ;; Registers used:
  2712 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2713 ;; Tracked objects:
  2714 ;;		On entry : 0/0
  2715 ;;		On exit  : 0/0
  2716 ;;		Unchanged: 0/0
  2717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2718 ;;      Params:         4       0       0       0       0       0       0       0       0
  2719 ;;      Locals:         8       0       0       0       0       0       0       0       0
  2720 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2721 ;;      Totals:        13       0       0       0       0       0       0       0       0
  2722 ;;Total ram usage:       13 bytes
  2723 ;; Hardware stack levels used:    1
  2724 ;; Hardware stack levels required when called:    3
  2725 ;; This function calls:
  2726 ;;		_SPI_Api_begin
  2727 ;;		_SPI_Api_end
  2728 ;;		_SPI_Api_sendBit
  2729 ;;		_SPI_Api_sendWord
  2730 ;;		_SPI_Api_setSpiDevice
  2731 ;; This function is called by:
  2732 ;;		_command
  2733 ;;		_write
  2734 ;;		_writeStr
  2735 ;; This function uses a non-reentrant model
  2736 ;;
  2737                           
  2738                           	psect	text18
  2739  001D72                     __ptext18:
  2740                           	opt callstack 0
  2741  001D72                     _send:
  2742                           	opt callstack 24
  2743                           
  2744                           ;incstack = 0
  2745                           ;send@mode stored from wreg
  2746  001D72  6E18               	movwf	send@mode^0,c
  2747  001D74                     
  2748                           ;OledApi.c: 338:  if (count == 0)
  2749  001D74  5015               	movf	send@count^0,w,c
  2750  001D76  1016               	iorwf	(send@count+1)^0,w,c
  2751  001D78  A4D8               	btfss	status,2,c
  2752  001D7A  EFC1  F00E         	goto	u1491
  2753  001D7E  EFC3  F00E         	goto	u1490
  2754  001D82                     u1491:
  2755  001D82  EFC5  F00E         	goto	l2069
  2756  001D86                     u1490:
  2757  001D86  EF27  F00F         	goto	l236
  2758  001D8A                     l2069:
  2759                           
  2760                           ;OledApi.c: 341:     uint32_t word;;OledApi.c: 342:  uint8_t head_sent = 0;
  2761  001D8A  0E00               	movlw	0
  2762  001D8C  6E1F               	movwf	send@head_sent^0,c
  2763  001D8E                     
  2764                           ;OledApi.c: 346:     SPI_Api_setSpiDevice(__SPIconfig);
  2765  001D8E  C077  F006         	movff	___SPIconfig,SPI_Api_setSpiDevice@_config
  2766  001D92  C078  F007         	movff	___SPIconfig+1,SPI_Api_setSpiDevice@_config+1
  2767  001D96  C079  F008         	movff	___SPIconfig+2,SPI_Api_setSpiDevice@_config+2
  2768  001D9A  EC22  F010         	call	_SPI_Api_setSpiDevice	;wreg free
  2769  001D9E                     
  2770                           ;OledApi.c: 347:     SPI_Api_begin();
  2771  001D9E  EC13  F012         	call	_SPI_Api_begin	;wreg free
  2772  001DA2                     
  2773                           ;OledApi.c: 350:  uint8_t *p = (uint8_t *)buf;
  2774  001DA2  C013  F01D         	movff	send@buf,send@p
  2775  001DA6  C014  F01E         	movff	send@buf+1,send@p+1
  2776  001DAA                     l2077:
  2777                           
  2778                           ;OledApi.c: 355:         word = 0;
  2779  001DAA  0E00               	movlw	0
  2780  001DAC  6E19               	movwf	send@word^0,c
  2781  001DAE  0E00               	movlw	0
  2782  001DB0  6E1A               	movwf	(send@word+1)^0,c
  2783  001DB2  0E00               	movlw	0
  2784  001DB4  6E1B               	movwf	(send@word+2)^0,c
  2785  001DB6  0E00               	movlw	0
  2786  001DB8  6E1C               	movwf	(send@word+3)^0,c
  2787  001DBA                     
  2788                           ;OledApi.c: 356:   if (head_sent == 0)
  2789  001DBA  501F               	movf	send@head_sent^0,w,c
  2790  001DBC  A4D8               	btfss	status,2,c
  2791  001DBE  EFE3  F00E         	goto	u1501
  2792  001DC2  EFE5  F00E         	goto	u1500
  2793  001DC6                     u1501:
  2794  001DC6  EFFA  F00E         	goto	l2089
  2795  001DCA                     u1500:
  2796  001DCA                     
  2797                           ;OledApi.c: 357:         {;OledApi.c: 358:             if(mode == 1)
  2798  001DCA  0418               	decf	send@mode^0,w,c
  2799  001DCC  A4D8               	btfss	status,2,c
  2800  001DCE  EFEB  F00E         	goto	u1511
  2801  001DD2  EFED  F00E         	goto	u1510
  2802  001DD6                     u1511:
  2803  001DD6  EFF2  F00E         	goto	l2085
  2804  001DDA                     u1510:
  2805  001DDA                     
  2806                           ;OledApi.c: 359:             {;OledApi.c: 360:                 SPI_Api_sendBit((uint8_t)
      +                          1);
  2807  001DDA  0E01               	movlw	1
  2808  001DDC  EC16  F011         	call	_SPI_Api_sendBit
  2809                           
  2810                           ;OledApi.c: 361:             }
  2811  001DE0  EFF5  F00E         	goto	l240
  2812  001DE4                     l2085:
  2813                           
  2814                           ;OledApi.c: 363:             {;OledApi.c: 364:                 SPI_Api_sendBit((uint8_t)
      +                          0);
  2815  001DE4  0E00               	movlw	0
  2816  001DE6  EC16  F011         	call	_SPI_Api_sendBit
  2817  001DEA                     l240:
  2818                           
  2819                           ;OledApi.c: 366:             SPI_Api_sendBit((uint8_t)0);
  2820  001DEA  0E00               	movlw	0
  2821  001DEC  EC16  F011         	call	_SPI_Api_sendBit
  2822  001DF0                     
  2823                           ;OledApi.c: 367:             head_sent = 1;
  2824  001DF0  0E01               	movlw	1
  2825  001DF2  6E1F               	movwf	send@head_sent^0,c
  2826  001DF4                     l2089:
  2827                           
  2828                           ;OledApi.c: 371:   word |= (uint8_t) *p;
  2829  001DF4  C01D  FFF6         	movff	send@p,tblptrl
  2830  001DF8  C01E  FFF7         	movff	send@p+1,tblptrh
  2831  001DFC  6AF8               	clrf	tblptru,c
  2832  001DFE  0E07               	movlw	(high __ramtop+-1)
  2833  001E00  64F7               	cpfsgt	tblptrh,c
  2834  001E02  D003               	bra	u1527
  2835  001E04  0008               	tblrd		*
  2836  001E06  50F5               	movf	tablat,w,c
  2837  001E08  D005               	bra	u1520
  2838  001E0A                     u1527:
  2839  001E0A  CFF6 FFE9          	movff	tblptrl,fsr0l
  2840  001E0E  CFF7 FFEA          	movff	tblptrh,fsr0h
  2841  001E12  50EF               	movf	indf0,w,c
  2842  001E14                     u1520:
  2843  001E14  6E17               	movwf	??_send^0,c
  2844  001E16  5017               	movf	??_send^0,w,c
  2845  001E18  1219               	iorwf	send@word^0,f,c
  2846  001E1A                     
  2847                           ;OledApi.c: 374:         SPI_Api_sendWord(word);
  2848  001E1A  C019  F007         	movff	send@word,SPI_Api_sendWord@word
  2849  001E1E  C01A  F008         	movff	send@word+1,SPI_Api_sendWord@word+1
  2850  001E22  C01B  F009         	movff	send@word+2,SPI_Api_sendWord@word+2
  2851  001E26  C01C  F00A         	movff	send@word+3,SPI_Api_sendWord@word+3
  2852  001E2A  EC28  F00F         	call	_SPI_Api_sendWord	;wreg free
  2853  001E2E                     
  2854                           ;OledApi.c: 377:   p++;
  2855  001E2E  4A1D               	infsnz	send@p^0,f,c
  2856  001E30  2A1E               	incf	(send@p+1)^0,f,c
  2857  001E32                     
  2858                           ;OledApi.c: 378:  } while (--count > 0);
  2859  001E32  0615               	decf	send@count^0,f,c
  2860  001E34  A0D8               	btfss	status,0,c
  2861  001E36  0616               	decf	(send@count+1)^0,f,c
  2862  001E38  5015               	movf	send@count^0,w,c
  2863  001E3A  1016               	iorwf	(send@count+1)^0,w,c
  2864  001E3C  A4D8               	btfss	status,2,c
  2865  001E3E  EF23  F00F         	goto	u1531
  2866  001E42  EF25  F00F         	goto	u1530
  2867  001E46                     u1531:
  2868  001E46  EFD5  F00E         	goto	l2077
  2869  001E4A                     u1530:
  2870  001E4A                     
  2871                           ;OledApi.c: 382:     SPI_Api_end();
  2872  001E4A  EC07  F012         	call	_SPI_Api_end	;wreg free
  2873  001E4E                     l236:
  2874  001E4E  0012               	return		;funcret
  2875  001E50                     __end_of_send:
  2876                           	opt callstack 0
  2877                           
  2878 ;; *************** function _SPI_Api_setSpiDevice *****************
  2879 ;; Defined at:
  2880 ;;		line 32 in file "SPI_Api.c"
  2881 ;; Parameters:    Size  Location     Type
  2882 ;;  _config         3    5[COMRAM] struct .
  2883 ;; Auto vars:     Size  Location     Type
  2884 ;;  mask            1    8[COMRAM] unsigned char 
  2885 ;; Return value:  Size  Location     Type
  2886 ;;                  1    wreg      _Bool 
  2887 ;; Registers used:
  2888 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2889 ;; Tracked objects:
  2890 ;;		On entry : 0/0
  2891 ;;		On exit  : 0/0
  2892 ;;		Unchanged: 0/0
  2893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2894 ;;      Params:         3       0       0       0       0       0       0       0       0
  2895 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2896 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2897 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2898 ;;Total ram usage:        4 bytes
  2899 ;; Hardware stack levels used:    1
  2900 ;; Hardware stack levels required when called:    1
  2901 ;; This function calls:
  2902 ;;		_DIGITAL_WRITE
  2903 ;; This function is called by:
  2904 ;;		_send
  2905 ;;		_ADC_Api_config
  2906 ;; This function uses a non-reentrant model
  2907 ;;
  2908                           
  2909                           	psect	text19
  2910  002044                     __ptext19:
  2911                           	opt callstack 0
  2912  002044                     _SPI_Api_setSpiDevice:
  2913                           	opt callstack 25
  2914  002044                     
  2915                           ;SPI_Api.c: 32: _Bool SPI_Api_setSpiDevice(SPI_Api_pConfig _config);SPI_Api.c: 33: {;SPI
      +                          _Api.c: 34:     uint8_t mask;;SPI_Api.c: 35:     for(mask = 1; mask != _config.u8EnableP
      +                          in; mask <<= 1)
  2916  002044  0E01               	movlw	1
  2917  002046  6E09               	movwf	SPI_Api_setSpiDevice@mask^0,c
  2918  002048  EF34  F010         	goto	l288
  2919  00204C                     l2019:
  2920                           
  2921                           ;SPI_Api.c: 36:     {;SPI_Api.c: 38:         if(mask == 0x80)
  2922  00204C  0E80               	movlw	128
  2923  00204E  1809               	xorwf	SPI_Api_setSpiDevice@mask^0,w,c
  2924  002050  A4D8               	btfss	status,2,c
  2925  002052  EF2D  F010         	goto	u1411
  2926  002056  EF2F  F010         	goto	u1410
  2927  00205A                     u1411:
  2928  00205A  EF32  F010         	goto	l2025
  2929  00205E                     u1410:
  2930  00205E                     
  2931                           ;SPI_Api.c: 39:         {;SPI_Api.c: 40:             G_SPI_Api_u8Flags |= 0x02;
  2932  00205E  825F               	bsf	_G_SPI_Api_u8Flags^0,1,c
  2933  002060  EF59  F010         	goto	l291
  2934  002064                     l2025:
  2935                           
  2936                           ;SPI_Api.c: 43:     }
  2937  002064  90D8               	bcf	status,0,c
  2938  002066  3609               	rlcf	SPI_Api_setSpiDevice@mask^0,f,c
  2939  002068                     l288:
  2940  002068  5009               	movf	SPI_Api_setSpiDevice@mask^0,w,c
  2941  00206A  1806               	xorwf	SPI_Api_setSpiDevice@_config^0,w,c
  2942  00206C  A4D8               	btfss	status,2,c
  2943  00206E  EF3B  F010         	goto	u1421
  2944  002072  EF3D  F010         	goto	u1420
  2945  002076                     u1421:
  2946  002076  EF26  F010         	goto	l2019
  2947  00207A                     u1420:
  2948  00207A                     
  2949                           ;SPI_Api.c: 44:     if(!(_Bool)(G_SPI_Api_u8Flags & 0x04))
  2950  00207A  B45F               	btfsc	_G_SPI_Api_u8Flags^0,2,c
  2951  00207C  EF42  F010         	goto	u1431
  2952  002080  EF44  F010         	goto	u1430
  2953  002084                     u1431:
  2954  002084  EF48  F010         	goto	l293
  2955  002088                     u1430:
  2956  002088                     
  2957                           ;SPI_Api.c: 45:     {;SPI_Api.c: 46:         G_SPI_Api_u8Flags |= 0x02;
  2958  002088  825F               	bsf	_G_SPI_Api_u8Flags^0,1,c
  2959                           
  2960                           ;SPI_Api.c: 47:         G_SPI_Api_u8Flags |= 0x08;
  2961  00208A  865F               	bsf	_G_SPI_Api_u8Flags^0,3,c
  2962  00208C  EF59  F010         	goto	l291
  2963  002090                     l293:
  2964                           
  2965                           ;SPI_Api.c: 51:     __config = _config;
  2966  002090  C006  F082         	movff	SPI_Api_setSpiDevice@_config,___config
  2967  002094  C007  F083         	movff	SPI_Api_setSpiDevice@_config+1,___config+1
  2968  002098  C008  F084         	movff	SPI_Api_setSpiDevice@_config+2,___config+2
  2969  00209C                     
  2970                           ;SPI_Api.c: 52:     DIGITAL_WRITE(&LATC, __config.u8EnablePin, (uint8_t)1);
  2971  00209C  0E8B               	movlw	139
  2972  00209E  6E01               	movwf	DIGITAL_WRITE@port^0,c
  2973  0020A0  0E0F               	movlw	15
  2974  0020A2  6E02               	movwf	(DIGITAL_WRITE@port+1)^0,c
  2975  0020A4  C082  F003         	movff	___config,DIGITAL_WRITE@pin
  2976  0020A8  0E01               	movlw	1
  2977  0020AA  6E04               	movwf	DIGITAL_WRITE@val^0,c
  2978  0020AC  EC89  F011         	call	_DIGITAL_WRITE	;wreg free
  2979  0020B0                     
  2980                           ;SPI_Api.c: 53:     G_SPI_Api_u8Flags &= ~0x02;
  2981  0020B0  925F               	bcf	_G_SPI_Api_u8Flags^0,1,c
  2982  0020B2                     l291:
  2983  0020B2  0012               	return		;funcret
  2984  0020B4                     __end_of_SPI_Api_setSpiDevice:
  2985                           	opt callstack 0
  2986                           
  2987 ;; *************** function _SPI_Api_sendWord *****************
  2988 ;; Defined at:
  2989 ;;		line 83 in file "SPI_Api.c"
  2990 ;; Parameters:    Size  Location     Type
  2991 ;;  word            4    6[COMRAM] unsigned long 
  2992 ;; Auto vars:     Size  Location     Type
  2993 ;;  mask            4   14[COMRAM] unsigned long 
  2994 ;; Return value:  Size  Location     Type
  2995 ;;                  1    wreg      _Bool 
  2996 ;; Registers used:
  2997 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2998 ;; Tracked objects:
  2999 ;;		On entry : 0/0
  3000 ;;		On exit  : 0/0
  3001 ;;		Unchanged: 0/0
  3002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3003 ;;      Params:         4       0       0       0       0       0       0       0       0
  3004 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3005 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3006 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3007 ;;Total ram usage:       12 bytes
  3008 ;; Hardware stack levels used:    1
  3009 ;; Hardware stack levels required when called:    2
  3010 ;; This function calls:
  3011 ;;		_SPI_Api_sendBit
  3012 ;; This function is called by:
  3013 ;;		_send
  3014 ;;		_ADC_Api_config
  3015 ;; This function uses a non-reentrant model
  3016 ;;
  3017                           
  3018                           	psect	text20
  3019  001E50                     __ptext20:
  3020                           	opt callstack 0
  3021  001E50                     _SPI_Api_sendWord:
  3022                           	opt callstack 24
  3023  001E50                     
  3024                           ;SPI_Api.c: 83: _Bool SPI_Api_sendWord(uint32_t word);SPI_Api.c: 84: {;SPI_Api.c: 86:   
      +                            if((word >> (__config.u8SPIBits - 1)) > 0)
  3025  001E50  0100               	movlb	0	; () banked
  3026  001E52  0584               	decf	(___config+2)& (0+255),w,b
  3027  001E54  C007  F00B         	movff	SPI_Api_sendWord@word,??_SPI_Api_sendWord
  3028  001E58  C008  F00C         	movff	SPI_Api_sendWord@word+1,??_SPI_Api_sendWord+1
  3029  001E5C  C009  F00D         	movff	SPI_Api_sendWord@word+2,??_SPI_Api_sendWord+2
  3030  001E60  C00A  F00E         	movff	SPI_Api_sendWord@word+3,??_SPI_Api_sendWord+3
  3031  001E64  2AE8               	incf	wreg,f,c
  3032  001E66  EF3A  F00F         	goto	u1440
  3033  001E6A                     u1445:
  3034  001E6A  90D8               	bcf	status,0,c
  3035  001E6C  320E               	rrcf	(??_SPI_Api_sendWord+3)^0,f,c
  3036  001E6E  320D               	rrcf	(??_SPI_Api_sendWord+2)^0,f,c
  3037  001E70  320C               	rrcf	(??_SPI_Api_sendWord+1)^0,f,c
  3038  001E72  320B               	rrcf	??_SPI_Api_sendWord^0,f,c
  3039  001E74                     u1440:
  3040  001E74  2EE8               	decfsz	wreg,f,c
  3041  001E76  EF35  F00F         	goto	u1445
  3042  001E7A  500B               	movf	??_SPI_Api_sendWord^0,w,c
  3043  001E7C  100C               	iorwf	(??_SPI_Api_sendWord+1)^0,w,c
  3044  001E7E  100D               	iorwf	(??_SPI_Api_sendWord+2)^0,w,c
  3045  001E80  100E               	iorwf	(??_SPI_Api_sendWord+3)^0,w,c
  3046  001E82  B4D8               	btfsc	status,2,c
  3047  001E84  EF46  F00F         	goto	u1451
  3048  001E88  EF48  F00F         	goto	u1450
  3049  001E8C                     u1451:
  3050  001E8C  EF4A  F00F         	goto	l2047
  3051  001E90                     u1450:
  3052  001E90  EF95  F00F         	goto	l303
  3053  001E94                     l2047:
  3054                           
  3055                           ; BSR set to: 0
  3056                           ;SPI_Api.c: 90:     uint32_t mask = 1 << (__config.u8SPIBits - 1);
  3057  001E94  C084  F00B         	movff	___config+2,??_SPI_Api_sendWord
  3058  001E98  0EFF               	movlw	-1
  3059  001E9A  260B               	addwf	??_SPI_Api_sendWord^0,f,c
  3060  001E9C  0E01               	movlw	1
  3061  001E9E  6E0C               	movwf	(??_SPI_Api_sendWord+1)^0,c
  3062  001EA0  0E00               	movlw	0
  3063  001EA2  6E0D               	movwf	(??_SPI_Api_sendWord+2)^0,c
  3064  001EA4  2A0B               	incf	??_SPI_Api_sendWord^0,f,c
  3065  001EA6  EF58  F00F         	goto	u1464
  3066  001EAA                     u1465:
  3067  001EAA  90D8               	bcf	status,0,c
  3068  001EAC  360C               	rlcf	(??_SPI_Api_sendWord+1)^0,f,c
  3069  001EAE  360D               	rlcf	(??_SPI_Api_sendWord+2)^0,f,c
  3070  001EB0                     u1464:
  3071  001EB0  2E0B               	decfsz	??_SPI_Api_sendWord^0,f,c
  3072  001EB2  EF55  F00F         	goto	u1465
  3073  001EB6  C00C  F00F         	movff	??_SPI_Api_sendWord+1,SPI_Api_sendWord@mask
  3074  001EBA  C00D  F010         	movff	??_SPI_Api_sendWord+2,SPI_Api_sendWord@mask+1
  3075  001EBE  0E00               	movlw	0
  3076  001EC0  BE10               	btfsc	(SPI_Api_sendWord@mask+1)^0,7,c
  3077  001EC2  0EFF               	movlw	-1
  3078  001EC4  6E11               	movwf	(SPI_Api_sendWord@mask+2)^0,c
  3079  001EC6  6E12               	movwf	(SPI_Api_sendWord@mask+3)^0,c
  3080                           
  3081                           ;SPI_Api.c: 91:     while(mask > 0)
  3082  001EC8  EF8A  F00F         	goto	l2057
  3083  001ECC                     l2049:
  3084                           
  3085                           ;SPI_Api.c: 92:     {;SPI_Api.c: 93:         if((word & mask) > 0)
  3086  001ECC  500F               	movf	SPI_Api_sendWord@mask^0,w,c
  3087  001ECE  1407               	andwf	SPI_Api_sendWord@word^0,w,c
  3088  001ED0  6E0B               	movwf	??_SPI_Api_sendWord^0,c
  3089  001ED2  5010               	movf	(SPI_Api_sendWord@mask+1)^0,w,c
  3090  001ED4  1408               	andwf	(SPI_Api_sendWord@word+1)^0,w,c
  3091  001ED6  6E0C               	movwf	(??_SPI_Api_sendWord+1)^0,c
  3092  001ED8  5011               	movf	(SPI_Api_sendWord@mask+2)^0,w,c
  3093  001EDA  1409               	andwf	(SPI_Api_sendWord@word+2)^0,w,c
  3094  001EDC  6E0D               	movwf	(??_SPI_Api_sendWord+2)^0,c
  3095  001EDE  5012               	movf	(SPI_Api_sendWord@mask+3)^0,w,c
  3096  001EE0  140A               	andwf	(SPI_Api_sendWord@word+3)^0,w,c
  3097  001EE2  6E0E               	movwf	(??_SPI_Api_sendWord+3)^0,c
  3098  001EE4  500B               	movf	??_SPI_Api_sendWord^0,w,c
  3099  001EE6  100C               	iorwf	(??_SPI_Api_sendWord+1)^0,w,c
  3100  001EE8  100D               	iorwf	(??_SPI_Api_sendWord+2)^0,w,c
  3101  001EEA  100E               	iorwf	(??_SPI_Api_sendWord+3)^0,w,c
  3102  001EEC  B4D8               	btfsc	status,2,c
  3103  001EEE  EF7B  F00F         	goto	u1471
  3104  001EF2  EF7D  F00F         	goto	u1470
  3105  001EF6                     u1471:
  3106  001EF6  EF82  F00F         	goto	l2053
  3107  001EFA                     u1470:
  3108  001EFA                     
  3109                           ;SPI_Api.c: 94:         {;SPI_Api.c: 95:             SPI_Api_sendBit((uint8_t)1);
  3110  001EFA  0E01               	movlw	1
  3111  001EFC  EC16  F011         	call	_SPI_Api_sendBit
  3112                           
  3113                           ;SPI_Api.c: 96:         }
  3114  001F00  EF85  F00F         	goto	l2055
  3115  001F04                     l2053:
  3116                           
  3117                           ;SPI_Api.c: 98:         {;SPI_Api.c: 99:             SPI_Api_sendBit((uint8_t)0);
  3118  001F04  0E00               	movlw	0
  3119  001F06  EC16  F011         	call	_SPI_Api_sendBit
  3120  001F0A                     l2055:
  3121                           
  3122                           ;SPI_Api.c: 101:         mask >>= 1;
  3123  001F0A  90D8               	bcf	status,0,c
  3124  001F0C  3212               	rrcf	(SPI_Api_sendWord@mask+3)^0,f,c
  3125  001F0E  3211               	rrcf	(SPI_Api_sendWord@mask+2)^0,f,c
  3126  001F10  3210               	rrcf	(SPI_Api_sendWord@mask+1)^0,f,c
  3127  001F12  320F               	rrcf	SPI_Api_sendWord@mask^0,f,c
  3128  001F14                     l2057:
  3129                           
  3130                           ;SPI_Api.c: 91:     while(mask > 0)
  3131  001F14  500F               	movf	SPI_Api_sendWord@mask^0,w,c
  3132  001F16  1010               	iorwf	(SPI_Api_sendWord@mask+1)^0,w,c
  3133  001F18  1011               	iorwf	(SPI_Api_sendWord@mask+2)^0,w,c
  3134  001F1A  1012               	iorwf	(SPI_Api_sendWord@mask+3)^0,w,c
  3135  001F1C  A4D8               	btfss	status,2,c
  3136  001F1E  EF93  F00F         	goto	u1481
  3137  001F22  EF95  F00F         	goto	u1480
  3138  001F26                     u1481:
  3139  001F26  EF66  F00F         	goto	l2049
  3140  001F2A                     u1480:
  3141  001F2A                     l303:
  3142  001F2A  0012               	return		;funcret
  3143  001F2C                     __end_of_SPI_Api_sendWord:
  3144                           	opt callstack 0
  3145                           
  3146 ;; *************** function _SPI_Api_sendBit *****************
  3147 ;; Defined at:
  3148 ;;		line 121 in file "SPI_Api.c"
  3149 ;; Parameters:    Size  Location     Type
  3150 ;;  val             1    wreg     unsigned char 
  3151 ;; Auto vars:     Size  Location     Type
  3152 ;;  val             1    5[COMRAM] unsigned char 
  3153 ;; Return value:  Size  Location     Type
  3154 ;;                  1    wreg      _Bool 
  3155 ;; Registers used:
  3156 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3157 ;; Tracked objects:
  3158 ;;		On entry : 0/0
  3159 ;;		On exit  : 0/0
  3160 ;;		Unchanged: 0/0
  3161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3162 ;;      Params:         0       0       0       0       0       0       0       0       0
  3163 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3164 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3165 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3166 ;;Total ram usage:        1 bytes
  3167 ;; Hardware stack levels used:    1
  3168 ;; Hardware stack levels required when called:    1
  3169 ;; This function calls:
  3170 ;;		_DIGITAL_WRITE
  3171 ;; This function is called by:
  3172 ;;		_send
  3173 ;;		_SPI_Api_sendWord
  3174 ;; This function uses a non-reentrant model
  3175 ;;
  3176                           
  3177                           	psect	text21
  3178  00222C                     __ptext21:
  3179                           	opt callstack 0
  3180  00222C                     _SPI_Api_sendBit:
  3181                           	opt callstack 24
  3182                           
  3183                           ;incstack = 0
  3184                           ;SPI_Api_sendBit@val stored from wreg
  3185  00222C  6E06               	movwf	SPI_Api_sendBit@val^0,c
  3186  00222E                     
  3187                           ;SPI_Api.c: 121: _Bool SPI_Api_sendBit(uint8_t val);SPI_Api.c: 122: {;SPI_Api.c: 129:   
      +                            DIGITAL_WRITE(&LATC, 0x01, (uint8_t)0);
  3188  00222E  0E8B               	movlw	139
  3189  002230  6E01               	movwf	DIGITAL_WRITE@port^0,c
  3190  002232  0E0F               	movlw	15
  3191  002234  6E02               	movwf	(DIGITAL_WRITE@port+1)^0,c
  3192  002236  0E01               	movlw	1
  3193  002238  6E03               	movwf	DIGITAL_WRITE@pin^0,c
  3194  00223A  0E00               	movlw	0
  3195  00223C  6E04               	movwf	DIGITAL_WRITE@val^0,c
  3196  00223E  EC89  F011         	call	_DIGITAL_WRITE	;wreg free
  3197                           
  3198                           ;SPI_Api.c: 130:     DIGITAL_WRITE(&LATC, 0x04, val);
  3199  002242  0E8B               	movlw	139
  3200  002244  6E01               	movwf	DIGITAL_WRITE@port^0,c
  3201  002246  0E0F               	movlw	15
  3202  002248  6E02               	movwf	(DIGITAL_WRITE@port+1)^0,c
  3203  00224A  0E04               	movlw	4
  3204  00224C  6E03               	movwf	DIGITAL_WRITE@pin^0,c
  3205  00224E  C006  F004         	movff	SPI_Api_sendBit@val,DIGITAL_WRITE@val
  3206  002252  EC89  F011         	call	_DIGITAL_WRITE	;wreg free
  3207                           
  3208                           ;SPI_Api.c: 131:     DIGITAL_WRITE(&LATC, 0x01, (uint8_t)1);
  3209  002256  0E8B               	movlw	139
  3210  002258  6E01               	movwf	DIGITAL_WRITE@port^0,c
  3211  00225A  0E0F               	movlw	15
  3212  00225C  6E02               	movwf	(DIGITAL_WRITE@port+1)^0,c
  3213  00225E  0E01               	movlw	1
  3214  002260  6E03               	movwf	DIGITAL_WRITE@pin^0,c
  3215  002262  0E01               	movlw	1
  3216  002264  6E04               	movwf	DIGITAL_WRITE@val^0,c
  3217  002266  EC89  F011         	call	_DIGITAL_WRITE	;wreg free
  3218  00226A  0012               	return		;funcret
  3219  00226C                     __end_of_SPI_Api_sendBit:
  3220                           	opt callstack 0
  3221                           
  3222 ;; *************** function _SPI_Api_end *****************
  3223 ;; Defined at:
  3224 ;;		line 70 in file "SPI_Api.c"
  3225 ;; Parameters:    Size  Location     Type
  3226 ;;		None
  3227 ;; Auto vars:     Size  Location     Type
  3228 ;;		None
  3229 ;; Return value:  Size  Location     Type
  3230 ;;                  1    wreg      _Bool 
  3231 ;; Registers used:
  3232 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3233 ;; Tracked objects:
  3234 ;;		On entry : 0/0
  3235 ;;		On exit  : 0/0
  3236 ;;		Unchanged: 0/0
  3237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3238 ;;      Params:         0       0       0       0       0       0       0       0       0
  3239 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3240 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3241 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3242 ;;Total ram usage:        0 bytes
  3243 ;; Hardware stack levels used:    1
  3244 ;; Hardware stack levels required when called:    1
  3245 ;; This function calls:
  3246 ;;		_DIGITAL_WRITE
  3247 ;; This function is called by:
  3248 ;;		_send
  3249 ;; This function uses a non-reentrant model
  3250 ;;
  3251                           
  3252                           	psect	text22
  3253  00240E                     __ptext22:
  3254                           	opt callstack 0
  3255  00240E                     _SPI_Api_end:
  3256                           	opt callstack 25
  3257  00240E                     
  3258                           ;SPI_Api.c: 77:     DIGITAL_WRITE(&LATC, __config.u8EnablePin, (uint8_t)1);
  3259  00240E  0E8B               	movlw	139
  3260  002410  6E01               	movwf	DIGITAL_WRITE@port^0,c
  3261  002412  0E0F               	movlw	15
  3262  002414  6E02               	movwf	(DIGITAL_WRITE@port+1)^0,c
  3263  002416  C082  F003         	movff	___config,DIGITAL_WRITE@pin
  3264  00241A  0E01               	movlw	1
  3265  00241C  6E04               	movwf	DIGITAL_WRITE@val^0,c
  3266  00241E  EC89  F011         	call	_DIGITAL_WRITE	;wreg free
  3267  002422                     
  3268                           ;SPI_Api.c: 78:     G_SPI_Api_u8Flags |= 0x04;
  3269  002422  845F               	bsf	_G_SPI_Api_u8Flags^0,2,c
  3270  002424  0012               	return		;funcret
  3271  002426                     __end_of_SPI_Api_end:
  3272                           	opt callstack 0
  3273                           
  3274 ;; *************** function _SPI_Api_begin *****************
  3275 ;; Defined at:
  3276 ;;		line 57 in file "SPI_Api.c"
  3277 ;; Parameters:    Size  Location     Type
  3278 ;;		None
  3279 ;; Auto vars:     Size  Location     Type
  3280 ;;		None
  3281 ;; Return value:  Size  Location     Type
  3282 ;;                  1    wreg      _Bool 
  3283 ;; Registers used:
  3284 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3285 ;; Tracked objects:
  3286 ;;		On entry : 0/0
  3287 ;;		On exit  : 0/0
  3288 ;;		Unchanged: 0/0
  3289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3290 ;;      Params:         0       0       0       0       0       0       0       0       0
  3291 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3292 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3293 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3294 ;;Total ram usage:        0 bytes
  3295 ;; Hardware stack levels used:    1
  3296 ;; Hardware stack levels required when called:    1
  3297 ;; This function calls:
  3298 ;;		_DIGITAL_WRITE
  3299 ;; This function is called by:
  3300 ;;		_send
  3301 ;; This function uses a non-reentrant model
  3302 ;;
  3303                           
  3304                           	psect	text23
  3305  002426                     __ptext23:
  3306                           	opt callstack 0
  3307  002426                     _SPI_Api_begin:
  3308                           	opt callstack 25
  3309  002426                     
  3310                           ;SPI_Api.c: 64:     DIGITAL_WRITE(&LATC, __config.u8EnablePin, (uint8_t)0);
  3311  002426  0E8B               	movlw	139
  3312  002428  6E01               	movwf	DIGITAL_WRITE@port^0,c
  3313  00242A  0E0F               	movlw	15
  3314  00242C  6E02               	movwf	(DIGITAL_WRITE@port+1)^0,c
  3315  00242E  C082  F003         	movff	___config,DIGITAL_WRITE@pin
  3316  002432  0E00               	movlw	0
  3317  002434  6E04               	movwf	DIGITAL_WRITE@val^0,c
  3318  002436  EC89  F011         	call	_DIGITAL_WRITE	;wreg free
  3319  00243A                     
  3320                           ;SPI_Api.c: 65:     G_SPI_Api_u8Flags &= ~0x04;
  3321  00243A  945F               	bcf	_G_SPI_Api_u8Flags^0,2,c
  3322  00243C  0012               	return		;funcret
  3323  00243E                     __end_of_SPI_Api_begin:
  3324                           	opt callstack 0
  3325                           
  3326 ;; *************** function _DIGITAL_WRITE *****************
  3327 ;; Defined at:
  3328 ;;		line 33 in file "main.c"
  3329 ;; Parameters:    Size  Location     Type
  3330 ;;  port            2    0[COMRAM] PTR unsigned char 
  3331 ;;		 -> LATC(1), 
  3332 ;;  pin             1    2[COMRAM] unsigned char 
  3333 ;;  val             1    3[COMRAM] unsigned char 
  3334 ;; Auto vars:     Size  Location     Type
  3335 ;;		None
  3336 ;; Return value:  Size  Location     Type
  3337 ;;                  1    wreg      void 
  3338 ;; Registers used:
  3339 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3340 ;; Tracked objects:
  3341 ;;		On entry : 0/0
  3342 ;;		On exit  : 0/0
  3343 ;;		Unchanged: 0/0
  3344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3345 ;;      Params:         4       0       0       0       0       0       0       0       0
  3346 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3347 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3348 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3349 ;;Total ram usage:        5 bytes
  3350 ;; Hardware stack levels used:    1
  3351 ;; This function calls:
  3352 ;;		Nothing
  3353 ;; This function is called by:
  3354 ;;		_SPI_Api_setSpiDevice
  3355 ;;		_SPI_Api_begin
  3356 ;;		_SPI_Api_end
  3357 ;;		_SPI_Api_sendBit
  3358 ;;		_SPI_Api_receiveBit
  3359 ;; This function uses a non-reentrant model
  3360 ;;
  3361                           
  3362                           	psect	text24
  3363  002312                     __ptext24:
  3364                           	opt callstack 0
  3365  002312                     _DIGITAL_WRITE:
  3366                           	opt callstack 25
  3367  002312                     
  3368                           ;main.c: 33: void DIGITAL_WRITE(uint8_t* port, uint8_t pin, uint8_t val);main.c: 34: {;m
      +                          ain.c: 35:     if(val == (uint8_t)1)
  3369  002312  0404               	decf	DIGITAL_WRITE@val^0,w,c
  3370  002314  A4D8               	btfss	status,2,c
  3371  002316  EF8F  F011         	goto	u1401
  3372  00231A  EF91  F011         	goto	u1400
  3373  00231E                     u1401:
  3374  00231E  EF99  F011         	goto	l2011
  3375  002322                     u1400:
  3376  002322                     
  3377                           ;main.c: 36:     {;main.c: 37:         *port |= pin;
  3378  002322  C001  FFD9         	movff	DIGITAL_WRITE@port,fsr2l
  3379  002326  C002  FFDA         	movff	DIGITAL_WRITE@port+1,fsr2h
  3380  00232A  5003               	movf	DIGITAL_WRITE@pin^0,w,c
  3381  00232C  12DF               	iorwf	indf2,f,c
  3382                           
  3383                           ;main.c: 38:     }
  3384  00232E  EFA2  F011         	goto	l45
  3385  002332                     l2011:
  3386                           
  3387                           ;main.c: 40:     {;main.c: 41:         *port &= ~pin;
  3388  002332  5003               	movf	DIGITAL_WRITE@pin^0,w,c
  3389  002334  0AFF               	xorlw	255
  3390  002336  6E05               	movwf	??_DIGITAL_WRITE^0,c
  3391  002338  C001  FFD9         	movff	DIGITAL_WRITE@port,fsr2l
  3392  00233C  C002  FFDA         	movff	DIGITAL_WRITE@port+1,fsr2h
  3393  002340  5005               	movf	??_DIGITAL_WRITE^0,w,c
  3394  002342  16DF               	andwf	indf2,f,c
  3395  002344                     l45:
  3396  002344  0012               	return		;funcret
  3397  002346                     __end_of_DIGITAL_WRITE:
  3398                           	opt callstack 0
  3399                           
  3400 ;; *************** function _exit *****************
  3401 ;; Defined at:
  3402 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\exit.c"
  3403 ;; Parameters:    Size  Location     Type
  3404 ;;  code            2   10[COMRAM] int 
  3405 ;; Auto vars:     Size  Location     Type
  3406 ;;		None
  3407 ;; Return value:  Size  Location     Type
  3408 ;;                  1    wreg      void 
  3409 ;; Registers used:
  3410 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  3411 ;; Tracked objects:
  3412 ;;		On entry : 0/0
  3413 ;;		On exit  : 0/0
  3414 ;;		Unchanged: 0/0
  3415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3416 ;;      Params:         2       0       0       0       0       0       0       0       0
  3417 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3418 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3419 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3420 ;;Total ram usage:        2 bytes
  3421 ;; Hardware stack levels used:    1
  3422 ;; Hardware stack levels required when called:    2
  3423 ;; This function calls:
  3424 ;;		__Exit
  3425 ;;		___funcs_on_exit
  3426 ;; This function is called by:
  3427 ;;		_OledApi_printSpec
  3428 ;;		_OledApi_printf
  3429 ;;		_OledApi_printNum
  3430 ;; This function uses a non-reentrant model
  3431 ;;
  3432                           
  3433                           	psect	text25
  3434  002454                     __ptext25:
  3435                           	opt callstack 0
  3436  002454                     _exit:
  3437                           	opt callstack 27
  3438  002454  EC47  F00E         	call	___funcs_on_exit	;wreg free
  3439  002458  C00B  F001         	movff	exit@code,__Exit@ec
  3440  00245C  C00C  F002         	movff	exit@code+1,__Exit@ec+1
  3441  002460  EC3F  F012         	call	__Exit	;wreg free
  3442  002464  0012               	return		;funcret
  3443  002466                     __end_of_exit:
  3444                           	opt callstack 0
  3445                           
  3446 ;; *************** function ___funcs_on_exit *****************
  3447 ;; Defined at:
  3448 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atexit.c"
  3449 ;; Parameters:    Size  Location     Type
  3450 ;;		None
  3451 ;; Auto vars:     Size  Location     Type
  3452 ;;  arg             2    8[COMRAM] PTR void 
  3453 ;;		 -> RAM(2047), 
  3454 ;;  func            2    6[COMRAM] PTR FTN(PTR void ,)void 
  3455 ;;		 -> call(1), 
  3456 ;; Return value:  Size  Location     Type
  3457 ;;                  1    wreg      void 
  3458 ;; Registers used:
  3459 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  3460 ;; Tracked objects:
  3461 ;;		On entry : 0/0
  3462 ;;		On exit  : 0/0
  3463 ;;		Unchanged: 0/0
  3464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3465 ;;      Params:         0       0       0       0       0       0       0       0       0
  3466 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3467 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3468 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3469 ;;Total ram usage:        8 bytes
  3470 ;; Hardware stack levels used:    1
  3471 ;; Hardware stack levels required when called:    1
  3472 ;; This function calls:
  3473 ;;		_call
  3474 ;; This function is called by:
  3475 ;;		_exit
  3476 ;; This function uses a non-reentrant model
  3477 ;;
  3478                           
  3479                           	psect	text26
  3480  001C8E                     __ptext26:
  3481                           	opt callstack 0
  3482  001C8E                     ___funcs_on_exit:
  3483                           	opt callstack 27
  3484  001C8E  EFAE  F00E         	goto	l2317
  3485  001C92                     l2307:
  3486                           
  3487                           ; BSR set to: 0
  3488  001C92  C07A  F003         	movff	_slot,??___funcs_on_exit
  3489  001C96  C07B  F004         	movff	_slot+1,??___funcs_on_exit+1
  3490  001C9A  90D8               	bcf	status,0,c
  3491  001C9C  3603               	rlcf	??___funcs_on_exit^0,f,c
  3492  001C9E  3604               	rlcf	(??___funcs_on_exit+1)^0,f,c
  3493  001CA0  C07C  F005         	movff	_head,??___funcs_on_exit+2
  3494  001CA4  C07D  F006         	movff	_head+1,??___funcs_on_exit+3
  3495  001CA8  5003               	movf	??___funcs_on_exit^0,w,c
  3496  001CAA  2605               	addwf	(??___funcs_on_exit+2)^0,f,c
  3497  001CAC  5004               	movf	(??___funcs_on_exit+1)^0,w,c
  3498  001CAE  2206               	addwfc	(??___funcs_on_exit+3)^0,f,c
  3499  001CB0  0E02               	movlw	2
  3500  001CB2  2405               	addwf	(??___funcs_on_exit+2)^0,w,c
  3501  001CB4  6ED9               	movwf	fsr2l,c
  3502  001CB6  0E00               	movlw	0
  3503  001CB8  2006               	addwfc	(??___funcs_on_exit+3)^0,w,c
  3504  001CBA  6EDA               	movwf	fsr2h,c
  3505  001CBC  CFDE F007          	movff	postinc2,___funcs_on_exit@func
  3506  001CC0  CFDD F008          	movff	postdec2,___funcs_on_exit@func+1
  3507  001CC4  C07A  F003         	movff	_slot,??___funcs_on_exit
  3508  001CC8  C07B  F004         	movff	_slot+1,??___funcs_on_exit+1
  3509  001CCC  90D8               	bcf	status,0,c
  3510  001CCE  3603               	rlcf	??___funcs_on_exit^0,f,c
  3511  001CD0  3604               	rlcf	(??___funcs_on_exit+1)^0,f,c
  3512  001CD2  C07C  F005         	movff	_head,??___funcs_on_exit+2
  3513  001CD6  C07D  F006         	movff	_head+1,??___funcs_on_exit+3
  3514  001CDA  5003               	movf	??___funcs_on_exit^0,w,c
  3515  001CDC  2605               	addwf	(??___funcs_on_exit+2)^0,f,c
  3516  001CDE  5004               	movf	(??___funcs_on_exit+1)^0,w,c
  3517  001CE0  2206               	addwfc	(??___funcs_on_exit+3)^0,f,c
  3518  001CE2  0E42               	movlw	66
  3519  001CE4  2405               	addwf	(??___funcs_on_exit+2)^0,w,c
  3520  001CE6  6ED9               	movwf	fsr2l,c
  3521  001CE8  0E00               	movlw	0
  3522  001CEA  2006               	addwfc	(??___funcs_on_exit+3)^0,w,c
  3523  001CEC  6EDA               	movwf	fsr2h,c
  3524  001CEE  CFDE F009          	movff	postinc2,___funcs_on_exit@arg
  3525  001CF2  CFDD F00A          	movff	postdec2,___funcs_on_exit@arg+1
  3526  001CF6                     
  3527                           ; BSR set to: 0
  3528  001CF6  C009  F001         	movff	___funcs_on_exit@arg,call@p
  3529  001CFA  C00A  F002         	movff	___funcs_on_exit@arg+1,call@p+1
  3530  001CFE  D802               	call	u1938
  3531  001D00  EF8C  F00E         	goto	u1939
  3532  001D04                     u1938:
  3533  001D04  0005               	push	
  3534  001D06  6EFA               	movwf	pclath,c
  3535  001D08  5007               	movf	___funcs_on_exit@func^0,w,c
  3536  001D0A  6EFD               	movwf	tosl,c
  3537  001D0C  5008               	movf	(___funcs_on_exit@func+1)^0,w,c
  3538  001D0E  6EFE               	movwf	tosh,c
  3539  001D10  50F8               	movf	tblptru,w,c
  3540  001D12  6EFF               	movwf	tosu,c
  3541  001D14  50FA               	movf	pclath,w,c
  3542  001D16  0012               	return		;indir
  3543  001D18                     u1939:
  3544  001D18                     l2311:
  3545  001D18  0100               	movlb	0	; () banked
  3546  001D1A  517A               	movf	_slot& (0+255),w,b
  3547  001D1C  6E03               	movwf	??___funcs_on_exit^0,c
  3548  001D1E  517B               	movf	(_slot+1)& (0+255),w,b
  3549  001D20  6E04               	movwf	(??___funcs_on_exit+1)^0,c
  3550  001D22  0E01               	movlw	1
  3551  001D24  5F7A               	subwf	_slot& (0+255),f,b
  3552  001D26  0E00               	movlw	0
  3553  001D28  5B7B               	subwfb	(_slot+1)& (0+255),f,b
  3554  001D2A  BE04               	btfsc	(??___funcs_on_exit+1)^0,7,c
  3555  001D2C  EFA2  F00E         	goto	u1940
  3556  001D30  5004               	movf	(??___funcs_on_exit+1)^0,w,c
  3557  001D32  E106               	bnz	u1941
  3558  001D34  0403               	decf	??___funcs_on_exit^0,w,c
  3559  001D36  B0D8               	btfsc	status,0,c
  3560  001D38  EFA0  F00E         	goto	u1941
  3561  001D3C  EFA2  F00E         	goto	u1940
  3562  001D40                     u1941:
  3563  001D40  EF49  F00E         	goto	l2307
  3564  001D44                     u1940:
  3565  001D44                     
  3566                           ; BSR set to: 0
  3567  001D44  C07C  FFD9         	movff	_head,fsr2l
  3568  001D48  C07D  FFDA         	movff	_head+1,fsr2h
  3569  001D4C  CFDE F07C          	movff	postinc2,_head
  3570  001D50  CFDD F07D          	movff	postdec2,_head+1
  3571  001D54                     
  3572                           ; BSR set to: 0
  3573  001D54  0E00               	movlw	0
  3574  001D56  6F7B               	movwf	(_slot+1)& (0+255),b
  3575  001D58  0E20               	movlw	32
  3576  001D5A  6F7A               	movwf	_slot& (0+255),b
  3577  001D5C                     l2317:
  3578  001D5C  0100               	movlb	0	; () banked
  3579  001D5E  517C               	movf	_head& (0+255),w,b
  3580  001D60  117D               	iorwf	(_head+1)& (0+255),w,b
  3581  001D62  A4D8               	btfss	status,2,c
  3582  001D64  EFB6  F00E         	goto	u1951
  3583  001D68  EFB8  F00E         	goto	u1950
  3584  001D6C                     u1951:
  3585  001D6C  EF8C  F00E         	goto	l2311
  3586  001D70                     u1950:
  3587  001D70                     
  3588                           ; BSR set to: 0
  3589  001D70  0012               	return		;funcret
  3590  001D72                     __end_of___funcs_on_exit:
  3591                           	opt callstack 0
  3592                           
  3593 ;; *************** function _call *****************
  3594 ;; Defined at:
  3595 ;;		line 45 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atexit.c"
  3596 ;; Parameters:    Size  Location     Type
  3597 ;;  p               2    0[COMRAM] PTR void 
  3598 ;;		 -> RAM(2047), 
  3599 ;; Auto vars:     Size  Location     Type
  3600 ;;		None
  3601 ;; Return value:  Size  Location     Type
  3602 ;;                  1    wreg      void 
  3603 ;; Registers used:
  3604 ;;		None
  3605 ;; Tracked objects:
  3606 ;;		On entry : 0/0
  3607 ;;		On exit  : 0/0
  3608 ;;		Unchanged: 0/0
  3609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3610 ;;      Params:         2       0       0       0       0       0       0       0       0
  3611 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3612 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3613 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3614 ;;Total ram usage:        2 bytes
  3615 ;; Hardware stack levels used:    1
  3616 ;; This function calls:
  3617 ;;		Nothing
  3618 ;; This function is called by:
  3619 ;;		___funcs_on_exit
  3620 ;; This function uses a non-reentrant model
  3621 ;;
  3622                           
  3623                           	psect	text27
  3624  002484                     __ptext27:
  3625                           	opt callstack 0
  3626  002484                     _call:
  3627                           	opt callstack 27
  3628  002484  0012               	return		;funcret
  3629  002486                     __end_of_call:
  3630                           	opt callstack 0
  3631                           
  3632 ;; *************** function __Exit *****************
  3633 ;; Defined at:
  3634 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\_Exit.c"
  3635 ;; Parameters:    Size  Location     Type
  3636 ;;  ec              2    0[COMRAM] int 
  3637 ;; Auto vars:     Size  Location     Type
  3638 ;;		None
  3639 ;; Return value:  Size  Location     Type
  3640 ;;                  1    wreg      void 
  3641 ;; Registers used:
  3642 ;;		None
  3643 ;; Tracked objects:
  3644 ;;		On entry : 0/0
  3645 ;;		On exit  : 0/0
  3646 ;;		Unchanged: 0/0
  3647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3648 ;;      Params:         2       0       0       0       0       0       0       0       0
  3649 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3650 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3651 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3652 ;;Total ram usage:        2 bytes
  3653 ;; Hardware stack levels used:    1
  3654 ;; This function calls:
  3655 ;;		Nothing
  3656 ;; This function is called by:
  3657 ;;		_exit
  3658 ;; This function uses a non-reentrant model
  3659 ;;
  3660                           
  3661                           	psect	text28
  3662  00247E                     __ptext28:
  3663                           	opt callstack 0
  3664  00247E                     __Exit:
  3665                           	opt callstack 28
  3666  00247E                     l1005:
  3667  00247E  EF3F  F012         	goto	l1005
  3668  002482  0012               	return		;funcret
  3669  002484                     __end_of__Exit:
  3670                           	opt callstack 0
  3671                           
  3672 ;; *************** function ___xxtofl *****************
  3673 ;; Defined at:
  3674 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
  3675 ;; Parameters:    Size  Location     Type
  3676 ;;  sign            1    wreg     unsigned char 
  3677 ;;  val             4    0[COMRAM] long 
  3678 ;; Auto vars:     Size  Location     Type
  3679 ;;  sign            1    8[COMRAM] unsigned char 
  3680 ;;  arg             4   10[COMRAM] unsigned long 
  3681 ;;  exp             1    9[COMRAM] unsigned char 
  3682 ;; Return value:  Size  Location     Type
  3683 ;;                  4    0[COMRAM] unsigned char 
  3684 ;; Registers used:
  3685 ;;		wreg, status,2, status,0
  3686 ;; Tracked objects:
  3687 ;;		On entry : 0/0
  3688 ;;		On exit  : 0/0
  3689 ;;		Unchanged: 0/0
  3690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3691 ;;      Params:         4       0       0       0       0       0       0       0       0
  3692 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3693 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3694 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3695 ;;Total ram usage:       14 bytes
  3696 ;; Hardware stack levels used:    1
  3697 ;; This function calls:
  3698 ;;		Nothing
  3699 ;; This function is called by:
  3700 ;;		_OledApi_printf
  3701 ;;		_OledApi_printNum
  3702 ;; This function uses a non-reentrant model
  3703 ;;
  3704                           
  3705                           	psect	text29
  3706  0016D8                     __ptext29:
  3707                           	opt callstack 0
  3708  0016D8                     ___xxtofl:
  3709                           	opt callstack 29
  3710                           
  3711                           ;incstack = 0
  3712                           ;___xxtofl@sign stored from wreg
  3713  0016D8  6E09               	movwf	___xxtofl@sign^0,c
  3714  0016DA  5009               	movf	___xxtofl@sign^0,w,c
  3715  0016DC  B4D8               	btfsc	status,2,c
  3716  0016DE  EF73  F00B         	goto	u2411
  3717  0016E2  EF75  F00B         	goto	u2410
  3718  0016E6                     u2411:
  3719  0016E6  EF97  F00B         	goto	l979
  3720  0016EA                     u2410:
  3721  0016EA  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  3722  0016EC  EF7C  F00B         	goto	u2420
  3723  0016F0  EF7A  F00B         	goto	u2421
  3724  0016F4                     u2421:
  3725  0016F4  EF97  F00B         	goto	l979
  3726  0016F8                     u2420:
  3727  0016F8  C001  F005         	movff	___xxtofl@val,??___xxtofl
  3728  0016FC  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  3729  001700  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  3730  001704  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  3731  001708  1E05               	comf	??___xxtofl^0,f,c
  3732  00170A  1E06               	comf	(??___xxtofl+1)^0,f,c
  3733  00170C  1E07               	comf	(??___xxtofl+2)^0,f,c
  3734  00170E  1E08               	comf	(??___xxtofl+3)^0,f,c
  3735  001710  2A05               	incf	??___xxtofl^0,f,c
  3736  001712  0E00               	movlw	0
  3737  001714  2206               	addwfc	(??___xxtofl+1)^0,f,c
  3738  001716  2207               	addwfc	(??___xxtofl+2)^0,f,c
  3739  001718  2208               	addwfc	(??___xxtofl+3)^0,f,c
  3740  00171A  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  3741  00171E  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  3742  001722  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  3743  001726  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  3744  00172A  EF9F  F00B         	goto	l2635
  3745  00172E                     l979:
  3746  00172E  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  3747  001732  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3748  001736  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3749  00173A  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3750  00173E                     l2635:
  3751  00173E  5001               	movf	___xxtofl@val^0,w,c
  3752  001740  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  3753  001742  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  3754  001744  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  3755  001746  A4D8               	btfss	status,2,c
  3756  001748  EFA8  F00B         	goto	u2431
  3757  00174C  EFAA  F00B         	goto	u2430
  3758  001750                     u2431:
  3759  001750  EFB4  F00B         	goto	l2641
  3760  001754                     u2430:
  3761  001754  0E00               	movlw	0
  3762  001756  6E01               	movwf	?___xxtofl^0,c
  3763  001758  0E00               	movlw	0
  3764  00175A  6E02               	movwf	(?___xxtofl+1)^0,c
  3765  00175C  0E00               	movlw	0
  3766  00175E  6E03               	movwf	(?___xxtofl+2)^0,c
  3767  001760  0E00               	movlw	0
  3768  001762  6E04               	movwf	(?___xxtofl+3)^0,c
  3769  001764  EF45  F00C         	goto	l982
  3770  001768                     l2641:
  3771  001768  0E96               	movlw	150
  3772  00176A  6E0A               	movwf	___xxtofl@exp^0,c
  3773  00176C  EFBE  F00B         	goto	l2645
  3774  001770                     l2643:
  3775  001770  2A0A               	incf	___xxtofl@exp^0,f,c
  3776  001772  90D8               	bcf	status,0,c
  3777  001774  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  3778  001776  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  3779  001778  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  3780  00177A  320B               	rrcf	___xxtofl@arg^0,f,c
  3781  00177C                     l2645:
  3782  00177C  0E00               	movlw	0
  3783  00177E  140B               	andwf	___xxtofl@arg^0,w,c
  3784  001780  6E05               	movwf	??___xxtofl^0,c
  3785  001782  0E00               	movlw	0
  3786  001784  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  3787  001786  6E06               	movwf	(??___xxtofl+1)^0,c
  3788  001788  0E00               	movlw	0
  3789  00178A  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  3790  00178C  6E07               	movwf	(??___xxtofl+2)^0,c
  3791  00178E  0EFE               	movlw	254
  3792  001790  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  3793  001792  6E08               	movwf	(??___xxtofl+3)^0,c
  3794  001794  5005               	movf	??___xxtofl^0,w,c
  3795  001796  1006               	iorwf	(??___xxtofl+1)^0,w,c
  3796  001798  1007               	iorwf	(??___xxtofl+2)^0,w,c
  3797  00179A  1008               	iorwf	(??___xxtofl+3)^0,w,c
  3798  00179C  A4D8               	btfss	status,2,c
  3799  00179E  EFD3  F00B         	goto	u2441
  3800  0017A2  EFD5  F00B         	goto	u2440
  3801  0017A6                     u2441:
  3802  0017A6  EFB8  F00B         	goto	l2643
  3803  0017AA                     u2440:
  3804  0017AA  EFE3  F00B         	goto	l986
  3805  0017AE                     l2647:
  3806  0017AE  2A0A               	incf	___xxtofl@exp^0,f,c
  3807  0017B0  0E01               	movlw	1
  3808  0017B2  260B               	addwf	___xxtofl@arg^0,f,c
  3809  0017B4  0E00               	movlw	0
  3810  0017B6  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  3811  0017B8  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  3812  0017BA  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  3813  0017BC  90D8               	bcf	status,0,c
  3814  0017BE  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  3815  0017C0  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  3816  0017C2  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  3817  0017C4  320B               	rrcf	___xxtofl@arg^0,f,c
  3818  0017C6                     l986:
  3819  0017C6  0E00               	movlw	0
  3820  0017C8  140B               	andwf	___xxtofl@arg^0,w,c
  3821  0017CA  6E05               	movwf	??___xxtofl^0,c
  3822  0017CC  0E00               	movlw	0
  3823  0017CE  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  3824  0017D0  6E06               	movwf	(??___xxtofl+1)^0,c
  3825  0017D2  0E00               	movlw	0
  3826  0017D4  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  3827  0017D6  6E07               	movwf	(??___xxtofl+2)^0,c
  3828  0017D8  0EFF               	movlw	255
  3829  0017DA  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  3830  0017DC  6E08               	movwf	(??___xxtofl+3)^0,c
  3831  0017DE  5005               	movf	??___xxtofl^0,w,c
  3832  0017E0  1006               	iorwf	(??___xxtofl+1)^0,w,c
  3833  0017E2  1007               	iorwf	(??___xxtofl+2)^0,w,c
  3834  0017E4  1008               	iorwf	(??___xxtofl+3)^0,w,c
  3835  0017E6  A4D8               	btfss	status,2,c
  3836  0017E8  EFF8  F00B         	goto	u2451
  3837  0017EC  EFFA  F00B         	goto	u2450
  3838  0017F0                     u2451:
  3839  0017F0  EFD7  F00B         	goto	l2647
  3840  0017F4                     u2450:
  3841  0017F4  EF02  F00C         	goto	l2655
  3842  0017F8                     l2653:
  3843  0017F8  060A               	decf	___xxtofl@exp^0,f,c
  3844  0017FA  90D8               	bcf	status,0,c
  3845  0017FC  360B               	rlcf	___xxtofl@arg^0,f,c
  3846  0017FE  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  3847  001800  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  3848  001802  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  3849  001804                     l2655:
  3850  001804  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  3851  001806  EF07  F00C         	goto	u2461
  3852  00180A  EF09  F00C         	goto	u2460
  3853  00180E                     u2461:
  3854  00180E  EF11  F00C         	goto	l993
  3855  001812                     u2460:
  3856  001812  0E02               	movlw	2
  3857  001814  600A               	cpfslt	___xxtofl@exp^0,c
  3858  001816  EF0F  F00C         	goto	u2471
  3859  00181A  EF11  F00C         	goto	u2470
  3860  00181E                     u2471:
  3861  00181E  EFFC  F00B         	goto	l2653
  3862  001822                     u2470:
  3863  001822                     l993:
  3864  001822  B00A               	btfsc	___xxtofl@exp^0,0,c
  3865  001824  EF16  F00C         	goto	u2481
  3866  001828  EF18  F00C         	goto	u2480
  3867  00182C                     u2481:
  3868  00182C  EF19  F00C         	goto	l2661
  3869  001830                     u2480:
  3870  001830  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  3871  001832                     l2661:
  3872  001832  90D8               	bcf	status,0,c
  3873  001834  320A               	rrcf	___xxtofl@exp^0,f,c
  3874  001836  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  3875  00183A  6A06               	clrf	(??___xxtofl+1)^0,c
  3876  00183C  6A07               	clrf	(??___xxtofl+2)^0,c
  3877  00183E  6A08               	clrf	(??___xxtofl+3)^0,c
  3878  001840  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  3879  001844  6A07               	clrf	(??___xxtofl+2)^0,c
  3880  001846  6A06               	clrf	(??___xxtofl+1)^0,c
  3881  001848  6A05               	clrf	??___xxtofl^0,c
  3882  00184A  5005               	movf	??___xxtofl^0,w,c
  3883  00184C  120B               	iorwf	___xxtofl@arg^0,f,c
  3884  00184E  5006               	movf	(??___xxtofl+1)^0,w,c
  3885  001850  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  3886  001852  5007               	movf	(??___xxtofl+2)^0,w,c
  3887  001854  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  3888  001856  5008               	movf	(??___xxtofl+3)^0,w,c
  3889  001858  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  3890  00185A  5009               	movf	___xxtofl@sign^0,w,c
  3891  00185C  B4D8               	btfsc	status,2,c
  3892  00185E  EF33  F00C         	goto	u2491
  3893  001862  EF35  F00C         	goto	u2490
  3894  001866                     u2491:
  3895  001866  EF3D  F00C         	goto	l2671
  3896  00186A                     u2490:
  3897  00186A  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  3898  00186C  EF3C  F00C         	goto	u2500
  3899  001870  EF3A  F00C         	goto	u2501
  3900  001874                     u2501:
  3901  001874  EF3D  F00C         	goto	l2671
  3902  001878                     u2500:
  3903  001878  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  3904  00187A                     l2671:
  3905  00187A  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  3906  00187E  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  3907  001882  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  3908  001886  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  3909  00188A                     l982:
  3910  00188A  0012               	return		;funcret
  3911  00188C                     __end_of___xxtofl:
  3912                           	opt callstack 0
  3913                           
  3914 ;; *************** function ___fltol *****************
  3915 ;; Defined at:
  3916 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
  3917 ;; Parameters:    Size  Location     Type
  3918 ;;  f1              4    0[COMRAM] unsigned char 
  3919 ;; Auto vars:     Size  Location     Type
  3920 ;;  exp1            1    9[COMRAM] unsigned char 
  3921 ;;  sign1           1    8[COMRAM] unsigned char 
  3922 ;; Return value:  Size  Location     Type
  3923 ;;                  4    0[COMRAM] long 
  3924 ;; Registers used:
  3925 ;;		wreg, status,2, status,0
  3926 ;; Tracked objects:
  3927 ;;		On entry : 0/0
  3928 ;;		On exit  : 0/0
  3929 ;;		Unchanged: 0/0
  3930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3931 ;;      Params:         4       0       0       0       0       0       0       0       0
  3932 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3933 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3934 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3935 ;;Total ram usage:       10 bytes
  3936 ;; Hardware stack levels used:    1
  3937 ;; This function calls:
  3938 ;;		Nothing
  3939 ;; This function is called by:
  3940 ;;		_OledApi_printNum
  3941 ;; This function uses a non-reentrant model
  3942 ;;
  3943                           
  3944                           	psect	text30
  3945  001998                     __ptext30:
  3946                           	opt callstack 0
  3947  001998                     ___fltol:
  3948                           	opt callstack 28
  3949  001998  3403               	rlcf	(___fltol@f1+2)^0,w,c
  3950  00199A  3404               	rlcf	(___fltol@f1+3)^0,w,c
  3951  00199C  6E0A               	movwf	___fltol@exp1^0,c
  3952  00199E  500A               	movf	___fltol@exp1^0,w,c
  3953  0019A0  A4D8               	btfss	status,2,c
  3954  0019A2  EFD5  F00C         	goto	u2341
  3955  0019A6  EFD7  F00C         	goto	u2340
  3956  0019AA                     u2341:
  3957  0019AA  EFE1  F00C         	goto	l2591
  3958  0019AE                     u2340:
  3959  0019AE                     l2587:
  3960  0019AE  0E00               	movlw	0
  3961  0019B0  6E01               	movwf	?___fltol^0,c
  3962  0019B2  0E00               	movlw	0
  3963  0019B4  6E02               	movwf	(?___fltol+1)^0,c
  3964  0019B6  0E00               	movlw	0
  3965  0019B8  6E03               	movwf	(?___fltol+2)^0,c
  3966  0019BA  0E00               	movlw	0
  3967  0019BC  6E04               	movwf	(?___fltol+3)^0,c
  3968  0019BE  EF4E  F00D         	goto	l621
  3969  0019C2                     l2591:
  3970  0019C2  C001  F005         	movff	___fltol@f1,??___fltol
  3971  0019C6  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  3972  0019CA  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  3973  0019CE  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  3974  0019D2  0E20               	movlw	32
  3975  0019D4  EFF1  F00C         	goto	u2350
  3976  0019D8                     u2355:
  3977  0019D8  90D8               	bcf	status,0,c
  3978  0019DA  3208               	rrcf	(??___fltol+3)^0,f,c
  3979  0019DC  3207               	rrcf	(??___fltol+2)^0,f,c
  3980  0019DE  3206               	rrcf	(??___fltol+1)^0,f,c
  3981  0019E0  3205               	rrcf	??___fltol^0,f,c
  3982  0019E2                     u2350:
  3983  0019E2  2EE8               	decfsz	wreg,f,c
  3984  0019E4  EFEC  F00C         	goto	u2355
  3985  0019E8  5005               	movf	??___fltol^0,w,c
  3986  0019EA  6E09               	movwf	___fltol@sign1^0,c
  3987  0019EC  8E03               	bsf	(___fltol@f1+2)^0,7,c
  3988  0019EE  0EFF               	movlw	255
  3989  0019F0  1601               	andwf	___fltol@f1^0,f,c
  3990  0019F2  0EFF               	movlw	255
  3991  0019F4  1602               	andwf	(___fltol@f1+1)^0,f,c
  3992  0019F6  0EFF               	movlw	255
  3993  0019F8  1603               	andwf	(___fltol@f1+2)^0,f,c
  3994  0019FA  0E00               	movlw	0
  3995  0019FC  1604               	andwf	(___fltol@f1+3)^0,f,c
  3996  0019FE  0E96               	movlw	150
  3997  001A00  5E0A               	subwf	___fltol@exp1^0,f,c
  3998  001A02  BE0A               	btfsc	___fltol@exp1^0,7,c
  3999  001A04  EF08  F00D         	goto	u2360
  4000  001A08  EF06  F00D         	goto	u2361
  4001  001A0C                     u2361:
  4002  001A0C  EF1E  F00D         	goto	l2611
  4003  001A10                     u2360:
  4004  001A10  500A               	movf	___fltol@exp1^0,w,c
  4005  001A12  0A80               	xorlw	128
  4006  001A14  0F97               	addlw	151
  4007  001A16  B0D8               	btfsc	status,0,c
  4008  001A18  EF10  F00D         	goto	u2371
  4009  001A1C  EF12  F00D         	goto	u2370
  4010  001A20                     u2371:
  4011  001A20  EF14  F00D         	goto	l2607
  4012  001A24                     u2370:
  4013  001A24  EFD7  F00C         	goto	l2587
  4014  001A28                     l2607:
  4015  001A28  90D8               	bcf	status,0,c
  4016  001A2A  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4017  001A2C  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4018  001A2E  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4019  001A30  3201               	rrcf	___fltol@f1^0,f,c
  4020  001A32  3E0A               	incfsz	___fltol@exp1^0,f,c
  4021  001A34  EF14  F00D         	goto	l2607
  4022  001A38  EF36  F00D         	goto	l2621
  4023  001A3C                     l2611:
  4024  001A3C  0E1F               	movlw	31
  4025  001A3E  640A               	cpfsgt	___fltol@exp1^0,c
  4026  001A40  EF24  F00D         	goto	u2381
  4027  001A44  EF26  F00D         	goto	u2380
  4028  001A48                     u2381:
  4029  001A48  EF2E  F00D         	goto	l2619
  4030  001A4C                     u2380:
  4031  001A4C  EFD7  F00C         	goto	l2587
  4032  001A50                     l2617:
  4033  001A50  90D8               	bcf	status,0,c
  4034  001A52  3601               	rlcf	___fltol@f1^0,f,c
  4035  001A54  3602               	rlcf	(___fltol@f1+1)^0,f,c
  4036  001A56  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4037  001A58  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4038  001A5A  060A               	decf	___fltol@exp1^0,f,c
  4039  001A5C                     l2619:
  4040  001A5C  500A               	movf	___fltol@exp1^0,w,c
  4041  001A5E  A4D8               	btfss	status,2,c
  4042  001A60  EF34  F00D         	goto	u2391
  4043  001A64  EF36  F00D         	goto	u2390
  4044  001A68                     u2391:
  4045  001A68  EF28  F00D         	goto	l2617
  4046  001A6C                     u2390:
  4047  001A6C                     l2621:
  4048  001A6C  5009               	movf	___fltol@sign1^0,w,c
  4049  001A6E  B4D8               	btfsc	status,2,c
  4050  001A70  EF3C  F00D         	goto	u2401
  4051  001A74  EF3E  F00D         	goto	u2400
  4052  001A78                     u2401:
  4053  001A78  EF46  F00D         	goto	l2625
  4054  001A7C                     u2400:
  4055  001A7C  1E04               	comf	(___fltol@f1+3)^0,f,c
  4056  001A7E  1E03               	comf	(___fltol@f1+2)^0,f,c
  4057  001A80  1E02               	comf	(___fltol@f1+1)^0,f,c
  4058  001A82  6C01               	negf	___fltol@f1^0,c
  4059  001A84  0E00               	movlw	0
  4060  001A86  2202               	addwfc	(___fltol@f1+1)^0,f,c
  4061  001A88  2203               	addwfc	(___fltol@f1+2)^0,f,c
  4062  001A8A  2204               	addwfc	(___fltol@f1+3)^0,f,c
  4063  001A8C                     l2625:
  4064  001A8C  C001  F001         	movff	___fltol@f1,?___fltol
  4065  001A90  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4066  001A94  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4067  001A98  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4068  001A9C                     l621:
  4069  001A9C  0012               	return		;funcret
  4070  001A9E                     __end_of___fltol:
  4071                           	opt callstack 0
  4072                           
  4073 ;; *************** function ___flsub *****************
  4074 ;; Defined at:
  4075 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  4076 ;; Parameters:    Size  Location     Type
  4077 ;;  b               4   16[COMRAM] long 
  4078 ;;  a               4   20[COMRAM] long 
  4079 ;; Auto vars:     Size  Location     Type
  4080 ;;		None
  4081 ;; Return value:  Size  Location     Type
  4082 ;;                  4   16[COMRAM] long 
  4083 ;; Registers used:
  4084 ;;		wreg, status,2, status,0, cstack
  4085 ;; Tracked objects:
  4086 ;;		On entry : 0/0
  4087 ;;		On exit  : 0/0
  4088 ;;		Unchanged: 0/0
  4089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4090 ;;      Params:         8       0       0       0       0       0       0       0       0
  4091 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4092 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4093 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4094 ;;Total ram usage:        8 bytes
  4095 ;; Hardware stack levels used:    1
  4096 ;; Hardware stack levels required when called:    1
  4097 ;; This function calls:
  4098 ;;		___fladd
  4099 ;; This function is called by:
  4100 ;;		_OledApi_printNum
  4101 ;; This function uses a non-reentrant model
  4102 ;;
  4103                           
  4104                           	psect	text31
  4105  0021A6                     __ptext31:
  4106                           	opt callstack 0
  4107  0021A6                     ___flsub:
  4108                           	opt callstack 27
  4109  0021A6  0E00               	movlw	0
  4110  0021A8  1A15               	xorwf	___flsub@a^0,f,c
  4111  0021AA  0E00               	movlw	0
  4112  0021AC  1A16               	xorwf	(___flsub@a+1)^0,f,c
  4113  0021AE  0E00               	movlw	0
  4114  0021B0  1A17               	xorwf	(___flsub@a+2)^0,f,c
  4115  0021B2  0E80               	movlw	128
  4116  0021B4  1A18               	xorwf	(___flsub@a+3)^0,f,c
  4117  0021B6  C011  F001         	movff	___flsub@b,___fladd@b
  4118  0021BA  C012  F002         	movff	___flsub@b+1,___fladd@b+1
  4119  0021BE  C013  F003         	movff	___flsub@b+2,___fladd@b+2
  4120  0021C2  C014  F004         	movff	___flsub@b+3,___fladd@b+3
  4121  0021C6  C015  F005         	movff	___flsub@a,___fladd@a
  4122  0021CA  C016  F006         	movff	___flsub@a+1,___fladd@a+1
  4123  0021CE  C017  F007         	movff	___flsub@a+2,___fladd@a+2
  4124  0021D2  C018  F008         	movff	___flsub@a+3,___fladd@a+3
  4125  0021D6  EC09  F004         	call	___fladd	;wreg free
  4126  0021DA  C001  F011         	movff	?___fladd,?___flsub
  4127  0021DE  C002  F012         	movff	?___fladd+1,?___flsub+1
  4128  0021E2  C003  F013         	movff	?___fladd+2,?___flsub+2
  4129  0021E6  C004  F014         	movff	?___fladd+3,?___flsub+3
  4130  0021EA  0012               	return		;funcret
  4131  0021EC                     __end_of___flsub:
  4132                           	opt callstack 0
  4133                           
  4134 ;; *************** function ___fladd *****************
  4135 ;; Defined at:
  4136 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  4137 ;; Parameters:    Size  Location     Type
  4138 ;;  b               4    0[COMRAM] long 
  4139 ;;  a               4    4[COMRAM] long 
  4140 ;; Auto vars:     Size  Location     Type
  4141 ;;  grs             1   15[COMRAM] unsigned char 
  4142 ;;  bexp            1   14[COMRAM] unsigned char 
  4143 ;;  aexp            1   13[COMRAM] unsigned char 
  4144 ;;  signs           1   12[COMRAM] unsigned char 
  4145 ;; Return value:  Size  Location     Type
  4146 ;;                  4    0[COMRAM] unsigned char 
  4147 ;; Registers used:
  4148 ;;		wreg, status,2, status,0
  4149 ;; Tracked objects:
  4150 ;;		On entry : 0/0
  4151 ;;		On exit  : 0/0
  4152 ;;		Unchanged: 0/0
  4153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4154 ;;      Params:         8       0       0       0       0       0       0       0       0
  4155 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4156 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4157 ;;      Totals:        16       0       0       0       0       0       0       0       0
  4158 ;;Total ram usage:       16 bytes
  4159 ;; Hardware stack levels used:    1
  4160 ;; This function calls:
  4161 ;;		Nothing
  4162 ;; This function is called by:
  4163 ;;		___flsub
  4164 ;; This function uses a non-reentrant model
  4165 ;;
  4166                           
  4167                           	psect	text32
  4168  000812                     __ptext32:
  4169                           	opt callstack 0
  4170  000812                     ___fladd:
  4171                           	opt callstack 27
  4172  000812  5004               	movf	(___fladd@b+3)^0,w,c
  4173  000814  0B80               	andlw	128
  4174  000816  6E0D               	movwf	___fladd@signs^0,c
  4175  000818  5004               	movf	(___fladd@b+3)^0,w,c
  4176  00081A  2404               	addwf	(___fladd@b+3)^0,w,c
  4177  00081C  6E0F               	movwf	___fladd@bexp^0,c
  4178  00081E  AE03               	btfss	(___fladd@b+2)^0,7,c
  4179  000820  EF14  F004         	goto	u1541
  4180  000824  EF16  F004         	goto	u1540
  4181  000828                     u1541:
  4182  000828  EF17  F004         	goto	l2109
  4183  00082C                     u1540:
  4184  00082C  800F               	bsf	___fladd@bexp^0,0,c
  4185  00082E                     l2109:
  4186  00082E  500F               	movf	___fladd@bexp^0,w,c
  4187  000830  B4D8               	btfsc	status,2,c
  4188  000832  EF1D  F004         	goto	u1551
  4189  000836  EF1F  F004         	goto	u1550
  4190  00083A                     u1551:
  4191  00083A  EF34  F004         	goto	l2119
  4192  00083E                     u1550:
  4193  00083E  280F               	incf	___fladd@bexp^0,w,c
  4194  000840  A4D8               	btfss	status,2,c
  4195  000842  EF25  F004         	goto	u1561
  4196  000846  EF27  F004         	goto	u1560
  4197  00084A                     u1561:
  4198  00084A  EF2F  F004         	goto	l2115
  4199  00084E                     u1560:
  4200  00084E  0E00               	movlw	0
  4201  000850  6E01               	movwf	___fladd@b^0,c
  4202  000852  0E00               	movlw	0
  4203  000854  6E02               	movwf	(___fladd@b+1)^0,c
  4204  000856  0E00               	movlw	0
  4205  000858  6E03               	movwf	(___fladd@b+2)^0,c
  4206  00085A  0E00               	movlw	0
  4207  00085C  6E04               	movwf	(___fladd@b+3)^0,c
  4208  00085E                     l2115:
  4209  00085E  8E03               	bsf	(___fladd@b+2)^0,7,c
  4210  000860  0E00               	movlw	0
  4211  000862  6E04               	movwf	(___fladd@b+3)^0,c
  4212  000864  EF3C  F004         	goto	l2121
  4213  000868                     l2119:
  4214  000868  0E00               	movlw	0
  4215  00086A  6E01               	movwf	___fladd@b^0,c
  4216  00086C  0E00               	movlw	0
  4217  00086E  6E02               	movwf	(___fladd@b+1)^0,c
  4218  000870  0E00               	movlw	0
  4219  000872  6E03               	movwf	(___fladd@b+2)^0,c
  4220  000874  0E00               	movlw	0
  4221  000876  6E04               	movwf	(___fladd@b+3)^0,c
  4222  000878                     l2121:
  4223  000878  5008               	movf	(___fladd@a+3)^0,w,c
  4224  00087A  0B80               	andlw	128
  4225  00087C  6E0E               	movwf	___fladd@aexp^0,c
  4226  00087E  500D               	movf	___fladd@signs^0,w,c
  4227  000880  180E               	xorwf	___fladd@aexp^0,w,c
  4228  000882  B4D8               	btfsc	status,2,c
  4229  000884  EF46  F004         	goto	u1571
  4230  000888  EF48  F004         	goto	u1570
  4231  00088C                     u1571:
  4232  00088C  EF49  F004         	goto	l2127
  4233  000890                     u1570:
  4234  000890  8C0D               	bsf	___fladd@signs^0,6,c
  4235  000892                     l2127:
  4236  000892  5008               	movf	(___fladd@a+3)^0,w,c
  4237  000894  2408               	addwf	(___fladd@a+3)^0,w,c
  4238  000896  6E0E               	movwf	___fladd@aexp^0,c
  4239  000898  AE07               	btfss	(___fladd@a+2)^0,7,c
  4240  00089A  EF51  F004         	goto	u1581
  4241  00089E  EF53  F004         	goto	u1580
  4242  0008A2                     u1581:
  4243  0008A2  EF54  F004         	goto	l2133
  4244  0008A6                     u1580:
  4245  0008A6  800E               	bsf	___fladd@aexp^0,0,c
  4246  0008A8                     l2133:
  4247  0008A8  500E               	movf	___fladd@aexp^0,w,c
  4248  0008AA  B4D8               	btfsc	status,2,c
  4249  0008AC  EF5A  F004         	goto	u1591
  4250  0008B0  EF5C  F004         	goto	u1590
  4251  0008B4                     u1591:
  4252  0008B4  EF71  F004         	goto	l2143
  4253  0008B8                     u1590:
  4254  0008B8  280E               	incf	___fladd@aexp^0,w,c
  4255  0008BA  A4D8               	btfss	status,2,c
  4256  0008BC  EF62  F004         	goto	u1601
  4257  0008C0  EF64  F004         	goto	u1600
  4258  0008C4                     u1601:
  4259  0008C4  EF6C  F004         	goto	l2139
  4260  0008C8                     u1600:
  4261  0008C8  0E00               	movlw	0
  4262  0008CA  6E05               	movwf	___fladd@a^0,c
  4263  0008CC  0E00               	movlw	0
  4264  0008CE  6E06               	movwf	(___fladd@a+1)^0,c
  4265  0008D0  0E00               	movlw	0
  4266  0008D2  6E07               	movwf	(___fladd@a+2)^0,c
  4267  0008D4  0E00               	movlw	0
  4268  0008D6  6E08               	movwf	(___fladd@a+3)^0,c
  4269  0008D8                     l2139:
  4270  0008D8  8E07               	bsf	(___fladd@a+2)^0,7,c
  4271  0008DA  0E00               	movlw	0
  4272  0008DC  6E08               	movwf	(___fladd@a+3)^0,c
  4273  0008DE  EF79  F004         	goto	l2145
  4274  0008E2                     l2143:
  4275  0008E2  0E00               	movlw	0
  4276  0008E4  6E05               	movwf	___fladd@a^0,c
  4277  0008E6  0E00               	movlw	0
  4278  0008E8  6E06               	movwf	(___fladd@a+1)^0,c
  4279  0008EA  0E00               	movlw	0
  4280  0008EC  6E07               	movwf	(___fladd@a+2)^0,c
  4281  0008EE  0E00               	movlw	0
  4282  0008F0  6E08               	movwf	(___fladd@a+3)^0,c
  4283  0008F2                     l2145:
  4284  0008F2  500F               	movf	___fladd@bexp^0,w,c
  4285  0008F4  5C0E               	subwf	___fladd@aexp^0,w,c
  4286  0008F6  B0D8               	btfsc	status,0,c
  4287  0008F8  EF80  F004         	goto	u1611
  4288  0008FC  EF82  F004         	goto	u1610
  4289  000900                     u1611:
  4290  000900  EFA9  F004         	goto	l2181
  4291  000904                     u1610:
  4292  000904  AC0D               	btfss	___fladd@signs^0,6,c
  4293  000906  EF87  F004         	goto	u1621
  4294  00090A  EF89  F004         	goto	u1620
  4295  00090E                     u1621:
  4296  00090E  EF8B  F004         	goto	l2151
  4297  000912                     u1620:
  4298  000912  0E80               	movlw	128
  4299  000914  1A0D               	xorwf	___fladd@signs^0,f,c
  4300  000916                     l2151:
  4301  000916  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  4302  00091A  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  4303  00091E  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  4304  000922  C001  F010         	movff	___fladd@b,___fladd@grs
  4305  000926  C005  F001         	movff	___fladd@a,___fladd@b
  4306  00092A  C010  F005         	movff	___fladd@grs,___fladd@a
  4307  00092E  C002  F010         	movff	___fladd@b+1,___fladd@grs
  4308  000932  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  4309  000936  C010  F006         	movff	___fladd@grs,___fladd@a+1
  4310  00093A  C003  F010         	movff	___fladd@b+2,___fladd@grs
  4311  00093E  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  4312  000942  C010  F007         	movff	___fladd@grs,___fladd@a+2
  4313  000946  C004  F010         	movff	___fladd@b+3,___fladd@grs
  4314  00094A  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  4315  00094E  C010  F008         	movff	___fladd@grs,___fladd@a+3
  4316  000952                     l2181:
  4317  000952  0E00               	movlw	0
  4318  000954  6E10               	movwf	___fladd@grs^0,c
  4319  000956  500F               	movf	___fladd@bexp^0,w,c
  4320  000958  C00E  F009         	movff	___fladd@aexp,??___fladd
  4321  00095C  6A0A               	clrf	(??___fladd+1)^0,c
  4322  00095E  5E09               	subwf	??___fladd^0,f,c
  4323  000960  0E00               	movlw	0
  4324  000962  5A0A               	subwfb	(??___fladd+1)^0,f,c
  4325  000964  BE0A               	btfsc	(??___fladd+1)^0,7,c
  4326  000966  EFBE  F004         	goto	u1631
  4327  00096A  500A               	movf	(??___fladd+1)^0,w,c
  4328  00096C  E109               	bnz	u1630
  4329  00096E  0E1A               	movlw	26
  4330  000970  5C09               	subwf	??___fladd^0,w,c
  4331  000972  A0D8               	btfss	status,0,c
  4332  000974  EFBE  F004         	goto	u1631
  4333  000978  EFC0  F004         	goto	u1630
  4334  00097C                     u1631:
  4335  00097C  EFF7  F004         	goto	l853
  4336  000980                     u1630:
  4337  000980  5001               	movf	___fladd@b^0,w,c
  4338  000982  1002               	iorwf	(___fladd@b+1)^0,w,c
  4339  000984  1003               	iorwf	(___fladd@b+2)^0,w,c
  4340  000986  1004               	iorwf	(___fladd@b+3)^0,w,c
  4341  000988  A4D8               	btfss	status,2,c
  4342  00098A  EFC9  F004         	goto	u1641
  4343  00098E  EFCC  F004         	goto	u1640
  4344  000992                     u1641:
  4345  000992  0E01               	movlw	1
  4346  000994  EFCD  F004         	goto	u1650
  4347  000998                     u1640:
  4348  000998  0E00               	movlw	0
  4349  00099A                     u1650:
  4350  00099A  6E10               	movwf	___fladd@grs^0,c
  4351  00099C  0E00               	movlw	0
  4352  00099E  6E01               	movwf	___fladd@b^0,c
  4353  0009A0  0E00               	movlw	0
  4354  0009A2  6E02               	movwf	(___fladd@b+1)^0,c
  4355  0009A4  0E00               	movlw	0
  4356  0009A6  6E03               	movwf	(___fladd@b+2)^0,c
  4357  0009A8  0E00               	movlw	0
  4358  0009AA  6E04               	movwf	(___fladd@b+3)^0,c
  4359  0009AC  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  4360  0009B0  EF00  F005         	goto	l852
  4361  0009B4                     l854:
  4362  0009B4  A010               	btfss	___fladd@grs^0,0,c
  4363  0009B6  EFDF  F004         	goto	u1661
  4364  0009BA  EFE1  F004         	goto	u1660
  4365  0009BE                     u1661:
  4366  0009BE  EFE7  F004         	goto	l2193
  4367  0009C2                     u1660:
  4368  0009C2  90D8               	bcf	status,0,c
  4369  0009C4  3010               	rrcf	___fladd@grs^0,w,c
  4370  0009C6  0901               	iorlw	1
  4371  0009C8  6E10               	movwf	___fladd@grs^0,c
  4372  0009CA  EFE9  F004         	goto	l2195
  4373  0009CE                     l2193:
  4374  0009CE  90D8               	bcf	status,0,c
  4375  0009D0  3210               	rrcf	___fladd@grs^0,f,c
  4376  0009D2                     l2195:
  4377  0009D2  A001               	btfss	___fladd@b^0,0,c
  4378  0009D4  EFEE  F004         	goto	u1671
  4379  0009D8  EFF0  F004         	goto	u1670
  4380  0009DC                     u1671:
  4381  0009DC  EFF1  F004         	goto	l2199
  4382  0009E0                     u1670:
  4383  0009E0  8E10               	bsf	___fladd@grs^0,7,c
  4384  0009E2                     l2199:
  4385  0009E2  3404               	rlcf	(___fladd@b+3)^0,w,c
  4386  0009E4  3204               	rrcf	(___fladd@b+3)^0,f,c
  4387  0009E6  3203               	rrcf	(___fladd@b+2)^0,f,c
  4388  0009E8  3202               	rrcf	(___fladd@b+1)^0,f,c
  4389  0009EA  3201               	rrcf	___fladd@b^0,f,c
  4390  0009EC  2A0F               	incf	___fladd@bexp^0,f,c
  4391  0009EE                     l853:
  4392  0009EE  500E               	movf	___fladd@aexp^0,w,c
  4393  0009F0  5C0F               	subwf	___fladd@bexp^0,w,c
  4394  0009F2  A0D8               	btfss	status,0,c
  4395  0009F4  EFFE  F004         	goto	u1681
  4396  0009F8  EF00  F005         	goto	u1680
  4397  0009FC                     u1681:
  4398  0009FC  EFDA  F004         	goto	l854
  4399  000A00                     u1680:
  4400  000A00                     l852:
  4401  000A00  BC0D               	btfsc	___fladd@signs^0,6,c
  4402  000A02  EF05  F005         	goto	u1691
  4403  000A06  EF07  F005         	goto	u1690
  4404  000A0A                     u1691:
  4405  000A0A  EF47  F005         	goto	l2227
  4406  000A0E                     u1690:
  4407  000A0E  500F               	movf	___fladd@bexp^0,w,c
  4408  000A10  A4D8               	btfss	status,2,c
  4409  000A12  EF0D  F005         	goto	u1701
  4410  000A16  EF0F  F005         	goto	u1700
  4411  000A1A                     u1701:
  4412  000A1A  EF19  F005         	goto	l2209
  4413  000A1E                     u1700:
  4414  000A1E  0E00               	movlw	0
  4415  000A20  6E01               	movwf	?___fladd^0,c
  4416  000A22  0E00               	movlw	0
  4417  000A24  6E02               	movwf	(?___fladd+1)^0,c
  4418  000A26  0E00               	movlw	0
  4419  000A28  6E03               	movwf	(?___fladd+2)^0,c
  4420  000A2A  0E00               	movlw	0
  4421  000A2C  6E04               	movwf	(?___fladd+3)^0,c
  4422  000A2E  EF68  F006         	goto	l861
  4423  000A32                     l2209:
  4424  000A32  5005               	movf	___fladd@a^0,w,c
  4425  000A34  2601               	addwf	___fladd@b^0,f,c
  4426  000A36  5006               	movf	(___fladd@a+1)^0,w,c
  4427  000A38  2202               	addwfc	(___fladd@b+1)^0,f,c
  4428  000A3A  5007               	movf	(___fladd@a+2)^0,w,c
  4429  000A3C  2203               	addwfc	(___fladd@b+2)^0,f,c
  4430  000A3E  5008               	movf	(___fladd@a+3)^0,w,c
  4431  000A40  2204               	addwfc	(___fladd@b+3)^0,f,c
  4432  000A42  A004               	btfss	(___fladd@b+3)^0,0,c
  4433  000A44  EF26  F005         	goto	u1711
  4434  000A48  EF28  F005         	goto	u1710
  4435  000A4C                     u1711:
  4436  000A4C  EFD4  F005         	goto	l2263
  4437  000A50                     u1710:
  4438  000A50  A010               	btfss	___fladd@grs^0,0,c
  4439  000A52  EF2D  F005         	goto	u1721
  4440  000A56  EF2F  F005         	goto	u1720
  4441  000A5A                     u1721:
  4442  000A5A  EF35  F005         	goto	l2217
  4443  000A5E                     u1720:
  4444  000A5E  90D8               	bcf	status,0,c
  4445  000A60  3010               	rrcf	___fladd@grs^0,w,c
  4446  000A62  0901               	iorlw	1
  4447  000A64  6E10               	movwf	___fladd@grs^0,c
  4448  000A66  EF37  F005         	goto	l2219
  4449  000A6A                     l2217:
  4450  000A6A  90D8               	bcf	status,0,c
  4451  000A6C  3210               	rrcf	___fladd@grs^0,f,c
  4452  000A6E                     l2219:
  4453  000A6E  A001               	btfss	___fladd@b^0,0,c
  4454  000A70  EF3C  F005         	goto	u1731
  4455  000A74  EF3E  F005         	goto	u1730
  4456  000A78                     u1731:
  4457  000A78  EF3F  F005         	goto	l2223
  4458  000A7C                     u1730:
  4459  000A7C  8E10               	bsf	___fladd@grs^0,7,c
  4460  000A7E                     l2223:
  4461  000A7E  3404               	rlcf	(___fladd@b+3)^0,w,c
  4462  000A80  3204               	rrcf	(___fladd@b+3)^0,f,c
  4463  000A82  3203               	rrcf	(___fladd@b+2)^0,f,c
  4464  000A84  3202               	rrcf	(___fladd@b+1)^0,f,c
  4465  000A86  3201               	rrcf	___fladd@b^0,f,c
  4466  000A88  2A0F               	incf	___fladd@bexp^0,f,c
  4467  000A8A  EFD4  F005         	goto	l2263
  4468  000A8E                     l2227:
  4469  000A8E  5005               	movf	___fladd@a^0,w,c
  4470  000A90  5C01               	subwf	___fladd@b^0,w,c
  4471  000A92  5006               	movf	(___fladd@a+1)^0,w,c
  4472  000A94  5802               	subwfb	(___fladd@b+1)^0,w,c
  4473  000A96  5007               	movf	(___fladd@a+2)^0,w,c
  4474  000A98  5803               	subwfb	(___fladd@b+2)^0,w,c
  4475  000A9A  5004               	movf	(___fladd@b+3)^0,w,c
  4476  000A9C  0A80               	xorlw	128
  4477  000A9E  6E09               	movwf	??___fladd^0,c
  4478  000AA0  5008               	movf	(___fladd@a+3)^0,w,c
  4479  000AA2  0A80               	xorlw	128
  4480  000AA4  5809               	subwfb	??___fladd^0,w,c
  4481  000AA6  B0D8               	btfsc	status,0,c
  4482  000AA8  EF58  F005         	goto	u1741
  4483  000AAC  EF5A  F005         	goto	u1740
  4484  000AB0                     u1741:
  4485  000AB0  EF85  F005         	goto	l2237
  4486  000AB4                     u1740:
  4487  000AB4  5001               	movf	___fladd@b^0,w,c
  4488  000AB6  5C05               	subwf	___fladd@a^0,w,c
  4489  000AB8  6E09               	movwf	??___fladd^0,c
  4490  000ABA  5002               	movf	(___fladd@b+1)^0,w,c
  4491  000ABC  5806               	subwfb	(___fladd@a+1)^0,w,c
  4492  000ABE  6E0A               	movwf	(??___fladd+1)^0,c
  4493  000AC0  5003               	movf	(___fladd@b+2)^0,w,c
  4494  000AC2  5807               	subwfb	(___fladd@a+2)^0,w,c
  4495  000AC4  6E0B               	movwf	(??___fladd+2)^0,c
  4496  000AC6  5004               	movf	(___fladd@b+3)^0,w,c
  4497  000AC8  5808               	subwfb	(___fladd@a+3)^0,w,c
  4498  000ACA  6E0C               	movwf	(??___fladd+3)^0,c
  4499  000ACC  0EFF               	movlw	255
  4500  000ACE  2409               	addwf	??___fladd^0,w,c
  4501  000AD0  6E01               	movwf	___fladd@b^0,c
  4502  000AD2  0EFF               	movlw	255
  4503  000AD4  200A               	addwfc	(??___fladd+1)^0,w,c
  4504  000AD6  6E02               	movwf	(___fladd@b+1)^0,c
  4505  000AD8  0EFF               	movlw	255
  4506  000ADA  200B               	addwfc	(??___fladd+2)^0,w,c
  4507  000ADC  6E03               	movwf	(___fladd@b+2)^0,c
  4508  000ADE  0EFF               	movlw	255
  4509  000AE0  200C               	addwfc	(??___fladd+3)^0,w,c
  4510  000AE2  6E04               	movwf	(___fladd@b+3)^0,c
  4511  000AE4  0E80               	movlw	128
  4512  000AE6  1A0D               	xorwf	___fladd@signs^0,f,c
  4513  000AE8  6C10               	negf	___fladd@grs^0,c
  4514  000AEA  5010               	movf	___fladd@grs^0,w,c
  4515  000AEC  A4D8               	btfss	status,2,c
  4516  000AEE  EF7B  F005         	goto	u1751
  4517  000AF2  EF7D  F005         	goto	u1750
  4518  000AF6                     u1751:
  4519  000AF6  EF8D  F005         	goto	l869
  4520  000AFA                     u1750:
  4521  000AFA  0E01               	movlw	1
  4522  000AFC  2601               	addwf	___fladd@b^0,f,c
  4523  000AFE  0E00               	movlw	0
  4524  000B00  2202               	addwfc	(___fladd@b+1)^0,f,c
  4525  000B02  2203               	addwfc	(___fladd@b+2)^0,f,c
  4526  000B04  2204               	addwfc	(___fladd@b+3)^0,f,c
  4527  000B06  EF8D  F005         	goto	l869
  4528  000B0A                     l2237:
  4529  000B0A  5005               	movf	___fladd@a^0,w,c
  4530  000B0C  5E01               	subwf	___fladd@b^0,f,c
  4531  000B0E  5006               	movf	(___fladd@a+1)^0,w,c
  4532  000B10  5A02               	subwfb	(___fladd@b+1)^0,f,c
  4533  000B12  5007               	movf	(___fladd@a+2)^0,w,c
  4534  000B14  5A03               	subwfb	(___fladd@b+2)^0,f,c
  4535  000B16  5008               	movf	(___fladd@a+3)^0,w,c
  4536  000B18  5A04               	subwfb	(___fladd@b+3)^0,f,c
  4537  000B1A                     l869:
  4538  000B1A  5001               	movf	___fladd@b^0,w,c
  4539  000B1C  1002               	iorwf	(___fladd@b+1)^0,w,c
  4540  000B1E  1003               	iorwf	(___fladd@b+2)^0,w,c
  4541  000B20  1004               	iorwf	(___fladd@b+3)^0,w,c
  4542  000B22  A4D8               	btfss	status,2,c
  4543  000B24  EF96  F005         	goto	u1761
  4544  000B28  EF98  F005         	goto	u1760
  4545  000B2C                     u1761:
  4546  000B2C  EFCD  F005         	goto	l2261
  4547  000B30                     u1760:
  4548  000B30  5010               	movf	___fladd@grs^0,w,c
  4549  000B32  A4D8               	btfss	status,2,c
  4550  000B34  EF9E  F005         	goto	u1771
  4551  000B38  EFA0  F005         	goto	u1770
  4552  000B3C                     u1771:
  4553  000B3C  EFCD  F005         	goto	l2261
  4554  000B40                     u1770:
  4555  000B40  0E00               	movlw	0
  4556  000B42  6E01               	movwf	?___fladd^0,c
  4557  000B44  0E00               	movlw	0
  4558  000B46  6E02               	movwf	(?___fladd+1)^0,c
  4559  000B48  0E00               	movlw	0
  4560  000B4A  6E03               	movwf	(?___fladd+2)^0,c
  4561  000B4C  0E00               	movlw	0
  4562  000B4E  6E04               	movwf	(?___fladd+3)^0,c
  4563  000B50  EF68  F006         	goto	l861
  4564  000B54                     l2245:
  4565  000B54  90D8               	bcf	status,0,c
  4566  000B56  3601               	rlcf	___fladd@b^0,f,c
  4567  000B58  3602               	rlcf	(___fladd@b+1)^0,f,c
  4568  000B5A  3603               	rlcf	(___fladd@b+2)^0,f,c
  4569  000B5C  3604               	rlcf	(___fladd@b+3)^0,f,c
  4570  000B5E  AE10               	btfss	___fladd@grs^0,7,c
  4571  000B60  EFB4  F005         	goto	u1781
  4572  000B64  EFB6  F005         	goto	u1780
  4573  000B68                     u1781:
  4574  000B68  EFB7  F005         	goto	l2251
  4575  000B6C                     u1780:
  4576  000B6C  8001               	bsf	___fladd@b^0,0,c
  4577  000B6E                     l2251:
  4578  000B6E  A010               	btfss	___fladd@grs^0,0,c
  4579  000B70  EFBC  F005         	goto	u1791
  4580  000B74  EFBE  F005         	goto	u1790
  4581  000B78                     u1791:
  4582  000B78  EFC2  F005         	goto	l2255
  4583  000B7C                     u1790:
  4584  000B7C  80D8               	bsf	status,0,c
  4585  000B7E  3610               	rlcf	___fladd@grs^0,f,c
  4586  000B80  EFC4  F005         	goto	l2257
  4587  000B84                     l2255:
  4588  000B84  90D8               	bcf	status,0,c
  4589  000B86  3610               	rlcf	___fladd@grs^0,f,c
  4590  000B88                     l2257:
  4591  000B88  500F               	movf	___fladd@bexp^0,w,c
  4592  000B8A  B4D8               	btfsc	status,2,c
  4593  000B8C  EFCA  F005         	goto	u1801
  4594  000B90  EFCC  F005         	goto	u1800
  4595  000B94                     u1801:
  4596  000B94  EFCD  F005         	goto	l2261
  4597  000B98                     u1800:
  4598  000B98  060F               	decf	___fladd@bexp^0,f,c
  4599  000B9A                     l2261:
  4600  000B9A  AE03               	btfss	(___fladd@b+2)^0,7,c
  4601  000B9C  EFD2  F005         	goto	u1811
  4602  000BA0  EFD4  F005         	goto	u1810
  4603  000BA4                     u1811:
  4604  000BA4  EFAA  F005         	goto	l2245
  4605  000BA8                     u1810:
  4606  000BA8                     l2263:
  4607  000BA8  0E00               	movlw	0
  4608  000BAA  6E0E               	movwf	___fladd@aexp^0,c
  4609  000BAC  AE10               	btfss	___fladd@grs^0,7,c
  4610  000BAE  EFDB  F005         	goto	u1821
  4611  000BB2  EFDD  F005         	goto	u1820
  4612  000BB6                     u1821:
  4613  000BB6  EFF5  F005         	goto	l878
  4614  000BBA                     u1820:
  4615  000BBA  C010  F009         	movff	___fladd@grs,??___fladd
  4616  000BBE  0E7F               	movlw	127
  4617  000BC0  1609               	andwf	??___fladd^0,f,c
  4618  000BC2  B4D8               	btfsc	status,2,c
  4619  000BC4  EFE6  F005         	goto	u1831
  4620  000BC8  EFE8  F005         	goto	u1830
  4621  000BCC                     u1831:
  4622  000BCC  EFEC  F005         	goto	l879
  4623  000BD0                     u1830:
  4624  000BD0                     l2269:
  4625  000BD0  0E01               	movlw	1
  4626  000BD2  6E0E               	movwf	___fladd@aexp^0,c
  4627  000BD4  EFF5  F005         	goto	l878
  4628  000BD8                     l879:
  4629  000BD8  A001               	btfss	___fladd@b^0,0,c
  4630  000BDA  EFF1  F005         	goto	u1841
  4631  000BDE  EFF3  F005         	goto	u1840
  4632  000BE2                     u1841:
  4633  000BE2  EFF5  F005         	goto	l878
  4634  000BE6                     u1840:
  4635  000BE6  EFE8  F005         	goto	l2269
  4636  000BEA                     l878:
  4637  000BEA  500E               	movf	___fladd@aexp^0,w,c
  4638  000BEC  B4D8               	btfsc	status,2,c
  4639  000BEE  EFFB  F005         	goto	u1851
  4640  000BF2  EFFD  F005         	goto	u1850
  4641  000BF6                     u1851:
  4642  000BF6  EF28  F006         	goto	l2281
  4643  000BFA                     u1850:
  4644  000BFA  0E01               	movlw	1
  4645  000BFC  2601               	addwf	___fladd@b^0,f,c
  4646  000BFE  0E00               	movlw	0
  4647  000C00  2202               	addwfc	(___fladd@b+1)^0,f,c
  4648  000C02  2203               	addwfc	(___fladd@b+2)^0,f,c
  4649  000C04  2204               	addwfc	(___fladd@b+3)^0,f,c
  4650  000C06  A004               	btfss	(___fladd@b+3)^0,0,c
  4651  000C08  EF08  F006         	goto	u1861
  4652  000C0C  EF0A  F006         	goto	u1860
  4653  000C10                     u1861:
  4654  000C10  EF28  F006         	goto	l2281
  4655  000C14                     u1860:
  4656  000C14  C001  F009         	movff	___fladd@b,??___fladd
  4657  000C18  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  4658  000C1C  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  4659  000C20  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  4660  000C24  340C               	rlcf	(??___fladd+3)^0,w,c
  4661  000C26  320C               	rrcf	(??___fladd+3)^0,f,c
  4662  000C28  320B               	rrcf	(??___fladd+2)^0,f,c
  4663  000C2A  320A               	rrcf	(??___fladd+1)^0,f,c
  4664  000C2C  3209               	rrcf	??___fladd^0,f,c
  4665  000C2E  C009  F001         	movff	??___fladd,___fladd@b
  4666  000C32  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  4667  000C36  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  4668  000C3A  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  4669  000C3E  280F               	incf	___fladd@bexp^0,w,c
  4670  000C40  B4D8               	btfsc	status,2,c
  4671  000C42  EF25  F006         	goto	u1871
  4672  000C46  EF27  F006         	goto	u1870
  4673  000C4A                     u1871:
  4674  000C4A  EF28  F006         	goto	l2281
  4675  000C4E                     u1870:
  4676  000C4E  2A0F               	incf	___fladd@bexp^0,f,c
  4677  000C50                     l2281:
  4678  000C50  280F               	incf	___fladd@bexp^0,w,c
  4679  000C52  B4D8               	btfsc	status,2,c
  4680  000C54  EF2E  F006         	goto	u1881
  4681  000C58  EF30  F006         	goto	u1880
  4682  000C5C                     u1881:
  4683  000C5C  EF38  F006         	goto	l2285
  4684  000C60                     u1880:
  4685  000C60  500F               	movf	___fladd@bexp^0,w,c
  4686  000C62  A4D8               	btfss	status,2,c
  4687  000C64  EF36  F006         	goto	u1891
  4688  000C68  EF38  F006         	goto	u1890
  4689  000C6C                     u1891:
  4690  000C6C  EF4A  F006         	goto	l2289
  4691  000C70                     u1890:
  4692  000C70                     l2285:
  4693  000C70  0E00               	movlw	0
  4694  000C72  6E01               	movwf	___fladd@b^0,c
  4695  000C74  0E00               	movlw	0
  4696  000C76  6E02               	movwf	(___fladd@b+1)^0,c
  4697  000C78  0E00               	movlw	0
  4698  000C7A  6E03               	movwf	(___fladd@b+2)^0,c
  4699  000C7C  0E00               	movlw	0
  4700  000C7E  6E04               	movwf	(___fladd@b+3)^0,c
  4701  000C80  500F               	movf	___fladd@bexp^0,w,c
  4702  000C82  A4D8               	btfss	status,2,c
  4703  000C84  EF46  F006         	goto	u1901
  4704  000C88  EF48  F006         	goto	u1900
  4705  000C8C                     u1901:
  4706  000C8C  EF4A  F006         	goto	l2289
  4707  000C90                     u1900:
  4708  000C90  0E00               	movlw	0
  4709  000C92  6E0D               	movwf	___fladd@signs^0,c
  4710  000C94                     l2289:
  4711  000C94  A00F               	btfss	___fladd@bexp^0,0,c
  4712  000C96  EF4F  F006         	goto	u1911
  4713  000C9A  EF51  F006         	goto	u1910
  4714  000C9E                     u1911:
  4715  000C9E  EF54  F006         	goto	l2293
  4716  000CA2                     u1910:
  4717  000CA2  8E03               	bsf	(___fladd@b+2)^0,7,c
  4718  000CA4  EF55  F006         	goto	l2295
  4719  000CA8                     l2293:
  4720  000CA8  9E03               	bcf	(___fladd@b+2)^0,7,c
  4721  000CAA                     l2295:
  4722  000CAA  90D8               	bcf	status,0,c
  4723  000CAC  300F               	rrcf	___fladd@bexp^0,w,c
  4724  000CAE  6E04               	movwf	(___fladd@b+3)^0,c
  4725  000CB0  AE0D               	btfss	___fladd@signs^0,7,c
  4726  000CB2  EF5D  F006         	goto	u1921
  4727  000CB6  EF5F  F006         	goto	u1920
  4728  000CBA                     u1921:
  4729  000CBA  EF60  F006         	goto	l2301
  4730  000CBE                     u1920:
  4731  000CBE  8E04               	bsf	(___fladd@b+3)^0,7,c
  4732  000CC0                     l2301:
  4733  000CC0  C001  F001         	movff	___fladd@b,?___fladd
  4734  000CC4  C002  F002         	movff	___fladd@b+1,?___fladd+1
  4735  000CC8  C003  F003         	movff	___fladd@b+2,?___fladd+2
  4736  000CCC  C004  F004         	movff	___fladd@b+3,?___fladd+3
  4737  000CD0                     l861:
  4738  000CD0  0012               	return		;funcret
  4739  000CD2                     __end_of___fladd:
  4740                           	opt callstack 0
  4741                           
  4742 ;; *************** function ___flmul *****************
  4743 ;; Defined at:
  4744 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
  4745 ;; Parameters:    Size  Location     Type
  4746 ;;  b               4    0[COMRAM] unsigned char 
  4747 ;;  a               4    4[COMRAM] unsigned char 
  4748 ;; Auto vars:     Size  Location     Type
  4749 ;;  prod            4   19[COMRAM] struct .
  4750 ;;  grs             4   13[COMRAM] unsigned long 
  4751 ;;  temp            2   23[COMRAM] struct .
  4752 ;;  bexp            1   18[COMRAM] unsigned char 
  4753 ;;  aexp            1   17[COMRAM] unsigned char 
  4754 ;;  sign            1   12[COMRAM] unsigned char 
  4755 ;; Return value:  Size  Location     Type
  4756 ;;                  4    0[COMRAM] unsigned char 
  4757 ;; Registers used:
  4758 ;;		wreg, status,2, status,0, prodl, prodh
  4759 ;; Tracked objects:
  4760 ;;		On entry : 0/0
  4761 ;;		On exit  : 0/0
  4762 ;;		Unchanged: 0/0
  4763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4764 ;;      Params:         8       0       0       0       0       0       0       0       0
  4765 ;;      Locals:        13       0       0       0       0       0       0       0       0
  4766 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4767 ;;      Totals:        25       0       0       0       0       0       0       0       0
  4768 ;;Total ram usage:       25 bytes
  4769 ;; Hardware stack levels used:    1
  4770 ;; This function calls:
  4771 ;;		Nothing
  4772 ;; This function is called by:
  4773 ;;		_OledApi_printNum
  4774 ;; This function uses a non-reentrant model
  4775 ;;
  4776                           
  4777                           	psect	text33
  4778  000CD2                     __ptext33:
  4779                           	opt callstack 0
  4780  000CD2                     ___flmul:
  4781                           	opt callstack 28
  4782  000CD2  5004               	movf	(___flmul@b+3)^0,w,c
  4783  000CD4  0B80               	andlw	128
  4784  000CD6  6E0D               	movwf	___flmul@sign^0,c
  4785  000CD8  5004               	movf	(___flmul@b+3)^0,w,c
  4786  000CDA  2404               	addwf	(___flmul@b+3)^0,w,c
  4787  000CDC  6E13               	movwf	___flmul@bexp^0,c
  4788  000CDE  AE03               	btfss	(___flmul@b+2)^0,7,c
  4789  000CE0  EF74  F006         	goto	u2101
  4790  000CE4  EF76  F006         	goto	u2100
  4791  000CE8                     u2101:
  4792  000CE8  EF77  F006         	goto	l2433
  4793  000CEC                     u2100:
  4794  000CEC  8013               	bsf	___flmul@bexp^0,0,c
  4795  000CEE                     l2433:
  4796  000CEE  5013               	movf	___flmul@bexp^0,w,c
  4797  000CF0  B4D8               	btfsc	status,2,c
  4798  000CF2  EF7D  F006         	goto	u2111
  4799  000CF6  EF7F  F006         	goto	u2110
  4800  000CFA                     u2111:
  4801  000CFA  EF92  F006         	goto	l2441
  4802  000CFE                     u2110:
  4803  000CFE  2813               	incf	___flmul@bexp^0,w,c
  4804  000D00  A4D8               	btfss	status,2,c
  4805  000D02  EF85  F006         	goto	u2121
  4806  000D06  EF87  F006         	goto	u2120
  4807  000D0A                     u2121:
  4808  000D0A  EF8F  F006         	goto	l2439
  4809  000D0E                     u2120:
  4810  000D0E  0E00               	movlw	0
  4811  000D10  6E01               	movwf	___flmul@b^0,c
  4812  000D12  0E00               	movlw	0
  4813  000D14  6E02               	movwf	(___flmul@b+1)^0,c
  4814  000D16  0E00               	movlw	0
  4815  000D18  6E03               	movwf	(___flmul@b+2)^0,c
  4816  000D1A  0E00               	movlw	0
  4817  000D1C  6E04               	movwf	(___flmul@b+3)^0,c
  4818  000D1E                     l2439:
  4819  000D1E  8E03               	bsf	(___flmul@b+2)^0,7,c
  4820  000D20  EF9A  F006         	goto	l2443
  4821  000D24                     l2441:
  4822  000D24  0E00               	movlw	0
  4823  000D26  6E01               	movwf	___flmul@b^0,c
  4824  000D28  0E00               	movlw	0
  4825  000D2A  6E02               	movwf	(___flmul@b+1)^0,c
  4826  000D2C  0E00               	movlw	0
  4827  000D2E  6E03               	movwf	(___flmul@b+2)^0,c
  4828  000D30  0E00               	movlw	0
  4829  000D32  6E04               	movwf	(___flmul@b+3)^0,c
  4830  000D34                     l2443:
  4831  000D34  5008               	movf	(___flmul@a+3)^0,w,c
  4832  000D36  0B80               	andlw	128
  4833  000D38  1A0D               	xorwf	___flmul@sign^0,f,c
  4834  000D3A  5008               	movf	(___flmul@a+3)^0,w,c
  4835  000D3C  2408               	addwf	(___flmul@a+3)^0,w,c
  4836  000D3E  6E12               	movwf	___flmul@aexp^0,c
  4837  000D40  AE07               	btfss	(___flmul@a+2)^0,7,c
  4838  000D42  EFA5  F006         	goto	u2131
  4839  000D46  EFA7  F006         	goto	u2130
  4840  000D4A                     u2131:
  4841  000D4A  EFA8  F006         	goto	l2451
  4842  000D4E                     u2130:
  4843  000D4E  8012               	bsf	___flmul@aexp^0,0,c
  4844  000D50                     l2451:
  4845  000D50  5012               	movf	___flmul@aexp^0,w,c
  4846  000D52  B4D8               	btfsc	status,2,c
  4847  000D54  EFAE  F006         	goto	u2141
  4848  000D58  EFB0  F006         	goto	u2140
  4849  000D5C                     u2141:
  4850  000D5C  EFC3  F006         	goto	l2459
  4851  000D60                     u2140:
  4852  000D60  2812               	incf	___flmul@aexp^0,w,c
  4853  000D62  A4D8               	btfss	status,2,c
  4854  000D64  EFB6  F006         	goto	u2151
  4855  000D68  EFB8  F006         	goto	u2150
  4856  000D6C                     u2151:
  4857  000D6C  EFC0  F006         	goto	l2457
  4858  000D70                     u2150:
  4859  000D70  0E00               	movlw	0
  4860  000D72  6E05               	movwf	___flmul@a^0,c
  4861  000D74  0E00               	movlw	0
  4862  000D76  6E06               	movwf	(___flmul@a+1)^0,c
  4863  000D78  0E00               	movlw	0
  4864  000D7A  6E07               	movwf	(___flmul@a+2)^0,c
  4865  000D7C  0E00               	movlw	0
  4866  000D7E  6E08               	movwf	(___flmul@a+3)^0,c
  4867  000D80                     l2457:
  4868  000D80  8E07               	bsf	(___flmul@a+2)^0,7,c
  4869  000D82  EFCB  F006         	goto	l938
  4870  000D86                     l2459:
  4871  000D86  0E00               	movlw	0
  4872  000D88  6E05               	movwf	___flmul@a^0,c
  4873  000D8A  0E00               	movlw	0
  4874  000D8C  6E06               	movwf	(___flmul@a+1)^0,c
  4875  000D8E  0E00               	movlw	0
  4876  000D90  6E07               	movwf	(___flmul@a+2)^0,c
  4877  000D92  0E00               	movlw	0
  4878  000D94  6E08               	movwf	(___flmul@a+3)^0,c
  4879  000D96                     l938:
  4880  000D96  5012               	movf	___flmul@aexp^0,w,c
  4881  000D98  B4D8               	btfsc	status,2,c
  4882  000D9A  EFD1  F006         	goto	u2161
  4883  000D9E  EFD3  F006         	goto	u2160
  4884  000DA2                     u2161:
  4885  000DA2  EFDB  F006         	goto	l2463
  4886  000DA6                     u2160:
  4887  000DA6  5013               	movf	___flmul@bexp^0,w,c
  4888  000DA8  A4D8               	btfss	status,2,c
  4889  000DAA  EFD9  F006         	goto	u2171
  4890  000DAE  EFDB  F006         	goto	u2170
  4891  000DB2                     u2171:
  4892  000DB2  EFE5  F006         	goto	l2467
  4893  000DB6                     u2170:
  4894  000DB6                     l2463:
  4895  000DB6  0E00               	movlw	0
  4896  000DB8  6E01               	movwf	?___flmul^0,c
  4897  000DBA  0E00               	movlw	0
  4898  000DBC  6E02               	movwf	(?___flmul+1)^0,c
  4899  000DBE  0E00               	movlw	0
  4900  000DC0  6E03               	movwf	(?___flmul+2)^0,c
  4901  000DC2  0E00               	movlw	0
  4902  000DC4  6E04               	movwf	(?___flmul+3)^0,c
  4903  000DC6  EF7D  F008         	goto	l942
  4904  000DCA                     l2467:
  4905  000DCA  5007               	movf	(___flmul@a+2)^0,w,c
  4906  000DCC  0201               	mulwf	___flmul@b^0,c
  4907  000DCE  CFF3 F018          	movff	prodl,___flmul@temp
  4908  000DD2  CFF4 F019          	movff	prodh,___flmul@temp+1
  4909  000DD6  5018               	movf	___flmul@temp^0,w,c
  4910  000DD8  6E0E               	movwf	___flmul@grs^0,c
  4911  000DDA  6A0F               	clrf	(___flmul@grs+1)^0,c
  4912  000DDC  6A10               	clrf	(___flmul@grs+2)^0,c
  4913  000DDE  6A11               	clrf	(___flmul@grs+3)^0,c
  4914  000DE0  5019               	movf	(___flmul@temp+1)^0,w,c
  4915  000DE2  6E14               	movwf	___flmul@prod^0,c
  4916  000DE4  6A15               	clrf	(___flmul@prod+1)^0,c
  4917  000DE6  6A16               	clrf	(___flmul@prod+2)^0,c
  4918  000DE8  6A17               	clrf	(___flmul@prod+3)^0,c
  4919  000DEA  5006               	movf	(___flmul@a+1)^0,w,c
  4920  000DEC  0202               	mulwf	(___flmul@b+1)^0,c
  4921  000DEE  CFF3 F018          	movff	prodl,___flmul@temp
  4922  000DF2  CFF4 F019          	movff	prodh,___flmul@temp+1
  4923  000DF6  5018               	movf	___flmul@temp^0,w,c
  4924  000DF8  260E               	addwf	___flmul@grs^0,f,c
  4925  000DFA  0E00               	movlw	0
  4926  000DFC  220F               	addwfc	(___flmul@grs+1)^0,f,c
  4927  000DFE  2210               	addwfc	(___flmul@grs+2)^0,f,c
  4928  000E00  2211               	addwfc	(___flmul@grs+3)^0,f,c
  4929  000E02  5019               	movf	(___flmul@temp+1)^0,w,c
  4930  000E04  2614               	addwf	___flmul@prod^0,f,c
  4931  000E06  0E00               	movlw	0
  4932  000E08  2215               	addwfc	(___flmul@prod+1)^0,f,c
  4933  000E0A  2216               	addwfc	(___flmul@prod+2)^0,f,c
  4934  000E0C  2217               	addwfc	(___flmul@prod+3)^0,f,c
  4935  000E0E  5005               	movf	___flmul@a^0,w,c
  4936  000E10  0203               	mulwf	(___flmul@b+2)^0,c
  4937  000E12  CFF3 F018          	movff	prodl,___flmul@temp
  4938  000E16  CFF4 F019          	movff	prodh,___flmul@temp+1
  4939  000E1A  5018               	movf	___flmul@temp^0,w,c
  4940  000E1C  260E               	addwf	___flmul@grs^0,f,c
  4941  000E1E  0E00               	movlw	0
  4942  000E20  220F               	addwfc	(___flmul@grs+1)^0,f,c
  4943  000E22  2210               	addwfc	(___flmul@grs+2)^0,f,c
  4944  000E24  2211               	addwfc	(___flmul@grs+3)^0,f,c
  4945  000E26  5019               	movf	(___flmul@temp+1)^0,w,c
  4946  000E28  2614               	addwf	___flmul@prod^0,f,c
  4947  000E2A  0E00               	movlw	0
  4948  000E2C  2215               	addwfc	(___flmul@prod+1)^0,f,c
  4949  000E2E  2216               	addwfc	(___flmul@prod+2)^0,f,c
  4950  000E30  2217               	addwfc	(___flmul@prod+3)^0,f,c
  4951  000E32  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  4952  000E36  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  4953  000E3A  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  4954  000E3E  6A0E               	clrf	___flmul@grs^0,c
  4955  000E40  5005               	movf	___flmul@a^0,w,c
  4956  000E42  0202               	mulwf	(___flmul@b+1)^0,c
  4957  000E44  CFF3 F018          	movff	prodl,___flmul@temp
  4958  000E48  CFF4 F019          	movff	prodh,___flmul@temp+1
  4959  000E4C  5018               	movf	___flmul@temp^0,w,c
  4960  000E4E  260E               	addwf	___flmul@grs^0,f,c
  4961  000E50  5019               	movf	(___flmul@temp+1)^0,w,c
  4962  000E52  220F               	addwfc	(___flmul@grs+1)^0,f,c
  4963  000E54  0E00               	movlw	0
  4964  000E56  2210               	addwfc	(___flmul@grs+2)^0,f,c
  4965  000E58  0E00               	movlw	0
  4966  000E5A  2211               	addwfc	(___flmul@grs+3)^0,f,c
  4967  000E5C  5006               	movf	(___flmul@a+1)^0,w,c
  4968  000E5E  0201               	mulwf	___flmul@b^0,c
  4969  000E60  CFF3 F018          	movff	prodl,___flmul@temp
  4970  000E64  CFF4 F019          	movff	prodh,___flmul@temp+1
  4971  000E68  5018               	movf	___flmul@temp^0,w,c
  4972  000E6A  260E               	addwf	___flmul@grs^0,f,c
  4973  000E6C  5019               	movf	(___flmul@temp+1)^0,w,c
  4974  000E6E  220F               	addwfc	(___flmul@grs+1)^0,f,c
  4975  000E70  0E00               	movlw	0
  4976  000E72  2210               	addwfc	(___flmul@grs+2)^0,f,c
  4977  000E74  0E00               	movlw	0
  4978  000E76  2211               	addwfc	(___flmul@grs+3)^0,f,c
  4979  000E78  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  4980  000E7C  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  4981  000E80  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  4982  000E84  6A0E               	clrf	___flmul@grs^0,c
  4983  000E86  5005               	movf	___flmul@a^0,w,c
  4984  000E88  0201               	mulwf	___flmul@b^0,c
  4985  000E8A  CFF3 F018          	movff	prodl,___flmul@temp
  4986  000E8E  CFF4 F019          	movff	prodh,___flmul@temp+1
  4987  000E92  5018               	movf	___flmul@temp^0,w,c
  4988  000E94  260E               	addwf	___flmul@grs^0,f,c
  4989  000E96  5019               	movf	(___flmul@temp+1)^0,w,c
  4990  000E98  220F               	addwfc	(___flmul@grs+1)^0,f,c
  4991  000E9A  0E00               	movlw	0
  4992  000E9C  2210               	addwfc	(___flmul@grs+2)^0,f,c
  4993  000E9E  0E00               	movlw	0
  4994  000EA0  2211               	addwfc	(___flmul@grs+3)^0,f,c
  4995  000EA2  5007               	movf	(___flmul@a+2)^0,w,c
  4996  000EA4  0202               	mulwf	(___flmul@b+1)^0,c
  4997  000EA6  CFF3 F018          	movff	prodl,___flmul@temp
  4998  000EAA  CFF4 F019          	movff	prodh,___flmul@temp+1
  4999  000EAE  5018               	movf	___flmul@temp^0,w,c
  5000  000EB0  2614               	addwf	___flmul@prod^0,f,c
  5001  000EB2  5019               	movf	(___flmul@temp+1)^0,w,c
  5002  000EB4  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5003  000EB6  0E00               	movlw	0
  5004  000EB8  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5005  000EBA  0E00               	movlw	0
  5006  000EBC  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5007  000EBE  5006               	movf	(___flmul@a+1)^0,w,c
  5008  000EC0  0203               	mulwf	(___flmul@b+2)^0,c
  5009  000EC2  CFF3 F018          	movff	prodl,___flmul@temp
  5010  000EC6  CFF4 F019          	movff	prodh,___flmul@temp+1
  5011  000ECA  5018               	movf	___flmul@temp^0,w,c
  5012  000ECC  2614               	addwf	___flmul@prod^0,f,c
  5013  000ECE  5019               	movf	(___flmul@temp+1)^0,w,c
  5014  000ED0  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5015  000ED2  0E00               	movlw	0
  5016  000ED4  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5017  000ED6  0E00               	movlw	0
  5018  000ED8  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5019  000EDA  5007               	movf	(___flmul@a+2)^0,w,c
  5020  000EDC  0203               	mulwf	(___flmul@b+2)^0,c
  5021  000EDE  CFF3 F018          	movff	prodl,___flmul@temp
  5022  000EE2  CFF4 F019          	movff	prodh,___flmul@temp+1
  5023  000EE6  5018               	movf	___flmul@temp^0,w,c
  5024  000EE8  6E09               	movwf	??___flmul^0,c
  5025  000EEA  5019               	movf	(___flmul@temp+1)^0,w,c
  5026  000EEC  6E0A               	movwf	(??___flmul+1)^0,c
  5027  000EEE  6A0B               	clrf	(??___flmul+2)^0,c
  5028  000EF0  6A0C               	clrf	(??___flmul+3)^0,c
  5029  000EF2  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  5030  000EF6  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  5031  000EFA  C009  F00A         	movff	??___flmul,??___flmul+1
  5032  000EFE  6A09               	clrf	??___flmul^0,c
  5033  000F00  5009               	movf	??___flmul^0,w,c
  5034  000F02  2614               	addwf	___flmul@prod^0,f,c
  5035  000F04  500A               	movf	(??___flmul+1)^0,w,c
  5036  000F06  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5037  000F08  500B               	movf	(??___flmul+2)^0,w,c
  5038  000F0A  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5039  000F0C  500C               	movf	(??___flmul+3)^0,w,c
  5040  000F0E  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5041  000F10  C00E  F009         	movff	___flmul@grs,??___flmul
  5042  000F14  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  5043  000F18  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  5044  000F1C  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  5045  000F20  0E19               	movlw	25
  5046  000F22  EF98  F007         	goto	u2180
  5047  000F26                     u2185:
  5048  000F26  90D8               	bcf	status,0,c
  5049  000F28  320C               	rrcf	(??___flmul+3)^0,f,c
  5050  000F2A  320B               	rrcf	(??___flmul+2)^0,f,c
  5051  000F2C  320A               	rrcf	(??___flmul+1)^0,f,c
  5052  000F2E  3209               	rrcf	??___flmul^0,f,c
  5053  000F30                     u2180:
  5054  000F30  2EE8               	decfsz	wreg,f,c
  5055  000F32  EF93  F007         	goto	u2185
  5056  000F36  5009               	movf	??___flmul^0,w,c
  5057  000F38  2614               	addwf	___flmul@prod^0,f,c
  5058  000F3A  500A               	movf	(??___flmul+1)^0,w,c
  5059  000F3C  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5060  000F3E  500B               	movf	(??___flmul+2)^0,w,c
  5061  000F40  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5062  000F42  500C               	movf	(??___flmul+3)^0,w,c
  5063  000F44  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5064  000F46  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  5065  000F4A  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  5066  000F4E  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  5067  000F52  6A0E               	clrf	___flmul@grs^0,c
  5068  000F54  5012               	movf	___flmul@aexp^0,w,c
  5069  000F56  C013  F009         	movff	___flmul@bexp,??___flmul
  5070  000F5A  6A0A               	clrf	(??___flmul+1)^0,c
  5071  000F5C  2609               	addwf	??___flmul^0,f,c
  5072  000F5E  0E00               	movlw	0
  5073  000F60  220A               	addwfc	(??___flmul+1)^0,f,c
  5074  000F62  0E82               	movlw	130
  5075  000F64  2409               	addwf	??___flmul^0,w,c
  5076  000F66  6E18               	movwf	___flmul@temp^0,c
  5077  000F68  0EFF               	movlw	255
  5078  000F6A  200A               	addwfc	(??___flmul+1)^0,w,c
  5079  000F6C  6E19               	movwf	(___flmul@temp+1)^0,c
  5080  000F6E  EFCE  F007         	goto	l2515
  5081  000F72                     l2509:
  5082  000F72  90D8               	bcf	status,0,c
  5083  000F74  3614               	rlcf	___flmul@prod^0,f,c
  5084  000F76  3615               	rlcf	(___flmul@prod+1)^0,f,c
  5085  000F78  3616               	rlcf	(___flmul@prod+2)^0,f,c
  5086  000F7A  3617               	rlcf	(___flmul@prod+3)^0,f,c
  5087  000F7C  AE11               	btfss	(___flmul@grs+3)^0,7,c
  5088  000F7E  EFC3  F007         	goto	u2191
  5089  000F82  EFC5  F007         	goto	u2190
  5090  000F86                     u2191:
  5091  000F86  EFC6  F007         	goto	l945
  5092  000F8A                     u2190:
  5093  000F8A  8014               	bsf	___flmul@prod^0,0,c
  5094  000F8C                     l945:
  5095  000F8C  90D8               	bcf	status,0,c
  5096  000F8E  360E               	rlcf	___flmul@grs^0,f,c
  5097  000F90  360F               	rlcf	(___flmul@grs+1)^0,f,c
  5098  000F92  3610               	rlcf	(___flmul@grs+2)^0,f,c
  5099  000F94  3611               	rlcf	(___flmul@grs+3)^0,f,c
  5100  000F96  0618               	decf	___flmul@temp^0,f,c
  5101  000F98  A0D8               	btfss	status,0,c
  5102  000F9A  0619               	decf	(___flmul@temp+1)^0,f,c
  5103  000F9C                     l2515:
  5104  000F9C  AE16               	btfss	(___flmul@prod+2)^0,7,c
  5105  000F9E  EFD3  F007         	goto	u2201
  5106  000FA2  EFD5  F007         	goto	u2200
  5107  000FA6                     u2201:
  5108  000FA6  EFB9  F007         	goto	l2509
  5109  000FAA                     u2200:
  5110  000FAA  0E00               	movlw	0
  5111  000FAC  6E12               	movwf	___flmul@aexp^0,c
  5112  000FAE  AE11               	btfss	(___flmul@grs+3)^0,7,c
  5113  000FB0  EFDC  F007         	goto	u2211
  5114  000FB4  EFDE  F007         	goto	u2210
  5115  000FB8                     u2211:
  5116  000FB8  EF02  F008         	goto	l947
  5117  000FBC                     u2210:
  5118  000FBC  0EFF               	movlw	255
  5119  000FBE  140E               	andwf	___flmul@grs^0,w,c
  5120  000FC0  6E09               	movwf	??___flmul^0,c
  5121  000FC2  0EFF               	movlw	255
  5122  000FC4  140F               	andwf	(___flmul@grs+1)^0,w,c
  5123  000FC6  6E0A               	movwf	(??___flmul+1)^0,c
  5124  000FC8  0EFF               	movlw	255
  5125  000FCA  1410               	andwf	(___flmul@grs+2)^0,w,c
  5126  000FCC  6E0B               	movwf	(??___flmul+2)^0,c
  5127  000FCE  0E7F               	movlw	127
  5128  000FD0  1411               	andwf	(___flmul@grs+3)^0,w,c
  5129  000FD2  6E0C               	movwf	(??___flmul+3)^0,c
  5130  000FD4  5009               	movf	??___flmul^0,w,c
  5131  000FD6  100A               	iorwf	(??___flmul+1)^0,w,c
  5132  000FD8  100B               	iorwf	(??___flmul+2)^0,w,c
  5133  000FDA  100C               	iorwf	(??___flmul+3)^0,w,c
  5134  000FDC  B4D8               	btfsc	status,2,c
  5135  000FDE  EFF3  F007         	goto	u2221
  5136  000FE2  EFF5  F007         	goto	u2220
  5137  000FE6                     u2221:
  5138  000FE6  EFF9  F007         	goto	l948
  5139  000FEA                     u2220:
  5140  000FEA                     l2523:
  5141  000FEA  0E01               	movlw	1
  5142  000FEC  6E12               	movwf	___flmul@aexp^0,c
  5143  000FEE  EF02  F008         	goto	l947
  5144  000FF2                     l948:
  5145  000FF2  A014               	btfss	___flmul@prod^0,0,c
  5146  000FF4  EFFE  F007         	goto	u2231
  5147  000FF8  EF00  F008         	goto	u2230
  5148  000FFC                     u2231:
  5149  000FFC  EF02  F008         	goto	l947
  5150  001000                     u2230:
  5151  001000  EFF5  F007         	goto	l2523
  5152  001004                     l947:
  5153  001004  5012               	movf	___flmul@aexp^0,w,c
  5154  001006  B4D8               	btfsc	status,2,c
  5155  001008  EF08  F008         	goto	u2241
  5156  00100C  EF0A  F008         	goto	u2240
  5157  001010                     u2241:
  5158  001010  EF2E  F008         	goto	l2535
  5159  001014                     u2240:
  5160  001014  0E01               	movlw	1
  5161  001016  2614               	addwf	___flmul@prod^0,f,c
  5162  001018  0E00               	movlw	0
  5163  00101A  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5164  00101C  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5165  00101E  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5166  001020  A017               	btfss	(___flmul@prod+3)^0,0,c
  5167  001022  EF15  F008         	goto	u2251
  5168  001026  EF17  F008         	goto	u2250
  5169  00102A                     u2251:
  5170  00102A  EF2E  F008         	goto	l2535
  5171  00102E                     u2250:
  5172  00102E  C014  F009         	movff	___flmul@prod,??___flmul
  5173  001032  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  5174  001036  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  5175  00103A  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  5176  00103E  340C               	rlcf	(??___flmul+3)^0,w,c
  5177  001040  320C               	rrcf	(??___flmul+3)^0,f,c
  5178  001042  320B               	rrcf	(??___flmul+2)^0,f,c
  5179  001044  320A               	rrcf	(??___flmul+1)^0,f,c
  5180  001046  3209               	rrcf	??___flmul^0,f,c
  5181  001048  C009  F014         	movff	??___flmul,___flmul@prod
  5182  00104C  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  5183  001050  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  5184  001054  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  5185  001058  4A18               	infsnz	___flmul@temp^0,f,c
  5186  00105A  2A19               	incf	(___flmul@temp+1)^0,f,c
  5187  00105C                     l2535:
  5188  00105C  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  5189  00105E  EF39  F008         	goto	u2261
  5190  001062  5019               	movf	(___flmul@temp+1)^0,w,c
  5191  001064  E108               	bnz	u2260
  5192  001066  2818               	incf	___flmul@temp^0,w,c
  5193  001068  A0D8               	btfss	status,0,c
  5194  00106A  EF39  F008         	goto	u2261
  5195  00106E  EF3B  F008         	goto	u2260
  5196  001072                     u2261:
  5197  001072  EF45  F008         	goto	l2539
  5198  001076                     u2260:
  5199  001076  0E00               	movlw	0
  5200  001078  6E14               	movwf	___flmul@prod^0,c
  5201  00107A  0E00               	movlw	0
  5202  00107C  6E15               	movwf	(___flmul@prod+1)^0,c
  5203  00107E  0E80               	movlw	128
  5204  001080  6E16               	movwf	(___flmul@prod+2)^0,c
  5205  001082  0E7F               	movlw	127
  5206  001084  6E17               	movwf	(___flmul@prod+3)^0,c
  5207  001086  EF73  F008         	goto	l2551
  5208  00108A                     l2539:
  5209  00108A  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  5210  00108C  EF52  F008         	goto	u2270
  5211  001090  5019               	movf	(___flmul@temp+1)^0,w,c
  5212  001092  E106               	bnz	u2271
  5213  001094  0418               	decf	___flmul@temp^0,w,c
  5214  001096  B0D8               	btfsc	status,0,c
  5215  001098  EF50  F008         	goto	u2271
  5216  00109C  EF52  F008         	goto	u2270
  5217  0010A0                     u2271:
  5218  0010A0  EF5E  F008         	goto	l955
  5219  0010A4                     u2270:
  5220  0010A4  0E00               	movlw	0
  5221  0010A6  6E14               	movwf	___flmul@prod^0,c
  5222  0010A8  0E00               	movlw	0
  5223  0010AA  6E15               	movwf	(___flmul@prod+1)^0,c
  5224  0010AC  0E00               	movlw	0
  5225  0010AE  6E16               	movwf	(___flmul@prod+2)^0,c
  5226  0010B0  0E00               	movlw	0
  5227  0010B2  6E17               	movwf	(___flmul@prod+3)^0,c
  5228  0010B4  0E00               	movlw	0
  5229  0010B6  6E0D               	movwf	___flmul@sign^0,c
  5230  0010B8  EF73  F008         	goto	l2551
  5231  0010BC                     l955:
  5232  0010BC  C018  F013         	movff	___flmul@temp,___flmul@bexp
  5233  0010C0  0EFF               	movlw	255
  5234  0010C2  1614               	andwf	___flmul@prod^0,f,c
  5235  0010C4  0EFF               	movlw	255
  5236  0010C6  1615               	andwf	(___flmul@prod+1)^0,f,c
  5237  0010C8  0E7F               	movlw	127
  5238  0010CA  1616               	andwf	(___flmul@prod+2)^0,f,c
  5239  0010CC  0E00               	movlw	0
  5240  0010CE  1617               	andwf	(___flmul@prod+3)^0,f,c
  5241  0010D0  A013               	btfss	___flmul@bexp^0,0,c
  5242  0010D2  EF6D  F008         	goto	u2281
  5243  0010D6  EF6F  F008         	goto	u2280
  5244  0010DA                     u2281:
  5245  0010DA  EF70  F008         	goto	l2549
  5246  0010DE                     u2280:
  5247  0010DE  8E16               	bsf	(___flmul@prod+2)^0,7,c
  5248  0010E0                     l2549:
  5249  0010E0  90D8               	bcf	status,0,c
  5250  0010E2  3013               	rrcf	___flmul@bexp^0,w,c
  5251  0010E4  6E17               	movwf	(___flmul@prod+3)^0,c
  5252  0010E6                     l2551:
  5253  0010E6  500D               	movf	___flmul@sign^0,w,c
  5254  0010E8  1217               	iorwf	(___flmul@prod+3)^0,f,c
  5255  0010EA  C014  F001         	movff	___flmul@prod,?___flmul
  5256  0010EE  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  5257  0010F2  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  5258  0010F6  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  5259  0010FA                     l942:
  5260  0010FA  0012               	return		;funcret
  5261  0010FC                     __end_of___flmul:
  5262                           	opt callstack 0
  5263                           
  5264 ;; *************** function ___flge *****************
  5265 ;; Defined at:
  5266 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
  5267 ;; Parameters:    Size  Location     Type
  5268 ;;  ff1             4   24[COMRAM] unsigned char 
  5269 ;;  ff2             4   28[COMRAM] unsigned char 
  5270 ;; Auto vars:     Size  Location     Type
  5271 ;;		None
  5272 ;; Return value:  Size  Location     Type
  5273 ;;		None               void
  5274 ;; Registers used:
  5275 ;;		wreg, status,2, status,0
  5276 ;; Tracked objects:
  5277 ;;		On entry : 0/0
  5278 ;;		On exit  : 0/0
  5279 ;;		Unchanged: 0/0
  5280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5281 ;;      Params:         8       0       0       0       0       0       0       0       0
  5282 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5283 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5284 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5285 ;;Total ram usage:       12 bytes
  5286 ;; Hardware stack levels used:    1
  5287 ;; This function calls:
  5288 ;;		Nothing
  5289 ;; This function is called by:
  5290 ;;		_OledApi_printNum
  5291 ;; This function uses a non-reentrant model
  5292 ;;
  5293                           
  5294                           	psect	text34
  5295  001A9E                     __ptext34:
  5296                           	opt callstack 0
  5297  001A9E                     ___flge:
  5298                           	opt callstack 28
  5299  001A9E  0E00               	movlw	0
  5300  001AA0  1419               	andwf	___flge@ff1^0,w,c
  5301  001AA2  6E21               	movwf	??___flge^0,c
  5302  001AA4  0E00               	movlw	0
  5303  001AA6  141A               	andwf	(___flge@ff1+1)^0,w,c
  5304  001AA8  6E22               	movwf	(??___flge+1)^0,c
  5305  001AAA  0E80               	movlw	128
  5306  001AAC  141B               	andwf	(___flge@ff1+2)^0,w,c
  5307  001AAE  6E23               	movwf	(??___flge+2)^0,c
  5308  001AB0  0E7F               	movlw	127
  5309  001AB2  141C               	andwf	(___flge@ff1+3)^0,w,c
  5310  001AB4  6E24               	movwf	(??___flge+3)^0,c
  5311  001AB6  5021               	movf	??___flge^0,w,c
  5312  001AB8  1022               	iorwf	(??___flge+1)^0,w,c
  5313  001ABA  1023               	iorwf	(??___flge+2)^0,w,c
  5314  001ABC  1024               	iorwf	(??___flge+3)^0,w,c
  5315  001ABE  A4D8               	btfss	status,2,c
  5316  001AC0  EF64  F00D         	goto	u2291
  5317  001AC4  EF66  F00D         	goto	u2290
  5318  001AC8                     u2291:
  5319  001AC8  EF6E  F00D         	goto	l2567
  5320  001ACC                     u2290:
  5321  001ACC  0E00               	movlw	0
  5322  001ACE  6E19               	movwf	___flge@ff1^0,c
  5323  001AD0  0E00               	movlw	0
  5324  001AD2  6E1A               	movwf	(___flge@ff1+1)^0,c
  5325  001AD4  0E00               	movlw	0
  5326  001AD6  6E1B               	movwf	(___flge@ff1+2)^0,c
  5327  001AD8  0E00               	movlw	0
  5328  001ADA  6E1C               	movwf	(___flge@ff1+3)^0,c
  5329  001ADC                     l2567:
  5330  001ADC  0E00               	movlw	0
  5331  001ADE  141D               	andwf	___flge@ff2^0,w,c
  5332  001AE0  6E21               	movwf	??___flge^0,c
  5333  001AE2  0E00               	movlw	0
  5334  001AE4  141E               	andwf	(___flge@ff2+1)^0,w,c
  5335  001AE6  6E22               	movwf	(??___flge+1)^0,c
  5336  001AE8  0E80               	movlw	128
  5337  001AEA  141F               	andwf	(___flge@ff2+2)^0,w,c
  5338  001AEC  6E23               	movwf	(??___flge+2)^0,c
  5339  001AEE  0E7F               	movlw	127
  5340  001AF0  1420               	andwf	(___flge@ff2+3)^0,w,c
  5341  001AF2  6E24               	movwf	(??___flge+3)^0,c
  5342  001AF4  5021               	movf	??___flge^0,w,c
  5343  001AF6  1022               	iorwf	(??___flge+1)^0,w,c
  5344  001AF8  1023               	iorwf	(??___flge+2)^0,w,c
  5345  001AFA  1024               	iorwf	(??___flge+3)^0,w,c
  5346  001AFC  A4D8               	btfss	status,2,c
  5347  001AFE  EF83  F00D         	goto	u2301
  5348  001B02  EF85  F00D         	goto	u2300
  5349  001B06                     u2301:
  5350  001B06  EF8D  F00D         	goto	l2571
  5351  001B0A                     u2300:
  5352  001B0A  0E00               	movlw	0
  5353  001B0C  6E1D               	movwf	___flge@ff2^0,c
  5354  001B0E  0E00               	movlw	0
  5355  001B10  6E1E               	movwf	(___flge@ff2+1)^0,c
  5356  001B12  0E00               	movlw	0
  5357  001B14  6E1F               	movwf	(___flge@ff2+2)^0,c
  5358  001B16  0E00               	movlw	0
  5359  001B18  6E20               	movwf	(___flge@ff2+3)^0,c
  5360  001B1A                     l2571:
  5361  001B1A  AE1C               	btfss	(___flge@ff1+3)^0,7,c
  5362  001B1C  EF92  F00D         	goto	u2311
  5363  001B20  EF94  F00D         	goto	u2310
  5364  001B24                     u2311:
  5365  001B24  EF9D  F00D         	goto	l2575
  5366  001B28                     u2310:
  5367  001B28  6C19               	negf	___flge@ff1^0,c
  5368  001B2A  1E1A               	comf	(___flge@ff1+1)^0,f,c
  5369  001B2C  B0D8               	btfsc	status,0,c
  5370  001B2E  2A1A               	incf	(___flge@ff1+1)^0,f,c
  5371  001B30  1E1B               	comf	(___flge@ff1+2)^0,f,c
  5372  001B32  B0D8               	btfsc	status,0,c
  5373  001B34  2A1B               	incf	(___flge@ff1+2)^0,f,c
  5374  001B36  0E80               	movlw	128
  5375  001B38  561C               	subfwb	(___flge@ff1+3)^0,f,c
  5376  001B3A                     l2575:
  5377  001B3A  AE20               	btfss	(___flge@ff2+3)^0,7,c
  5378  001B3C  EFA2  F00D         	goto	u2321
  5379  001B40  EFA4  F00D         	goto	u2320
  5380  001B44                     u2321:
  5381  001B44  EFAD  F00D         	goto	l589
  5382  001B48                     u2320:
  5383  001B48  6C1D               	negf	___flge@ff2^0,c
  5384  001B4A  1E1E               	comf	(___flge@ff2+1)^0,f,c
  5385  001B4C  B0D8               	btfsc	status,0,c
  5386  001B4E  2A1E               	incf	(___flge@ff2+1)^0,f,c
  5387  001B50  1E1F               	comf	(___flge@ff2+2)^0,f,c
  5388  001B52  B0D8               	btfsc	status,0,c
  5389  001B54  2A1F               	incf	(___flge@ff2+2)^0,f,c
  5390  001B56  0E80               	movlw	128
  5391  001B58  5620               	subfwb	(___flge@ff2+3)^0,f,c
  5392  001B5A                     l589:
  5393  001B5A  0E00               	movlw	0
  5394  001B5C  1A19               	xorwf	___flge@ff1^0,f,c
  5395  001B5E  0E00               	movlw	0
  5396  001B60  1A1A               	xorwf	(___flge@ff1+1)^0,f,c
  5397  001B62  0E00               	movlw	0
  5398  001B64  1A1B               	xorwf	(___flge@ff1+2)^0,f,c
  5399  001B66  0E80               	movlw	128
  5400  001B68  1A1C               	xorwf	(___flge@ff1+3)^0,f,c
  5401  001B6A  0E00               	movlw	0
  5402  001B6C  1A1D               	xorwf	___flge@ff2^0,f,c
  5403  001B6E  0E00               	movlw	0
  5404  001B70  1A1E               	xorwf	(___flge@ff2+1)^0,f,c
  5405  001B72  0E00               	movlw	0
  5406  001B74  1A1F               	xorwf	(___flge@ff2+2)^0,f,c
  5407  001B76  0E80               	movlw	128
  5408  001B78  1A20               	xorwf	(___flge@ff2+3)^0,f,c
  5409  001B7A  501D               	movf	___flge@ff2^0,w,c
  5410  001B7C  5C19               	subwf	___flge@ff1^0,w,c
  5411  001B7E  501E               	movf	(___flge@ff2+1)^0,w,c
  5412  001B80  581A               	subwfb	(___flge@ff1+1)^0,w,c
  5413  001B82  501F               	movf	(___flge@ff2+2)^0,w,c
  5414  001B84  581B               	subwfb	(___flge@ff1+2)^0,w,c
  5415  001B86  5020               	movf	(___flge@ff2+3)^0,w,c
  5416  001B88  581C               	subwfb	(___flge@ff1+3)^0,w,c
  5417  001B8A  B0D8               	btfsc	status,0,c
  5418  001B8C  EFCA  F00D         	goto	u2331
  5419  001B90  EFCC  F00D         	goto	u2330
  5420  001B94                     u2331:
  5421  001B94  EFCF  F00D         	goto	l2581
  5422  001B98                     u2330:
  5423  001B98  90D8               	bcf	status,0,c
  5424  001B9A  EFD0  F00D         	goto	l594
  5425  001B9E                     l2581:
  5426  001B9E  80D8               	bsf	status,0,c
  5427  001BA0                     l594:
  5428  001BA0  0012               	return		;funcret
  5429  001BA2                     __end_of___flge:
  5430                           	opt callstack 0
  5431                           
  5432 ;; *************** function ___almod *****************
  5433 ;; Defined at:
  5434 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\almod.c"
  5435 ;; Parameters:    Size  Location     Type
  5436 ;;  dividend        4    0[COMRAM] long 
  5437 ;;  divisor         4    4[COMRAM] long 
  5438 ;; Auto vars:     Size  Location     Type
  5439 ;;  sign            1    9[COMRAM] unsigned char 
  5440 ;;  counter         1    8[COMRAM] unsigned char 
  5441 ;; Return value:  Size  Location     Type
  5442 ;;                  4    0[COMRAM] long 
  5443 ;; Registers used:
  5444 ;;		wreg, status,2, status,0
  5445 ;; Tracked objects:
  5446 ;;		On entry : 0/0
  5447 ;;		On exit  : 0/0
  5448 ;;		Unchanged: 0/0
  5449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5450 ;;      Params:         8       0       0       0       0       0       0       0       0
  5451 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5452 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5453 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5454 ;;Total ram usage:       10 bytes
  5455 ;; Hardware stack levels used:    1
  5456 ;; This function calls:
  5457 ;;		Nothing
  5458 ;; This function is called by:
  5459 ;;		_OledApi_printNum
  5460 ;; This function uses a non-reentrant model
  5461 ;;
  5462                           
  5463                           	psect	text35
  5464  001BA2                     __ptext35:
  5465                           	opt callstack 0
  5466  001BA2                     ___almod:
  5467                           	opt callstack 28
  5468  001BA2  0E00               	movlw	0
  5469  001BA4  6E0A               	movwf	___almod@sign^0,c
  5470  001BA6  BE04               	btfsc	(___almod@dividend+3)^0,7,c
  5471  001BA8  EFDA  F00D         	goto	u2040
  5472  001BAC  EFD8  F00D         	goto	u2041
  5473  001BB0                     u2041:
  5474  001BB0  EFE4  F00D         	goto	l2399
  5475  001BB4                     u2040:
  5476  001BB4  1E04               	comf	(___almod@dividend+3)^0,f,c
  5477  001BB6  1E03               	comf	(___almod@dividend+2)^0,f,c
  5478  001BB8  1E02               	comf	(___almod@dividend+1)^0,f,c
  5479  001BBA  6C01               	negf	___almod@dividend^0,c
  5480  001BBC  0E00               	movlw	0
  5481  001BBE  2202               	addwfc	(___almod@dividend+1)^0,f,c
  5482  001BC0  2203               	addwfc	(___almod@dividend+2)^0,f,c
  5483  001BC2  2204               	addwfc	(___almod@dividend+3)^0,f,c
  5484  001BC4  0E01               	movlw	1
  5485  001BC6  6E0A               	movwf	___almod@sign^0,c
  5486  001BC8                     l2399:
  5487  001BC8  BE08               	btfsc	(___almod@divisor+3)^0,7,c
  5488  001BCA  EFEB  F00D         	goto	u2050
  5489  001BCE  EFE9  F00D         	goto	u2051
  5490  001BD2                     u2051:
  5491  001BD2  EFF3  F00D         	goto	l2403
  5492  001BD6                     u2050:
  5493  001BD6  1E08               	comf	(___almod@divisor+3)^0,f,c
  5494  001BD8  1E07               	comf	(___almod@divisor+2)^0,f,c
  5495  001BDA  1E06               	comf	(___almod@divisor+1)^0,f,c
  5496  001BDC  6C05               	negf	___almod@divisor^0,c
  5497  001BDE  0E00               	movlw	0
  5498  001BE0  2206               	addwfc	(___almod@divisor+1)^0,f,c
  5499  001BE2  2207               	addwfc	(___almod@divisor+2)^0,f,c
  5500  001BE4  2208               	addwfc	(___almod@divisor+3)^0,f,c
  5501  001BE6                     l2403:
  5502  001BE6  5005               	movf	___almod@divisor^0,w,c
  5503  001BE8  1006               	iorwf	(___almod@divisor+1)^0,w,c
  5504  001BEA  1007               	iorwf	(___almod@divisor+2)^0,w,c
  5505  001BEC  1008               	iorwf	(___almod@divisor+3)^0,w,c
  5506  001BEE  B4D8               	btfsc	status,2,c
  5507  001BF0  EFFC  F00D         	goto	u2061
  5508  001BF4  EFFE  F00D         	goto	u2060
  5509  001BF8                     u2061:
  5510  001BF8  EF2E  F00E         	goto	l2419
  5511  001BFC                     u2060:
  5512  001BFC  0E01               	movlw	1
  5513  001BFE  6E09               	movwf	___almod@counter^0,c
  5514  001C00  EF08  F00E         	goto	l2409
  5515  001C04                     l2407:
  5516  001C04  90D8               	bcf	status,0,c
  5517  001C06  3605               	rlcf	___almod@divisor^0,f,c
  5518  001C08  3606               	rlcf	(___almod@divisor+1)^0,f,c
  5519  001C0A  3607               	rlcf	(___almod@divisor+2)^0,f,c
  5520  001C0C  3608               	rlcf	(___almod@divisor+3)^0,f,c
  5521  001C0E  2A09               	incf	___almod@counter^0,f,c
  5522  001C10                     l2409:
  5523  001C10  AE08               	btfss	(___almod@divisor+3)^0,7,c
  5524  001C12  EF0D  F00E         	goto	u2071
  5525  001C16  EF0F  F00E         	goto	u2070
  5526  001C1A                     u2071:
  5527  001C1A  EF02  F00E         	goto	l2407
  5528  001C1E                     u2070:
  5529  001C1E                     l2411:
  5530  001C1E  5005               	movf	___almod@divisor^0,w,c
  5531  001C20  5C01               	subwf	___almod@dividend^0,w,c
  5532  001C22  5006               	movf	(___almod@divisor+1)^0,w,c
  5533  001C24  5802               	subwfb	(___almod@dividend+1)^0,w,c
  5534  001C26  5007               	movf	(___almod@divisor+2)^0,w,c
  5535  001C28  5803               	subwfb	(___almod@dividend+2)^0,w,c
  5536  001C2A  5008               	movf	(___almod@divisor+3)^0,w,c
  5537  001C2C  5804               	subwfb	(___almod@dividend+3)^0,w,c
  5538  001C2E  A0D8               	btfss	status,0,c
  5539  001C30  EF1C  F00E         	goto	u2081
  5540  001C34  EF1E  F00E         	goto	u2080
  5541  001C38                     u2081:
  5542  001C38  EF26  F00E         	goto	l2415
  5543  001C3C                     u2080:
  5544  001C3C  5005               	movf	___almod@divisor^0,w,c
  5545  001C3E  5E01               	subwf	___almod@dividend^0,f,c
  5546  001C40  5006               	movf	(___almod@divisor+1)^0,w,c
  5547  001C42  5A02               	subwfb	(___almod@dividend+1)^0,f,c
  5548  001C44  5007               	movf	(___almod@divisor+2)^0,w,c
  5549  001C46  5A03               	subwfb	(___almod@dividend+2)^0,f,c
  5550  001C48  5008               	movf	(___almod@divisor+3)^0,w,c
  5551  001C4A  5A04               	subwfb	(___almod@dividend+3)^0,f,c
  5552  001C4C                     l2415:
  5553  001C4C  90D8               	bcf	status,0,c
  5554  001C4E  3208               	rrcf	(___almod@divisor+3)^0,f,c
  5555  001C50  3207               	rrcf	(___almod@divisor+2)^0,f,c
  5556  001C52  3206               	rrcf	(___almod@divisor+1)^0,f,c
  5557  001C54  3205               	rrcf	___almod@divisor^0,f,c
  5558  001C56  2E09               	decfsz	___almod@counter^0,f,c
  5559  001C58  EF0F  F00E         	goto	l2411
  5560  001C5C                     l2419:
  5561  001C5C  500A               	movf	___almod@sign^0,w,c
  5562  001C5E  B4D8               	btfsc	status,2,c
  5563  001C60  EF34  F00E         	goto	u2091
  5564  001C64  EF36  F00E         	goto	u2090
  5565  001C68                     u2091:
  5566  001C68  EF3E  F00E         	goto	l2423
  5567  001C6C                     u2090:
  5568  001C6C  1E04               	comf	(___almod@dividend+3)^0,f,c
  5569  001C6E  1E03               	comf	(___almod@dividend+2)^0,f,c
  5570  001C70  1E02               	comf	(___almod@dividend+1)^0,f,c
  5571  001C72  6C01               	negf	___almod@dividend^0,c
  5572  001C74  0E00               	movlw	0
  5573  001C76  2202               	addwfc	(___almod@dividend+1)^0,f,c
  5574  001C78  2203               	addwfc	(___almod@dividend+2)^0,f,c
  5575  001C7A  2204               	addwfc	(___almod@dividend+3)^0,f,c
  5576  001C7C                     l2423:
  5577  001C7C  C001  F001         	movff	___almod@dividend,?___almod
  5578  001C80  C002  F002         	movff	___almod@dividend+1,?___almod+1
  5579  001C84  C003  F003         	movff	___almod@dividend+2,?___almod+2
  5580  001C88  C004  F004         	movff	___almod@dividend+3,?___almod+3
  5581  001C8C  0012               	return		;funcret
  5582  001C8E                     __end_of___almod:
  5583                           	opt callstack 0
  5584                           
  5585 ;; *************** function ___aldiv *****************
  5586 ;; Defined at:
  5587 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
  5588 ;; Parameters:    Size  Location     Type
  5589 ;;  dividend        4    0[COMRAM] long 
  5590 ;;  divisor         4    4[COMRAM] long 
  5591 ;; Auto vars:     Size  Location     Type
  5592 ;;  quotient        4   10[COMRAM] long 
  5593 ;;  sign            1    9[COMRAM] unsigned char 
  5594 ;;  counter         1    8[COMRAM] unsigned char 
  5595 ;; Return value:  Size  Location     Type
  5596 ;;                  4    0[COMRAM] long 
  5597 ;; Registers used:
  5598 ;;		wreg, status,2, status,0
  5599 ;; Tracked objects:
  5600 ;;		On entry : 0/0
  5601 ;;		On exit  : 0/0
  5602 ;;		Unchanged: 0/0
  5603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5604 ;;      Params:         8       0       0       0       0       0       0       0       0
  5605 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5606 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5607 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5608 ;;Total ram usage:       14 bytes
  5609 ;; Hardware stack levels used:    1
  5610 ;; This function calls:
  5611 ;;		Nothing
  5612 ;; This function is called by:
  5613 ;;		_OledApi_printNum
  5614 ;; This function uses a non-reentrant model
  5615 ;;
  5616                           
  5617                           	psect	text36
  5618  00188C                     __ptext36:
  5619                           	opt callstack 0
  5620  00188C                     ___aldiv:
  5621                           	opt callstack 28
  5622  00188C  0E00               	movlw	0
  5623  00188E  6E0A               	movwf	___aldiv@sign^0,c
  5624  001890  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
  5625  001892  EF4F  F00C         	goto	u1980
  5626  001896  EF4D  F00C         	goto	u1981
  5627  00189A                     u1981:
  5628  00189A  EF59  F00C         	goto	l2355
  5629  00189E                     u1980:
  5630  00189E  1E08               	comf	(___aldiv@divisor+3)^0,f,c
  5631  0018A0  1E07               	comf	(___aldiv@divisor+2)^0,f,c
  5632  0018A2  1E06               	comf	(___aldiv@divisor+1)^0,f,c
  5633  0018A4  6C05               	negf	___aldiv@divisor^0,c
  5634  0018A6  0E00               	movlw	0
  5635  0018A8  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
  5636  0018AA  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
  5637  0018AC  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
  5638  0018AE  0E01               	movlw	1
  5639  0018B0  6E0A               	movwf	___aldiv@sign^0,c
  5640  0018B2                     l2355:
  5641  0018B2  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
  5642  0018B4  EF60  F00C         	goto	u1990
  5643  0018B8  EF5E  F00C         	goto	u1991
  5644  0018BC                     u1991:
  5645  0018BC  EF6A  F00C         	goto	l2361
  5646  0018C0                     u1990:
  5647  0018C0  1E04               	comf	(___aldiv@dividend+3)^0,f,c
  5648  0018C2  1E03               	comf	(___aldiv@dividend+2)^0,f,c
  5649  0018C4  1E02               	comf	(___aldiv@dividend+1)^0,f,c
  5650  0018C6  6C01               	negf	___aldiv@dividend^0,c
  5651  0018C8  0E00               	movlw	0
  5652  0018CA  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
  5653  0018CC  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
  5654  0018CE  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
  5655  0018D0  0E01               	movlw	1
  5656  0018D2  1A0A               	xorwf	___aldiv@sign^0,f,c
  5657  0018D4                     l2361:
  5658  0018D4  0E00               	movlw	0
  5659  0018D6  6E0B               	movwf	___aldiv@quotient^0,c
  5660  0018D8  0E00               	movlw	0
  5661  0018DA  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  5662  0018DC  0E00               	movlw	0
  5663  0018DE  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  5664  0018E0  0E00               	movlw	0
  5665  0018E2  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  5666  0018E4  5005               	movf	___aldiv@divisor^0,w,c
  5667  0018E6  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  5668  0018E8  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  5669  0018EA  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  5670  0018EC  B4D8               	btfsc	status,2,c
  5671  0018EE  EF7B  F00C         	goto	u2001
  5672  0018F2  EF7D  F00C         	goto	u2000
  5673  0018F6                     u2001:
  5674  0018F6  EFB3  F00C         	goto	l2383
  5675  0018FA                     u2000:
  5676  0018FA  0E01               	movlw	1
  5677  0018FC  6E09               	movwf	___aldiv@counter^0,c
  5678  0018FE  EF87  F00C         	goto	l2369
  5679  001902                     l2367:
  5680  001902  90D8               	bcf	status,0,c
  5681  001904  3605               	rlcf	___aldiv@divisor^0,f,c
  5682  001906  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
  5683  001908  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
  5684  00190A  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
  5685  00190C  2A09               	incf	___aldiv@counter^0,f,c
  5686  00190E                     l2369:
  5687  00190E  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
  5688  001910  EF8C  F00C         	goto	u2011
  5689  001914  EF8E  F00C         	goto	u2010
  5690  001918                     u2011:
  5691  001918  EF81  F00C         	goto	l2367
  5692  00191C                     u2010:
  5693  00191C                     l2371:
  5694  00191C  90D8               	bcf	status,0,c
  5695  00191E  360B               	rlcf	___aldiv@quotient^0,f,c
  5696  001920  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
  5697  001922  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
  5698  001924  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
  5699  001926  5005               	movf	___aldiv@divisor^0,w,c
  5700  001928  5C01               	subwf	___aldiv@dividend^0,w,c
  5701  00192A  5006               	movf	(___aldiv@divisor+1)^0,w,c
  5702  00192C  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
  5703  00192E  5007               	movf	(___aldiv@divisor+2)^0,w,c
  5704  001930  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
  5705  001932  5008               	movf	(___aldiv@divisor+3)^0,w,c
  5706  001934  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
  5707  001936  A0D8               	btfss	status,0,c
  5708  001938  EFA0  F00C         	goto	u2021
  5709  00193C  EFA2  F00C         	goto	u2020
  5710  001940                     u2021:
  5711  001940  EFAB  F00C         	goto	l2379
  5712  001944                     u2020:
  5713  001944  5005               	movf	___aldiv@divisor^0,w,c
  5714  001946  5E01               	subwf	___aldiv@dividend^0,f,c
  5715  001948  5006               	movf	(___aldiv@divisor+1)^0,w,c
  5716  00194A  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
  5717  00194C  5007               	movf	(___aldiv@divisor+2)^0,w,c
  5718  00194E  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
  5719  001950  5008               	movf	(___aldiv@divisor+3)^0,w,c
  5720  001952  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
  5721  001954  800B               	bsf	___aldiv@quotient^0,0,c
  5722  001956                     l2379:
  5723  001956  90D8               	bcf	status,0,c
  5724  001958  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
  5725  00195A  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
  5726  00195C  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
  5727  00195E  3205               	rrcf	___aldiv@divisor^0,f,c
  5728  001960  2E09               	decfsz	___aldiv@counter^0,f,c
  5729  001962  EF8E  F00C         	goto	l2371
  5730  001966                     l2383:
  5731  001966  500A               	movf	___aldiv@sign^0,w,c
  5732  001968  B4D8               	btfsc	status,2,c
  5733  00196A  EFB9  F00C         	goto	u2031
  5734  00196E  EFBB  F00C         	goto	u2030
  5735  001972                     u2031:
  5736  001972  EFC3  F00C         	goto	l2387
  5737  001976                     u2030:
  5738  001976  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
  5739  001978  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
  5740  00197A  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
  5741  00197C  6C0B               	negf	___aldiv@quotient^0,c
  5742  00197E  0E00               	movlw	0
  5743  001980  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
  5744  001982  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
  5745  001984  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
  5746  001986                     l2387:
  5747  001986  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  5748  00198A  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  5749  00198E  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  5750  001992  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  5751  001996  0012               	return		;funcret
  5752  001998                     __end_of___aldiv:
  5753                           	opt callstack 0
  5754                           
  5755                           	psect	text37
  5756  000000                     __ptext37:
  5757                           	opt callstack 0
  5758  000000                     
  5759                           	psect	rparam
  5760  0000                     tosu	equ	0xFFF
  5761                           tosh	equ	0xFFE
  5762                           tosl	equ	0xFFD
  5763                           stkptr	equ	0xFFC
  5764                           pclatu	equ	0xFFB
  5765                           pclath	equ	0xFFA
  5766                           pcl	equ	0xFF9
  5767                           tblptru	equ	0xFF8
  5768                           tblptrh	equ	0xFF7
  5769                           tblptrl	equ	0xFF6
  5770                           tablat	equ	0xFF5
  5771                           prodh	equ	0xFF4
  5772                           prodl	equ	0xFF3
  5773                           indf0	equ	0xFEF
  5774                           postinc0	equ	0xFEE
  5775                           postdec0	equ	0xFED
  5776                           preinc0	equ	0xFEC
  5777                           plusw0	equ	0xFEB
  5778                           fsr0h	equ	0xFEA
  5779                           fsr0l	equ	0xFE9
  5780                           wreg	equ	0xFE8
  5781                           indf1	equ	0xFE7
  5782                           postinc1	equ	0xFE6
  5783                           postdec1	equ	0xFE5
  5784                           preinc1	equ	0xFE4
  5785                           plusw1	equ	0xFE3
  5786                           fsr1h	equ	0xFE2
  5787                           fsr1l	equ	0xFE1
  5788                           bsr	equ	0xFE0
  5789                           indf2	equ	0xFDF
  5790                           postinc2	equ	0xFDE
  5791                           postdec2	equ	0xFDD
  5792                           preinc2	equ	0xFDC
  5793                           plusw2	equ	0xFDB
  5794                           fsr2h	equ	0xFDA
  5795                           fsr2l	equ	0xFD9
  5796                           status	equ	0xFD8


Data Sizes:
    Strings     15
    Constant    0
    Data        17
    BSS         170
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     91      95
    BANK0           160      0      53
    BANK1           256      0     130
    BANK2           256      0       0
    BANK3           244      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    S876$1$0	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    func$0	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    func$0	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    call@p	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    __funcs_on_exit@arg	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    head.a	PTR void [32] size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    head.f	PTR FTN(PTR void ,)void [32] size(2) Largest target is 1
		 -> call(), 

    head.next	PTR struct fl size(2) Largest target is 0

    head	PTR struct fl size(2) Largest target is 163
		 -> builtin(BANK1[130]), NULL(NULL[0]), 

    __funcs_on_exit@func	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> call(), 

    S876fl$a	PTR void [32] size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    builtin.a	PTR void [32] size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    S876fl$f	PTR FTN(PTR void ,)void [32] size(2) Largest target is 1
		 -> call(), 

    builtin.f	PTR FTN(PTR void ,)void [32] size(2) Largest target is 1
		 -> call(), 

    S876fl$next	PTR struct fl size(2) Largest target is 0

    builtin.next	PTR struct fl size(2) Largest target is 0

    send@buf	PTR void  size(2) Largest target is 17
		 -> write@value(COMRAM[1]), command@value(COMRAM[1]), OledApi_printNum@s(COMRAM[17]), ?_OledApi_printf(COMRAM[1]), 
		 -> STR_1(CODE[3]), 

    send@p	PTR unsigned char  size(2) Largest target is 17
		 -> write@value(COMRAM[1]), command@value(COMRAM[1]), OledApi_printNum@s(COMRAM[17]), ?_OledApi_printf(COMRAM[1]), 
		 -> STR_1(CODE[3]), 

    writeStr@value	PTR const unsigned char  size(2) Largest target is 17
		 -> OledApi_printNum@s(COMRAM[17]), ?_OledApi_printf(COMRAM[1]), STR_1(CODE[3]), 

    OledApi_printStr@s	PTR const unsigned char  size(2) Largest target is 3
		 -> ?_OledApi_printf(COMRAM[1]), STR_1(CODE[3]), 

    OledApi_printf@s	PTR unsigned char  size(2) Largest target is 12
		 -> STR_2(CODE[12]), 

    OledApi_printf@list	PTR void [1] size(2) Largest target is 1
		 -> ?_OledApi_printf(COMRAM[1]), 

    OledApi_createChar@charmap	PTR unsigned char  size(2) Largest target is 8
		 -> ac(BANK0[8]), dc(BANK0[8]), 

    DIGITAL_WRITE@port	PTR unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), 


Critical Paths under _main in COMRAM

    _main->_OledApi_printf
    _setup->_OledApi_printStr
    _OledApi_createChar->_command
    _OledApi_createChar->_write
    _OledApi_begin->_OledApi_clear
    _OledApi_clear->_command
    _OledApi_home->_command
    _ADC_Api_config->_SPI_Api_sendWord
    _OledApi_printf->_OledApi_printNum
    _OledApi_printStr->_OledApi_setCursor
    _OledApi_setCursor->_command
    _command->_send
    _OledApi_printSpec->_write
    _write->_send
    _OledApi_printNum->___flge
    _writeStr->_send
    _send->_SPI_Api_sendWord
    _SPI_Api_setSpiDevice->_DIGITAL_WRITE
    _SPI_Api_sendWord->_SPI_Api_sendBit
    _SPI_Api_sendBit->_DIGITAL_WRITE
    _SPI_Api_end->_DIGITAL_WRITE
    _SPI_Api_begin->_DIGITAL_WRITE
    _exit->___funcs_on_exit
    ___funcs_on_exit->_call
    ___flsub->___fladd
    ___flge->___flsub

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  206782
                                             89 COMRAM     2     2      0
                      _OledApi_clear
                     _OledApi_printf
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                2     2      0  105451
                                             41 COMRAM     2     2      0
                     _ADC_Api_config
                       _ADC_Api_init
                      _OledApi_begin
                 _OledApi_createChar
                       _OledApi_init
                   _OledApi_printStr
                  _OledApi_setCursor
 ---------------------------------------------------------------------------------
 (2) _OledApi_init                                         2     2      0      66
                                              0 COMRAM     2     2      0
                 _SPI_Api_initialize
 ---------------------------------------------------------------------------------
 (2) _OledApi_createChar                                   5     3      2   22243
                                             32 COMRAM     5     3      2
                            _command
                              _write
 ---------------------------------------------------------------------------------
 (2) _OledApi_begin                                        2     1      1   44032
                                             33 COMRAM     1     0      1
                      _OledApi_clear
                       _OledApi_home
                            _command
 ---------------------------------------------------------------------------------
 (3) _OledApi_clear                                        1     1      0   21978
                                             32 COMRAM     1     1      0
                       _OledApi_home
                            _command
 ---------------------------------------------------------------------------------
 (3) _OledApi_home                                         0     0      0   10989
                            _command
 ---------------------------------------------------------------------------------
 (2) _ADC_Api_init                                         3     3      0      66
                                              0 COMRAM     3     3      0
                 _SPI_Api_initialize
 ---------------------------------------------------------------------------------
 (3) _SPI_Api_initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Api_config                                       0     0      0    4526
                   _SPI_Api_sendWord
               _SPI_Api_setSpiDevice
 ---------------------------------------------------------------------------------
 (1) _OledApi_printf                                      16    11      5   79353
                                             73 COMRAM    16    11      5
                   _OledApi_printNum
                  _OledApi_printSpec
                   _OledApi_printStr
                  _OledApi_setCursor
                           ___xxtofl
                               _exit
                              _write
 ---------------------------------------------------------------------------------
 (2) _OledApi_printStr                                     5     3      2   23233
                                             36 COMRAM     5     3      2
                  _OledApi_setCursor
                           _writeStr
 ---------------------------------------------------------------------------------
 (2) _OledApi_setCursor                                    4     3      1   11285
                                             32 COMRAM     4     3      1
                            _command
 ---------------------------------------------------------------------------------
 (3) _command                                              1     1      0   10989
                                             31 COMRAM     1     1      0
                               _send
 ---------------------------------------------------------------------------------
 (2) _OledApi_printSpec                                    1     1      0   11686
                                             32 COMRAM     1     1      0
                               _exit
                              _write
 ---------------------------------------------------------------------------------
 (3) _write                                                1     1      0   10989
                                             31 COMRAM     1     1      0
                               _send
 ---------------------------------------------------------------------------------
 (2) _OledApi_printNum                                    37    32      5   20420
                                             36 COMRAM    37    32      5
                            ___aldiv
                            ___almod
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                               _exit
                           _writeStr
 ---------------------------------------------------------------------------------
 (3) _writeStr                                             3     0      3   11618
                                             31 COMRAM     3     0      3
                               _send
 ---------------------------------------------------------------------------------
 (4) _send                                                13     9      4   10966
                                             18 COMRAM    13     9      4
                      _SPI_Api_begin
                        _SPI_Api_end
                    _SPI_Api_sendBit
                   _SPI_Api_sendWord
               _SPI_Api_setSpiDevice
 ---------------------------------------------------------------------------------
 (5) _SPI_Api_setSpiDevice                                 4     1      3    2252
                                              5 COMRAM     4     1      3
                      _DIGITAL_WRITE
 ---------------------------------------------------------------------------------
 (5) _SPI_Api_sendWord                                    12     8      4    2274
                                              6 COMRAM    12     8      4
                    _SPI_Api_sendBit
 ---------------------------------------------------------------------------------
 (6) _SPI_Api_sendBit                                      1     1      0    1956
                                              5 COMRAM     1     1      0
                      _DIGITAL_WRITE
 ---------------------------------------------------------------------------------
 (5) _SPI_Api_end                                          0     0      0    1934
                      _DIGITAL_WRITE
 ---------------------------------------------------------------------------------
 (5) _SPI_Api_begin                                        0     0      0    1934
                      _DIGITAL_WRITE
 ---------------------------------------------------------------------------------
 (6) _DIGITAL_WRITE                                        5     1      4    1934
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) _exit                                                 2     0      2     653
                                             10 COMRAM     2     0      2
                              __Exit
                    ___funcs_on_exit
 ---------------------------------------------------------------------------------
 (3) ___funcs_on_exit                                      8     8      0      99
                                              2 COMRAM     8     8      0
                               _call *
 ---------------------------------------------------------------------------------
 (4) _call                                                 2     0      2      53
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) __Exit                                                2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     523
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    2737
                                             16 COMRAM     8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    2262
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    1744
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     486
                                             24 COMRAM    12     4      8
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___almod                                             10     2      8     600
                                              0 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     604
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OledApi_clear
     _OledApi_home
       _command
         _send
           _SPI_Api_begin
             _DIGITAL_WRITE
           _SPI_Api_end
             _DIGITAL_WRITE
           _SPI_Api_sendBit
             _DIGITAL_WRITE
           _SPI_Api_sendWord
             _SPI_Api_sendBit
               _DIGITAL_WRITE
           _SPI_Api_setSpiDevice
             _DIGITAL_WRITE
     _command
       _send
         _SPI_Api_begin
           _DIGITAL_WRITE
         _SPI_Api_end
           _DIGITAL_WRITE
         _SPI_Api_sendBit
           _DIGITAL_WRITE
         _SPI_Api_sendWord
           _SPI_Api_sendBit
             _DIGITAL_WRITE
         _SPI_Api_setSpiDevice
           _DIGITAL_WRITE
   _OledApi_printf
     _OledApi_printNum
       ___aldiv
       ___almod
       ___flge
         ___flsub (ARG)
           ___fladd
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
       ___flsub
         ___fladd
         ___xxtofl (ARG)
       ___fltol
       ___xxtofl
       _exit
         __Exit
         ___funcs_on_exit
           _call *
       _writeStr
         _send
           _SPI_Api_begin
             _DIGITAL_WRITE
           _SPI_Api_end
             _DIGITAL_WRITE
           _SPI_Api_sendBit
             _DIGITAL_WRITE
           _SPI_Api_sendWord
             _SPI_Api_sendBit
               _DIGITAL_WRITE
           _SPI_Api_setSpiDevice
             _DIGITAL_WRITE
     _OledApi_printSpec
       _exit
         __Exit
         ___funcs_on_exit
           _call *
       _write
         _send
           _SPI_Api_begin
             _DIGITAL_WRITE
           _SPI_Api_end
             _DIGITAL_WRITE
           _SPI_Api_sendBit
             _DIGITAL_WRITE
           _SPI_Api_sendWord
             _SPI_Api_sendBit
               _DIGITAL_WRITE
           _SPI_Api_setSpiDevice
             _DIGITAL_WRITE
     _OledApi_printStr
       _OledApi_setCursor
         _command
           _send
             _SPI_Api_begin
               _DIGITAL_WRITE
             _SPI_Api_end
               _DIGITAL_WRITE
             _SPI_Api_sendBit
               _DIGITAL_WRITE
             _SPI_Api_sendWord
               _SPI_Api_sendBit
                 _DIGITAL_WRITE
             _SPI_Api_setSpiDevice
               _DIGITAL_WRITE
       _writeStr
         _send
           _SPI_Api_begin
             _DIGITAL_WRITE
           _SPI_Api_end
             _DIGITAL_WRITE
           _SPI_Api_sendBit
             _DIGITAL_WRITE
           _SPI_Api_sendWord
             _SPI_Api_sendBit
               _DIGITAL_WRITE
           _SPI_Api_setSpiDevice
             _DIGITAL_WRITE
     _OledApi_setCursor
       _command
         _send
           _SPI_Api_begin
             _DIGITAL_WRITE
           _SPI_Api_end
             _DIGITAL_WRITE
           _SPI_Api_sendBit
             _DIGITAL_WRITE
           _SPI_Api_sendWord
             _SPI_Api_sendBit
               _DIGITAL_WRITE
           _SPI_Api_setSpiDevice
             _DIGITAL_WRITE
     ___xxtofl
     _exit
       __Exit
       ___funcs_on_exit
         _call *
     _write
       _send
         _SPI_Api_begin
           _DIGITAL_WRITE
         _SPI_Api_end
           _DIGITAL_WRITE
         _SPI_Api_sendBit
           _DIGITAL_WRITE
         _SPI_Api_sendWord
           _SPI_Api_sendBit
             _DIGITAL_WRITE
         _SPI_Api_setSpiDevice
           _DIGITAL_WRITE
   _setup
     _ADC_Api_config
       _SPI_Api_sendWord
         _SPI_Api_sendBit
           _DIGITAL_WRITE
       _SPI_Api_setSpiDevice
         _DIGITAL_WRITE
     _ADC_Api_init
       _SPI_Api_initialize
     _OledApi_begin
       _OledApi_clear
         _OledApi_home
           _command
             _send
               _SPI_Api_begin
                 _DIGITAL_WRITE
               _SPI_Api_end
                 _DIGITAL_WRITE
               _SPI_Api_sendBit
                 _DIGITAL_WRITE
               _SPI_Api_sendWord
                 _SPI_Api_sendBit
                   _DIGITAL_WRITE
               _SPI_Api_setSpiDevice
                 _DIGITAL_WRITE
         _command
           _send
             _SPI_Api_begin
               _DIGITAL_WRITE
             _SPI_Api_end
               _DIGITAL_WRITE
             _SPI_Api_sendBit
               _DIGITAL_WRITE
             _SPI_Api_sendWord
               _SPI_Api_sendBit
                 _DIGITAL_WRITE
             _SPI_Api_setSpiDevice
               _DIGITAL_WRITE
       _OledApi_home
         _command
           _send
             _SPI_Api_begin
               _DIGITAL_WRITE
             _SPI_Api_end
               _DIGITAL_WRITE
             _SPI_Api_sendBit
               _DIGITAL_WRITE
             _SPI_Api_sendWord
               _SPI_Api_sendBit
                 _DIGITAL_WRITE
             _SPI_Api_setSpiDevice
               _DIGITAL_WRITE
       _command
         _send
           _SPI_Api_begin
             _DIGITAL_WRITE
           _SPI_Api_end
             _DIGITAL_WRITE
           _SPI_Api_sendBit
             _DIGITAL_WRITE
           _SPI_Api_sendWord
             _SPI_Api_sendBit
               _DIGITAL_WRITE
           _SPI_Api_setSpiDevice
             _DIGITAL_WRITE
     _OledApi_createChar
       _command
         _send
           _SPI_Api_begin
             _DIGITAL_WRITE
           _SPI_Api_end
             _DIGITAL_WRITE
           _SPI_Api_sendBit
             _DIGITAL_WRITE
           _SPI_Api_sendWord
             _SPI_Api_sendBit
               _DIGITAL_WRITE
           _SPI_Api_setSpiDevice
             _DIGITAL_WRITE
       _write
         _send
           _SPI_Api_begin
             _DIGITAL_WRITE
           _SPI_Api_end
             _DIGITAL_WRITE
           _SPI_Api_sendBit
             _DIGITAL_WRITE
           _SPI_Api_sendWord
             _SPI_Api_sendBit
               _DIGITAL_WRITE
           _SPI_Api_setSpiDevice
             _DIGITAL_WRITE
     _OledApi_init
       _SPI_Api_initialize
     _OledApi_printStr
       _OledApi_setCursor
         _command
           _send
             _SPI_Api_begin
               _DIGITAL_WRITE
             _SPI_Api_end
               _DIGITAL_WRITE
             _SPI_Api_sendBit
               _DIGITAL_WRITE
             _SPI_Api_sendWord
               _SPI_Api_sendBit
                 _DIGITAL_WRITE
             _SPI_Api_setSpiDevice
               _DIGITAL_WRITE
       _writeStr
         _send
           _SPI_Api_begin
             _DIGITAL_WRITE
           _SPI_Api_end
             _DIGITAL_WRITE
           _SPI_Api_sendBit
             _DIGITAL_WRITE
           _SPI_Api_sendWord
             _SPI_Api_sendBit
               _DIGITAL_WRITE
           _SPI_Api_setSpiDevice
             _DIGITAL_WRITE
     _OledApi_setCursor
       _command
         _send
           _SPI_Api_begin
             _DIGITAL_WRITE
           _SPI_Api_end
             _DIGITAL_WRITE
           _SPI_Api_sendBit
             _DIGITAL_WRITE
           _SPI_Api_sendWord
             _SPI_Api_sendBit
               _DIGITAL_WRITE
           _SPI_Api_setSpiDevice
             _DIGITAL_WRITE

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM_1           400      0       0      21        0.0%
BIGRAM             3F3      0       0      22        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      82       7       50.8%
BITBANK3            F4      0       0      12        0.0%
BANK3               F4      0       0      10        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      35       5       33.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5B      5F       1      100.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     116      11        0.0%
DATA                 0      0     116       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Mar 26 12:48:34 2020

             DIGITAL_WRITE@pin 0003               DIGITAL_WRITE@val 0004                             l45 2344  
                           l48 2042                             _ac 0085                             _dc 008D  
                  __CFG_BOR$ON 000000                    __CFG_BORV$3 000000                  writeStr@value 0020  
                 __CFG_CP0$OFF 000000                   __CFG_CP1$OFF 000000                   __CFG_CP2$OFF 000000  
                 __CFG_CP3$OFF 000000                    __CFG_LVP$ON 000000              DIGITAL_WRITE@port 0001  
                          l111 22DC                            l120 247C                            l114 2376  
                          l117 23BC                            l303 1F2A                            l215 14CA  
                          l127 2310                            l223 1FC6                            l240 1DEA  
                          l232 2452                            l226 23F2                            l403 1996  
                          l236 1E4E                            l172 239C                            l229 240C  
                          l318 226A                            l262 222A                            l416 1C8C  
                          l192 16D6                            l168 215A                            l265 21A4  
                          l291 20B2                            l292 207A                            l621 1A9C  
                          l293 2090                            l285 23D8                            l296 243C  
                          l288 2068                            l299 2424                            l594 1BA0  
                          l852 0A00                            l589 1B5A                            l861 0CD0  
                          l853 09EE                            l942 10FA                            l854 09B4  
                          l945 0F8C                            l938 0D96                            l955 10BC  
                          l947 1004                            l948 0FF2                            l869 0B1A  
                          l878 0BEA                            l894 21EA                            l982 188A  
                          l879 0BD8                            l993 1822                            l986 17C6  
                          l979 172E                 ?_SPI_Api_begin 0001                   __CFG_CPB$OFF 000000  
                 __CFG_CPD$OFF 000000                            tosl 000FFD                            wreg 000FE8  
                 ___flmul@aexp 0012                   ___flmul@bexp 0013                   ___flmul@sign 000D  
                 ___flmul@temp 0018                   ___flmul@prod 0014                   ___fltol@exp1 000A  
                 __CFG_WDT$OFF 000000                           l1002 2464                           l1005 247E  
                         l1030 2484                           l1022 1D70                           l2011 2332  
                         l2013 222E                           l2021 205E                           l2101 2476  
                         l2111 083E                           l2103 0812                           l2007 2312  
                         l2031 209C                           l2201 09EC                           l2121 0878  
                         l2113 084E                           l2105 081E                           l2009 2322  
                         l2033 20B0                           l2025 2064                           l2017 2044  
                         l2211 0A42                           l2203 0A0E                           l2131 08A6  
                         l2123 087E                           l2115 085E                           l2107 082C  
                         l2051 1EFA                           l2043 1E50                           l2027 2088  
                         l2019 204C                           l2301 0CC0                           l2221 0A7C  
                         l2213 0A50                           l2205 0A1E                           l2141 08DA  
                         l2133 08A8                           l2125 0890                           l2117 0860  
                         l2109 082E                           l2037 2426                           l2061 2422  
                         l2053 1F04                           l2231 0AE8                           l2223 0A7E  
                         l2215 0A5E                           l2151 0916                           l2135 08B8  
                         l2143 08E2                           l2127 0892                           l2119 0868  
                         l2311 1D18                           l2039 243A                           l2055 1F0A  
                         l2047 1E94                           l2071 1D8E                           l2401 1BD6  
                         l2241 0B40                           l2233 0AEA                           l2225 0A88  
                         l2217 0A6A                           l2209 0A32                           l2161 092A  
                         l2153 091A                           l2145 08F2                           l2137 08C8  
                         l2129 0898                           l2313 1D44                           l2305 1C8E  
                         l2049 1ECC                           l2057 1F14                           l2081 1DCA  
                         l2073 1D9E                           l2065 1D74                           l2321 22F0  
                         l2411 1C1E                           l2403 1BE6                           l2251 0B6E  
                         l2235 0AFA                           l2219 0A6E                           l2227 0A8E  
                         l2171 093E                           l2163 092E                           l2155 091E  
                         l2147 0904                           l2139 08D8                           l2315 1D54  
                         l2307 1C92                           l2059 240E                           l2091 1E1A  
                         l2083 1DDA                           l2075 1DA2                           l2323 22FC  
                         l2331 23B8                           l2421 1C6C                           l2413 1C3C  
                         l2405 1BFC                           l2501 0EE6                           l2253 0B7C  
                         l2245 0B54                           l2261 0B9A                           l2229 0AB4  
                         l2237 0B0A                           l2173 0942                           l2165 0932  
                         l2157 0922                           l2149 0912                           l2181 0952  
                         l2309 1CF6                           l2317 1D5C                           l2341 2454  
                         l2093 1E2E                           l2085 1DE4                           l2077 1DAA  
                         l2069 1D8A                           l2325 2304                           l2333 23BE  
                         l2351 189E                           l2423 1C7C                           l2415 1C4C  
                         l2407 1C04                           l2511 0F7C                           l2503 0F10  
                         l2431 0CEC                           l2255 0B84                           l2247 0B5E  
                         l2239 0B30                           l2263 0BA8                           l2191 09C2  
                         l2183 0956                           l2175 0946                           l2167 0936  
                         l2159 0926                           l2343 2458                           l2095 1E32  
                         l2087 1DF0                           l2079 1DBA                           l2319 22E0  
                         l2327 239E                           l2361 18D4                           l2353 18AE  
                         l2417 1C56                           l2409 1C10                           l2521 0FBC  
                         l2513 0F8A                           l2505 0F46                           l2441 0D24  
                         l2433 0CEE                           l2273 0BFA                           l2281 0C50  
                         l2265 0BAC                           l2257 0B88                           l2249 0B6C  
                         l2193 09CE                           l2185 0980                           l2177 094A  
                         l2169 093A                           l2601 1A10                           l2097 1E4A  
                         l2089 1DF4                           l2345 243E                           l2337 23D0  
                         l2329 23A4                           l2371 191C                           l2363 18E4  
                         l2355 18B2                           l2347 188C                           l2419 1C5C  
                         l2531 102E                           l2523 0FEA                           l2515 0F9C  
                         l2507 0F54                           l2451 0D50                           l2443 0D34  
                         l2435 0CFE                           l2427 0CD2                           l2291 0CA2  
                         l2283 0C60                           l2275 0C06                           l2267 0BBA  
                         l2259 0B98                           l2195 09D2                           l2187 099C  
                         l2179 094E                           l2611 1A3C                           l2339 23F6  
                         l2099 23DC                           l2381 1960                           l2373 1926  
                         l2365 18FA                           l2357 18C0                           l2349 1890  
                         l2541 10A4                           l2533 1058                           l2517 0FAA  
                         l2509 0F72                           l2461 0DA6                           l2453 0D60  
                         l2445 0D3A                           l2437 0D0E                           l2429 0CDE  
                         l2293 0CA8                           l2285 0C70                           l2277 0C14  
                         l2269 0BD0                           l2197 09E0                           l2189 09AC  
                         l2621 1A6C                           l2701 220E                           l2375 1944  
                         l2367 1902                           l2383 1966                           l2359 18D0  
                         l2391 1BA2                           l2543 10C0                           l2551 10E6  
                         l2527 1014                           l2535 105C                           l2519 0FAE  
                         l2471 0DE0                           l2463 0DB6                           l2455 0D70  
                         l2447 0D40                           l2439 0D1E                           l2295 0CAA  
                         l2287 0C90                           l2279 0C4E                           l2199 09E2  
                         l2623 1A7C                           l2607 1A28                           l2631 16EA  
                         l2711 236A                           l2703 2346                           l2385 1976  
                         l2377 1954                           l2369 190E                           l2393 1BA6  
                         l2553 10EA                           l2545 10D0                           l2537 1076  
                         l2529 1020                           l2481 0E32                           l2473 0DF6  
                         l2457 0D80                           l2449 0D4E                           l2297 0CB0  
                         l2289 0C94                           l2625 1A8C                           l2617 1A50  
                         l2609 1A32                           l2641 1768                           l2633 16F8  
                         l2801 13E4                           l2721 1F72                           l2713 215C  
                         l2705 235A                           l2387 1986                           l2379 1956  
                         l2395 1BB4                           l2571 1B1A                           l2563 1A9E  
                         l2547 10DE                           l2539 108A                           l2491 0E78  
                         l2483 0E40                           l2475 0E02                           l2467 0DCA  
                         l2459 0D86                           l2299 0CBE                           l2619 1A5C  
                         l2651 17BC                           l2643 1770                           l2635 173E  
                         l2811 1492                           l2803 1420                           l2723 1F82  
                         l2715 1F2C                           l2707 235E                           l2731 2120  
                         l2397 1BC4                           l2581 1B9E                           l2573 1B28  
                         l2565 1ACC                           l2549 10E0                           l2493 0E92  
                         l2485 0E4C                           l2477 0E1A                           l2469 0DD6  
                         l2557 21A6                           l2661 1832                           l2653 17F8  
                         l2645 177C                           l2637 1754                           l2629 16DA  
                         l2813 149E                           l2805 1454                           l2725 1FB6  
                         l2717 1F34                           l2709 2366                           l2741 213E  
                         l2821 1FDA                           l2399 1BC8                           l2575 1B3A  
                         l2567 1ADC                           l2495 0EA2                           l2487 0E5C  
                         l2479 0E26                           l2559 21B6                           l2591 19C2  
                         l2671 187A                           l2663 1836                           l2655 1804  
                         l2647 17AE                           l2815 14B4                           l2807 1472  
                         l2751 1108                           l2743 237A                           l2719 1F36  
                         l2727 2110                           l2831 1FFE                           l2823 1FE0  
                         l2911 229E                           l2903 226C                           l2577 1B48  
                         l2569 1B0A                           l2497 0EBE                           l2489 0E68  
                         l2593 19EC                           l2585 1998                           l2665 185A  
                         l2657 1812                           l2649 17B0                           l2809 1480  
                         l2761 11BE                           l2753 1110                           l2745 238A  
                         l2841 14D0                           l2737 2128                           l2729 2114  
                         l2681 22BA                           l2833 200A                           l2825 1FE6  
                         l2817 1FC8                           l2905 2270                           l2579 1B98  
                         l2499 0ECA                           l2595 19EE                           l2587 19AE  
                         l2667 186A                           l2659 1830                           l2771 1250  
                         l2763 11C2                           l2755 1134                           l2747 2396  
                         l2851 151A                           l2843 14DC                           l2691 21F6  
                         l2739 213A                           l2683 22C0                           l2675 22AC  
                         l2835 2026                           l2827 1FF0                           l2819 1FD0  
                         l2907 2286                           l2597 19FE                           l2669 1878  
                         l2781 12F0                           l2773 125C                           l2765 11EA  
                         l2757 117E                           l2749 10FC                           l2861 1578  
                         l2853 1522                           l2845 14F8                           l2693 21FC  
                         l2685 22C4                           l2677 22B2                           l2837 2034  
                         l2829 1FF4                           l2909 2288                           l2599 1A02  
                         l2791 1392                           l2783 12FC                           l2775 1262  
                         l2767 120E                           l2759 118A                           l2871 15C6  
                         l2863 1598                           l2855 1552                           l2847 150A  
                         l2839 14CC                           l2695 2200                           l2687 22C8  
                         l2679 22B6                           l2793 13A4                           l2785 1338  
                         l2777 12CE                           l2769 121E                           l2881 15EC  
                         l2857 156A                           l2849 1516                           l2697 2204  
                         l2689 21EE                           l2795 13B0                           l2779 12DE  
                         l2787 136C                           l2883 1606                           l2875 15D2  
                         l2867 15A4                           l2891 1692                           l2859 1572  
                         l2699 220A                           l2797 13C6                           l2789 1382  
                         l2885 1620                           l2877 15E0                           l2869 15B2  
                         l2893 16A6                           l2799 13D8                           l2895 16B6  
                         l2887 1624                           l2889 1642                           l2897 16BA  
                         l2995 1664                           STR_1 080D                           STR_2 0801  
                         u2000 18FA                           u2001 18F6                           u2010 191C  
                         u2011 1918                           u2020 1944                           u2100 0CEC  
                         u2021 1940                           u2101 0CE8                           u2030 1976  
                         u2110 0CFE                           u2031 1972                           u2111 0CFA  
                         u2040 1BB4                           u2200 0FAA                           u2120 0D0E  
                         u1400 2322                           u2041 1BB0                           u2201 0FA6  
                         u2121 0D0A                           u1401 231E                           u2050 1BD6  
                         u2210 0FBC                           u2130 0D4E                           u1410 205E  
                         u2051 1BD2                           u2211 0FB8                           u2131 0D4A  
                         u1411 205A                           u2060 1BFC                           u2300 1B0A  
                         u2220 0FEA                           u2140 0D60                           u1420 207A  
                         u1500 1DCA                           u2061 1BF8                           u2301 1B06  
                         u2221 0FE6                           u2141 0D5C                           u1421 2076  
                         u1501 1DC6                           u2070 1C1E                           u2310 1B28  
                         u2230 1000                           u2150 0D70                           u1430 2088  
                         u1510 1DDA                           _LATB 000F8A                           u2071 1C1A  
                         u2311 1B24                           u2231 0FFC                           u2151 0D6C  
                         u1431 2084                           u1511 1DD6                           _LATC 000F8B  
                         u2080 1C3C                           u2320 1B48                           u2240 1014  
                         u2160 0DA6                           u1600 08C8                           u2400 1A7C  
                         u1440 1E74                           u1520 1E14                           u2081 1C38  
                         u2321 1B44                           u2241 1010                           u2161 0DA2  
                         u1601 08C4                           u2401 1A78                           u2090 1C6C  
                         u2330 1B98                           u2250 102E                           u2170 0DB6  
                         u1610 0904                           u2410 16EA                           u1450 1E90  
                         u1530 1E4A                           u2091 1C68                           u2331 1B94  
                         u2251 102A                           u2171 0DB2                           u1611 0900  
                         u2411 16E6                           u1451 1E8C                           u1531 1E46  
                         u2260 1076                           u2180 0F30                           u1700 0A1E  
                         u1620 0912                           u1540 082C                           u2340 19AE  
                         u2500 1878                           u2420 16F8                           u2261 1072  
                         u1701 0A1A                           u1621 090E                           u1541 0828  
                         u2341 19AA                           u2501 1874                           u2421 16F4  
                         u1445 1E6A                           u2270 10A4                           u2190 0F8A  
                         u1710 0A50                           u1630 0980                           u1550 083E  
                         u2350 19E2                           u2430 1754                           u1470 1EFA  
                         u2510 1F62                           u2271 10A0                           u2191 0F86  
                         u1711 0A4C                           u1631 097C                           u1551 083A  
                         u2431 1750                           u1471 1EF6                           u1527 1E0A  
                         u2280 10DE                           u1800 0B98                           u1720 0A5E  
                         u1640 0998                           u1560 084E                           u2360 1A10  
                         u2440 17AA                           u1480 1F2A                           u1464 1EB0  
                         u2600 12CE                           u2520 1F72                           u2281 10DA  
                         u2185 0F26                           u1801 0B94                           u1721 0A5A  
                         u1641 0992                           u1561 084A                           u2361 1A0C  
                         u2441 17A6                           u1481 1F26                           u1465 1EAA  
                         u2601 12CA                           u2521 1F6E                           u2290 1ACC  
                         u1810 0BA8                           u1730 0A7C                           u1650 099A  
                         u1570 0890                           u2370 1A24                           u2450 17F4  
                         u1490 1D86                           u2610 12F0                           u2530 1F82  
                         u2291 1AC8                           u1811 0BA4                           u1731 0A78  
                         u1571 088C                           u2371 1A20                           u2355 19D8  
                         u2451 17F0                           u1491 1D82                           u2611 12EC  
                         u2531 1F7E                           u1900 0C90                           u1820 0BBA  
                         u1740 0AB4                           u1660 09C2                           u1580 08A6  
                         u2380 1A4C                           u2460 1812                           u2620 1382  
                         u2700 150A                           u2540 215A                           u1901 0C8C  
                         u1821 0BB6                           u1741 0AB0                           u1661 09BE  
                         u1581 08A2                           u2381 1A48                           u2461 180E  
                         u2621 137E                           u2517 1F58                           u2701 1506  
                         u2541 2156                           u1910 0CA2                           u1830 0BD0  
                         u1750 0AFA                           u1670 09E0                           u1590 08B8  
                         u2390 1A6C                           u2470 1822                           u2630 1392  
                         u2550 238A                           u2710 1606                           u1911 0C9E  
                         u1831 0BCC                           u1751 0AF6                           u1671 09DC  
                         u1591 08B4                           u2391 1A68                           u2471 181E  
                         u2631 138E                           u2551 2386                           u2711 1602  
                         u1920 0CBE                           u1840 0BE6                           u1760 0B30  
                         u1680 0A00                           u2480 1830                           u2640 13A4  
                         u2720 1620                           u1921 0CBA                           u1841 0BE2  
                         u1761 0B2C                           u1681 09FC                           u2481 182C  
                         u2641 13A0                           u2561 1102                           u2721 161C  
                         u1850 0BFA                           u1770 0B40                           u1690 0A0E  
                         u2490 186A                           u2650 13D8                           u2570 11EA  
                         u2730 16A2                           u1851 0BF6                           u1771 0B3C  
                         u1691 0A0A                           u2491 1866                           u2651 13D4  
                         u2571 11E6                           u2731 169E                           u1860 0C14  
                         u1780 0B6C                           u1940 1D44                           u2660 1472  
                         u2580 121E                           u2740 16D6                           u1861 0C10  
                         u1781 0B68                           u1941 1D40                           u2661 146E  
                         u2581 121A                           u2741 16D2                           u1870 0C4E  
                         u1790 0B7C                           u1950 1D70                           u2670 1480  
                         u2590 1250                           u1871 0C4A                           u1791 0B78  
                         u1951 1D6C                           u2671 147C                           u2591 124C  
                         u2807 2014                           u1880 0C60                           u2680 1492  
                         u1960 22F0                           u1881 0C5C                           u2681 148E  
                         u1961 22EC                           u2817 22CE                           u1890 0C70  
                         u1938 1D04                           u2690 14F8                           u1970 23CC  
                         u1891 0C6C                           u1939 1D18                           u2691 14F4  
                         u1971 23C8                           u2827 23AA                           u1980 189E  
                         u1981 189A                           u2837 2218                           u1990 18C0  
                         u1991 18BC                           u2797 2292                           _call 2484  
                         _head 007C                           _main 226C                           _exit 2454  
                         _send 1D72         __size_of_OledApi_begin 0032                           fsr0h 000FEA  
                         _slot 007A                           indf0 000FEF                           fsr2h 000FDA  
                         fsr0l 000FE9                           indf2 000FDF                           fsr1l 000FE1  
                         fsr2l 000FD9         __size_of_OledApi_clear 0020                           prodh 000FF4  
                         prodl 000FF3                           start 0000            OledApi_createChar@i 0024  
                __CFG_IESO$OFF 000000                  __CFG_MCLRE$ON 000000                   ___param_bank 000000  
        __size_of_ADC_Api_init 0040      __size_of_OledApi_printNum 03D0                   command@value 0020  
    __size_of_OledApi_printStr 009C                  __CFG_PLLDIV$1 000000                 __CFG_CCP2MX$ON 000000  
                        ?_call 0001                  ___fltol@sign1 0009                __end_of___aldiv 1998  
              __end_of___almod 1C8E                __end_of___fladd 0CD2                          ?_main 0001  
                        ?_exit 000B                          ?_send 0013                __end_of___flmul 10FC  
              __end_of___flsub 21EC                __end_of___fltol 1A9E                          _PORTC 000F82  
                __CFG_USBDIV$1 000000                          _TRISB 000F93                          _TRISC 000F94  
                __CFG_PWRT$OFF 000000                  __CFG_WRT0$OFF 000000                  __CFG_WRT1$OFF 000000  
                __CFG_WRT2$OFF 000000                  __CFG_WRT3$OFF 000000                 __CFG_EBTR0$OFF 000000  
               __CFG_FCMEN$OFF 000000                 __CFG_EBTR1$OFF 000000                 __CFG_EBTR2$OFF 000000  
                        __Exit 247E                 __CFG_EBTR3$OFF 000000                __end_of_command 23F4  
                __CFG_WRTB$OFF 000000                  __CFG_WRTC$OFF 000000                  __CFG_WRTD$OFF 000000  
               __CFG_EBTRB$OFF 000000                          call@p 0001               ?_SPI_Api_sendBit 0001  
                        _setup 1FC8                  ?_OledApi_home 0001                  ?_OledApi_init 0001  
                        _write 23F4                          pclath 000FFA                          tablat 000FF5  
                        send@p 001D                   _ADC_Api_init 21EC                          status 000FD8  
      __size_of_OledApi_printf 020C                 __CFG_PBADEN$ON 000000            _OledApi_printf$1149 0051  
              __initialization 20B4                   __end_of_call 2486                   __end_of_main 22AA  
                 __end_of_exit 2466                   __end_of_send 1E50       __size_of___funcs_on_exit 00E4  
              ??_SPI_Api_begin 0006                         ??_call 0003                         ??_main 005A  
                _OledApi_begin 2346                         ??_exit 000D                  _OledApi_clear 239E  
                       ??_send 0017                  __activetblptr 000002                         ?__Exit 0001  
               ??_OledApi_home 0021                 ??_OledApi_init 0001                         ?_setup 0001  
                       ?_write 0001       SPI_Api_setSpiDevice@mask 0009                   __displaymode 007F  
             __end_of___xxtofl 188C                 __CFG_XINST$OFF 000000    __size_of_SPI_Api_initialize 001C  
                       ___flge 1A9E                      ??___aldiv 0009                      ??___almod 0009  
                    ??___fladd 0009              OledApi_begin@cols 0001                 __CFG_STVREN$ON 000000  
                    ??___flmul 0009                      ??___flsub 0019                      ??___fltol 0005  
            OledApi_begin@rows 0022            OledApi_init@_enable 0002                         clear_0 20EC  
                       clear_1 20F8                 ?_OledApi_begin 0022              ?_SPI_Api_sendWord 0007  
               ?_OledApi_clear 0001                      ??_command 0020             ??_SPI_Api_sendWord 000B  
                 __pdataCOMRAM 005F                   __mediumconst 0000                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8                  send@head_sent 001F  
 __end_of_SPI_Api_setSpiDevice 20B4           ___funcs_on_exit@func 0007                     ___flge@ff1 0019  
                   ___flge@ff2 001D               __end_of_writeStr 2454                   ___xxtofl@arg 000B  
                 ___xxtofl@exp 000A                   ___xxtofl@val 0001                     __accesstop 0060  
      __end_of__initialization 2104                     ___config24 0071                   ?_SPI_Api_end 0001  
                ___rparam_used 000001                     ___fltol@f1 0001                 __pcstackCOMRAM 0001  
        _OledApi_setCursor$310 0023               _OledApi_printNum 10FC                  __end_of__Exit 2484  
             _OledApi_printStr 1F2C                   __pidataBANK0 2466        __size_of_ADC_Api_config 004A  
                __end_of_setup 2044                  __end_of_write 240E              ??___funcs_on_exit 0003  
                      ??__Exit 0003                        ??_setup 002A                        ??_write 0020  
                   __pbssBANK0 0060                     __pbssBANK1 0100             SPI_Api_sendBit@val 0006  
               _OledApi_printf 14CC    __size_of_OledApi_createChar 004E         __size_of_DIGITAL_WRITE 0034  
    OledApi_printf@findingSpec 0055          OledApi_printNum@F2936 0060                    ___SPIconfig 0077  
                      ?___flge 0019                ??_OledApi_begin 0023           __end_of_OledApi_home 247E  
         __end_of_OledApi_init 22DE                ??_OledApi_clear 0021                OledApi_printf@s 004A  
        OledApi_printNum@fract 0040          OledApi_printNum@whole 0044                      ?___xxtofl 0001  
         SPI_Api_sendWord@mask 000F    SPI_Api_setSpiDevice@_config 0006           SPI_Api_sendWord@word 0007  
       __end_of_OledApi_printf 16D8          OledApi_printStr@count 0029                __CFG_VREGEN$OFF 000000  
                      __Hparam 0000              OledApi_printf@dec 0057              OledApi_printNum@c 0048  
            OledApi_printNum@i 003E              OledApi_printNum@s 002D                        __Lparam 0000  
            OledApi_printStr@s 0025                        ___aldiv 188C                __size_of___flge 0104  
                      ___almod 1BA2                        ___fladd 0812                        ___flmul 0CD2  
                      ___flsub 21A6                        ___fltol 1998           _SPI_Api_setSpiDevice 2044  
    OledApi_createChar@charmap 0021                   __psmallconst 0800                        __pcinit 20B4  
                      __ramtop 0800                        __ptext0 226C                        __ptext1 1FC8  
                      __ptext2 22AA                        __ptext3 210E                        __ptext4 2346  
                      __ptext5 239E                        __ptext6 2476                        __ptext7 21EC  
                      __ptext8 23BE                        __ptext9 215C                      ?_writeStr 0020  
                      _command 23DA                        _builtin 0100                     ??___xxtofl 0005  
                _DIGITAL_WRITE 2312               ___aldiv@dividend 0001                __displaycontrol 0080  
                      fp__call 0000                ?_OledApi_printf 004A           end_of_initialization 2104  
          ADC_Api_init@_en_pin 0003                  __Lmediumconst 0000                        send@buf 0013  
     __size_of_SPI_Api_sendBit 0040           __size_of_SPI_Api_end 0018                 _ADC_Api_config 215C  
             ___aldiv@quotient 000B                        postdec1 000FE5                        postdec2 000FDD  
        ?_SPI_Api_setSpiDevice 0006                        postinc0 000FEE                        postinc2 000FDE  
                   ??_writeStr 0023          __end_of_SPI_Api_begin 243E                 ?_DIGITAL_WRITE 0001  
                  ___fladd@grs 0010                  ___xxtofl@sign 0009       __end_of_OledApi_printNum 14CC  
     __end_of_OledApi_printStr 1FC8      __size_of_SPI_Api_sendWord 00DC                    ___flmul@grs 000E  
            _OledApi_setCursor 22DE        OledApi@_displayfunction 007E     __end_of_SPI_Api_initialize 23DA  
           ?_OledApi_setCursor 0021         __end_of_ADC_Api_config 21A6          __size_of_OledApi_home 0008  
        __size_of_OledApi_init 0034              _OledApi_printSpec 2378                ___funcs_on_exit 1C8E  
          ??_OledApi_setCursor 0022                 __end_of___flge 1BA2             ?_OledApi_printSpec 0001  
                __pidataCOMRAM 2486            ??_OledApi_printSpec 0021            start_initialization 20B4  
    __end_of_OledApi_setCursor 2312                   _OledApi_home 2476                   _OledApi_init 22AA  
            _G_SPI_Api_u8Flags 005F            OledApi_printNum@dec 0029            OledApi_printNum@num 0025  
          OledApi_printf@count 0056                ?_ADC_Api_config 0001      __end_of_OledApi_printSpec 239E  
       ??_SPI_Api_setSpiDevice 0009                       ??___flge 0021              ??_SPI_Api_sendBit 0006  
                  __pdataBANK0 0085               __CFG_LPT1OSC$OFF 000000                ??_DIGITAL_WRITE 0005  
          ___funcs_on_exit@arg 0009                      ___fladd@a 0005                      ___fladd@b 0001  
                    ___config8 0074                      ___flmul@a 0005                      ___flmul@b 0001  
                  __pbssCOMRAM 005C                      ___flsub@a 0015                      ___flsub@b 0011  
            __size_of___xxtofl 01B4                  ?_ADC_Api_init 0001     __end_of_OledApi_createChar 215C  
      __end_of___funcs_on_exit 1D72                       ?___aldiv 0001                       ?___almod 0001  
                     ?___fladd 0001                       ?___flmul 0001                       ?___flsub 0011  
                     ?___fltol 0001          __end_of_OledApi_begin 2378          __end_of_OledApi_clear 23BE  
             ___almod@dividend 0001                       ?_command 0001                    __smallconst 0800  
             ??_OledApi_printf 004F              __size_of_writeStr 0016                 __size_of__Exit 0006  
   __size_of_OledApi_setCursor 0034                 __size_of_setup 007C                 __size_of_write 001A  
               ??_ADC_Api_init 0001               _SPI_Api_sendWord 1E50                ___aldiv@divisor 0005  
              ___aldiv@counter 0009            OledApi@_displaymode 005C         OledApi_printSpec@schar 0021  
   __size_of_OledApi_printSpec 0026               __CFG_WDTPS$32768 000000                     _ADCON1bits 000FC1  
                  writeStr@len 0022         OledApi@_displaycontrol 005D                      main@count 005E  
            ?_OledApi_printNum 0025              ?_OledApi_printStr 0025                      copy_data0 20C8  
           ??_OledApi_printNum 002A             ??_OledApi_printStr 0027                  ??_SPI_Api_end 0006  
             ?___funcs_on_exit 0001                       __Exit@ec 0001             OledApi_printf@args 004C  
           OledApi_printf@list 0058                       __Hrparam 0000                       __Lrparam 0000  
             __size_of___aldiv 010C               __size_of___almod 00EC               __size_of___fladd 04C0  
             __size_of___flmul 042A               __size_of___flsub 0046               __size_of___fltol 0106  
                     ___config 0082             _SPI_Api_initialize 23BE               __size_of_command 001A  
                     ___xxtofl 16D8                      send@count 0015            ?_SPI_Api_initialize 0001  
                     __ptext10 14CC                       __ptext11 1F2C                       __ptext20 1E50  
                     __ptext12 22DE                       __ptext21 222C                       __ptext13 23DA  
                     __ptext30 1998                       __ptext22 240E                       __ptext14 2378  
                     __ptext31 21A6                       __ptext23 2426                       __ptext15 23F4  
                     __ptext32 0812                       __ptext24 2312                       __ptext16 10FC  
                     __ptext33 0CD2                       __ptext25 2454                       __ptext17 243E  
                     __ptext34 1A9E                       __ptext26 1C8E                       __ptext18 1D72  
                     __ptext35 1BA2                       __ptext27 2484                       __ptext19 2044  
                     __ptext36 188C                       __ptext28 247E                       __ptext37 0000  
                     __ptext29 16D8     OledApi_createChar@location 0023                ___almod@divisor 0005  
              ___almod@counter 0009               ??_ADC_Api_config 0013           OledApi_setCursor@col 0022  
         OledApi_setCursor@row 0021                  __size_of_call 0002                  __size_of_main 003E  
                __size_of_exit 0012                  __size_of_send 00DE                _SPI_Api_sendBit 222C  
       __size_of_SPI_Api_begin 0018           ??_SPI_Api_initialize 0001                     write@value 0020  
          __end_of_SPI_Api_end 2426               __displayfunction 0081           __end_of_ADC_Api_init 222C  
                     _writeStr 243E          __CFG_CPUDIV$OSC1_PLL2 000000                       exit@code 000B  
                     send@mode 0018                       send@word 0019                     _OSCCONbits 000FD3  
__size_of_SPI_Api_setSpiDevice 0070             _OledApi_createChar 210E       __end_of_SPI_Api_sendWord 1F2C  
          __CFG_FOSC$INTOSC_EC 000000          __end_of_DIGITAL_WRITE 2346                  _SPI_Api_begin 2426  
          ?_OledApi_createChar 0021                   ___aldiv@sign 000A                    _SSPCON1bits 000FC6  
      __end_of_SPI_Api_sendBit 226C                  ___fladd@signs 000D                   ___almod@sign 000A  
                 ___fladd@aexp 000E                   ___fladd@bexp 000F                    _SPI_Api_end 240E  
         ??_OledApi_createChar 0023  
